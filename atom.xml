<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HelloDog</title>
  
  <subtitle>Keep Calm and Carry On</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wsgzao.github.io/"/>
  <updated>2019-03-01T10:54:07.486Z</updated>
  <id>https://wsgzao.github.io/</id>
  
  <author>
    <name>wsgzao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>rsync 安装使用实践</title>
    <link href="https://wsgzao.github.io/post/rsync/"/>
    <id>https://wsgzao.github.io/post/rsync/</id>
    <published>2019-03-02T06:59:49.000Z</published>
    <updated>2019-03-01T10:54:07.486Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Rsync 代表 “remote sync”，它是本地和远程主机文件同步工具。它只同步更改的文件，以此实现最小化传输数据。rsync 的使用场景非常丰富，相信大家会经常使用，这里做下简单的总结。</p><blockquote><p>rsync 安装使用实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 03 月 01 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/rsync/">https://wsgzao.github.io/post/rsync/</a></p><p><strong> 扩展阅读 </strong></p><p>rsync - <a href="https://www.samba.org/rsync/" target="_blank" rel="noopener">https://www.samba.org/rsync/</a></p><hr><h2 id="rsync-简介"><a href="#rsync-简介" class="headerlink" title="rsync 简介"></a>rsync 简介</h2><p>rsync is a file transfer program capable of efficient remote update via a fast differencing algorithm.</p><p>rsync 是类 unix 系统下的数据镜像备份工具，从软件的命名上就可以看出来了 ——remote sync。它的特性如下：</p><p>1、可以镜像保存整个目录树和文件系统<br>2、可以很容易做到保持原来文件的权限、时间、软硬链接等等<br>3、无须特殊权限即可安装<br>4、优化的流程，文件传输效率高<br>5、可以使用 rsh、ssh 等方式来传输文件，当然也可以通过直接的 socket 连接<br>6、支持匿名传输<br>在使用 rsync 进行远程同步时，可以使用两种方式：远程 Shell 方式（用户验证由 ssh 负责）和 C/S 方式（即客户连接远程 rsync 服务器，用户验证由 rsync 服务器负责）。</p><p>无论本地同步目录还是远程同步数据，首次运行时将会把全部文件拷贝一次，以后再运行时将只拷贝有变化的文件（对于新文件）或文件的变化部分（对于原有文件）。</p><h2 id="rsync-配置文件"><a href="#rsync-配置文件" class="headerlink" title="rsync 配置文件"></a>rsync 配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑 rsync 配置文件</span></span><br><span class="line">vim /etc/rsync.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># /etc/rsyncd: configuration file for rsync daemon mode</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># See rsyncd.conf man page for more options.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># configuration example:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># uid = nobody</span></span><br><span class="line"><span class="comment"># gid = nobody</span></span><br><span class="line"><span class="comment"># use chroot = yes</span></span><br><span class="line"><span class="comment"># max connections = 4</span></span><br><span class="line"><span class="comment"># pid file = /var/run/rsyncd.pid</span></span><br><span class="line"><span class="comment"># exclude = lost+found/</span></span><br><span class="line"><span class="comment"># transfer logging = yes</span></span><br><span class="line"><span class="comment"># timeout = 900</span></span><br><span class="line"><span class="comment"># ignore nonreadable = yes</span></span><br><span class="line"><span class="comment"># dont compress   = *.gz *.tgz *.zip *.z *.Z *.rpm *.deb *.bz2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [ftp]</span></span><br><span class="line"><span class="comment">#        path = /home/ftp</span></span><br><span class="line"><span class="comment">#        comment = ftp export area</span></span><br></pre></td></tr></table></figure><p>rsyncd.conf 官方文档请参考<br><a href="https://www.samba.org/ftp/rsync/rsyncd.conf.html" target="_blank" rel="noopener">https://www.samba.org/ftp/rsync/rsyncd.conf.html</a></p><h2 id="rsync-常用参数"><a href="#rsync-常用参数" class="headerlink" title="rsync 常用参数"></a>rsync 常用参数</h2><p>注: 在指定复制源时，路径是否有最后的 “/” 有不同的含义，例如：</p><p>/data  表示将整个 /data 目录复制到目标目录<br>/data/ 表示将 /data/ 目录中的所有内容复制到目标目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br></pre></td><td class="code"><pre><span class="line">rsync is a file transfer program capable of efficient remote update via a fast differencing algorithm.</span><br><span class="line"></span><br><span class="line">Usage: rsync [OPTION]... SRC [SRC]... DEST</span><br><span class="line">  or   rsync [OPTION]... SRC [SRC]... [USER@]HOST:DEST</span><br><span class="line">  or   rsync [OPTION]... SRC [SRC]... [USER@]HOST::DEST</span><br><span class="line">  or   rsync [OPTION]... SRC [SRC]... rsync://[USER@]HOST[:PORT]/DEST</span><br><span class="line">  or   rsync [OPTION]... [USER@]HOST:SRC [DEST]</span><br><span class="line">  or   rsync [OPTION]... [USER@]HOST::SRC [DEST]</span><br><span class="line">  or   rsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]</span><br><span class="line">The <span class="string">':'</span> usages connect via remote shell, <span class="keyword">while</span> <span class="string">'::'</span> &amp; <span class="string">'rsync://'</span> usages connect</span><br><span class="line">to an rsync daemon, and require SRC or DEST to start with a module name.</span><br><span class="line"></span><br><span class="line">Options</span><br><span class="line"> -v, --verbose               increase verbosity</span><br><span class="line">     --info=FLAGS            fine-grained informational verbosity</span><br><span class="line">     --debug=FLAGS           fine-grained debug verbosity</span><br><span class="line">     --msgs2stderr           special output handling <span class="keyword">for</span> debugging</span><br><span class="line"> -q, --quiet                 suppress non-error messages</span><br><span class="line">     --no-motd               suppress daemon-mode MOTD (see manpage caveat)</span><br><span class="line"> -c, --checksum              skip based on checksum, not mod-time &amp; size</span><br><span class="line"> -a, --archive               archive mode; equals -rlptgoD (no -H,-A,-X)</span><br><span class="line">     --no-OPTION             turn off an implied OPTION (e.g. --no-D)</span><br><span class="line"> -r, --recursive             recurse into directories</span><br><span class="line"> -R, --relative              use relative path names</span><br><span class="line">     --no-implied-dirs       don<span class="string">'t send implied dirs with --relative</span></span><br><span class="line"><span class="string"> -b, --backup                make backups (see --suffix &amp; --backup-dir)</span></span><br><span class="line"><span class="string">     --backup-dir=DIR        make backups into hierarchy based in DIR</span></span><br><span class="line"><span class="string">     --suffix=SUFFIX         set backup suffix (default ~ w/o --backup-dir)</span></span><br><span class="line"><span class="string"> -u, --update                skip files that are newer on the receiver</span></span><br><span class="line"><span class="string">     --inplace               update destination files in-place (SEE MAN PAGE)</span></span><br><span class="line"><span class="string">     --append                append data onto shorter files</span></span><br><span class="line"><span class="string">     --append-verify         like --append, but with old data in file checksum</span></span><br><span class="line"><span class="string"> -d, --dirs                  transfer directories without recursing</span></span><br><span class="line"><span class="string"> -l, --links                 copy symlinks as symlinks</span></span><br><span class="line"><span class="string"> -L, --copy-links            transform symlink into referent file/dir</span></span><br><span class="line"><span class="string">     --copy-unsafe-links     only"unsafe"symlinks are transformed</span></span><br><span class="line"><span class="string">     --safe-links            ignore symlinks that point outside the source tree</span></span><br><span class="line"><span class="string">     --munge-links           munge symlinks to make them safer (but unusable)</span></span><br><span class="line"><span class="string"> -k, --copy-dirlinks         transform symlink to a dir into referent dir</span></span><br><span class="line"><span class="string"> -K, --keep-dirlinks         treat symlinked dir on receiver as dir</span></span><br><span class="line"><span class="string"> -H, --hard-links            preserve hard links</span></span><br><span class="line"><span class="string"> -p, --perms                 preserve permissions</span></span><br><span class="line"><span class="string"> -E, --executability         preserve the file'</span>s executability</span><br><span class="line">     --chmod=CHMOD           affect file and/or directory permissions</span><br><span class="line"> -A, --acls                  preserve ACLs (implies --perms)</span><br><span class="line"> -X, --xattrs                preserve extended attributes</span><br><span class="line"> -o, --owner                 preserve owner (super-user only)</span><br><span class="line"> -g, --group                 preserve group</span><br><span class="line">     --devices               preserve device files (super-user only)</span><br><span class="line">     --copy-devices          copy device contents as regular file</span><br><span class="line">     --specials              preserve special files</span><br><span class="line"> -D                          same as --devices --specials</span><br><span class="line"> -t, --<span class="built_in">times</span>                 preserve modification <span class="built_in">times</span></span><br><span class="line"> -O, --omit-dir-times        omit directories from --<span class="built_in">times</span></span><br><span class="line"> -J, --omit-link-times       omit symlinks from --<span class="built_in">times</span></span><br><span class="line">     --super                 receiver attempts super-user activities</span><br><span class="line">     --fake-super            store/recover privileged attrs using xattrs</span><br><span class="line"> -S, --sparse                handle sparse files efficiently</span><br><span class="line">     --preallocate           allocate dest files before writing them</span><br><span class="line"> -n, --dry-run               perform a trial run with no changes made</span><br><span class="line"> -W, --whole-file            copy files whole (without delta-xfer algorithm)</span><br><span class="line"> -x, --one-file-system       don<span class="string">'t cross filesystem boundaries</span></span><br><span class="line"><span class="string"> -B, --block-size=SIZE       force a fixed checksum block-size</span></span><br><span class="line"><span class="string"> -e, --rsh=COMMAND           specify the remote shell to use</span></span><br><span class="line"><span class="string">     --rsync-path=PROGRAM    specify the rsync to run on the remote machine</span></span><br><span class="line"><span class="string">     --existing              skip creating new files on receiver</span></span><br><span class="line"><span class="string">     --ignore-existing       skip updating files that already exist on receiver</span></span><br><span class="line"><span class="string">     --remove-source-files   sender removes synchronized files (non-dirs)</span></span><br><span class="line"><span class="string">     --del                   an alias for --delete-during</span></span><br><span class="line"><span class="string">     --delete                delete extraneous files from destination dirs</span></span><br><span class="line"><span class="string">     --delete-before         receiver deletes before transfer, not during</span></span><br><span class="line"><span class="string">     --delete-during         receiver deletes during the transfer</span></span><br><span class="line"><span class="string">     --delete-delay          find deletions during, delete after</span></span><br><span class="line"><span class="string">     --delete-after          receiver deletes after transfer, not during</span></span><br><span class="line"><span class="string">     --delete-excluded       also delete excluded files from destination dirs</span></span><br><span class="line"><span class="string">     --ignore-missing-args   ignore missing source args without error</span></span><br><span class="line"><span class="string">     --delete-missing-args   delete missing source args from destination</span></span><br><span class="line"><span class="string">     --ignore-errors         delete even if there are I/O errors</span></span><br><span class="line"><span class="string">     --force                 force deletion of directories even if not empty</span></span><br><span class="line"><span class="string">     --max-delete=NUM        don'</span>t delete more than NUM files</span><br><span class="line">     --max-size=SIZE         don<span class="string">'t transfer any file larger than SIZE</span></span><br><span class="line"><span class="string">     --min-size=SIZE         don'</span>t transfer any file smaller than SIZE</span><br><span class="line">     --partial               keep partially transferred files</span><br><span class="line">     --partial-dir=DIR       put a partially transferred file into DIR</span><br><span class="line">     --delay-updates         put all updated files into place at transfer<span class="string">'s end</span></span><br><span class="line"><span class="string"> -m, --prune-empty-dirs      prune empty directory chains from the file-list</span></span><br><span class="line"><span class="string">     --numeric-ids           don'</span>t map uid/gid values by user/group name</span><br><span class="line">     --usermap=STRING        custom username mapping</span><br><span class="line">     --groupmap=STRING       custom groupname mapping</span><br><span class="line">     --chown=USER:GROUP      simple username/groupname mapping</span><br><span class="line">     --timeout=SECONDS       <span class="built_in">set</span> I/O timeout <span class="keyword">in</span> seconds</span><br><span class="line">     --contimeout=SECONDS    <span class="built_in">set</span> daemon connection timeout <span class="keyword">in</span> seconds</span><br><span class="line"> -I, --ignore-times          don<span class="string">'t skip files that match in size and mod-time</span></span><br><span class="line"><span class="string"> -M, --remote-option=OPTION  send OPTION to the remote side only</span></span><br><span class="line"><span class="string">     --size-only             skip files that match in size</span></span><br><span class="line"><span class="string">     --modify-window=NUM     compare mod-times with reduced accuracy</span></span><br><span class="line"><span class="string"> -T, --temp-dir=DIR          create temporary files in directory DIR</span></span><br><span class="line"><span class="string"> -y, --fuzzy                 find similar file for basis if no dest file</span></span><br><span class="line"><span class="string">     --compare-dest=DIR      also compare destination files relative to DIR</span></span><br><span class="line"><span class="string">     --copy-dest=DIR         ... and include copies of unchanged files</span></span><br><span class="line"><span class="string">     --link-dest=DIR         hardlink to files in DIR when unchanged</span></span><br><span class="line"><span class="string"> -z, --compress              compress file data during the transfer</span></span><br><span class="line"><span class="string">     --compress-level=NUM    explicitly set compression level</span></span><br><span class="line"><span class="string">     --skip-compress=LIST    skip compressing files with a suffix in LIST</span></span><br><span class="line"><span class="string"> -C, --cvs-exclude           auto-ignore files the same way CVS does</span></span><br><span class="line"><span class="string"> -f, --filter=RULE           add a file-filtering RULE</span></span><br><span class="line"><span class="string"> -F                          same as --filter='</span>dir-merge /.rsync-filter<span class="string">'</span></span><br><span class="line"><span class="string">                             repeated: --filter='</span>- .rsync-filter<span class="string">'</span></span><br><span class="line"><span class="string">     --exclude=PATTERN       exclude files matching PATTERN</span></span><br><span class="line"><span class="string">     --exclude-from=FILE     read exclude patterns from FILE</span></span><br><span class="line"><span class="string">     --include=PATTERN       don'</span>t exclude files matching PATTERN</span><br><span class="line">     --include-from=FILE     <span class="built_in">read</span> include patterns from FILE</span><br><span class="line">     --files-from=FILE       <span class="built_in">read</span> list of <span class="built_in">source</span>-file names from FILE</span><br><span class="line"> -0, --from0                 all *-from/filter files are delimited by 0s</span><br><span class="line"> -s, --protect-args          no space-splitting; only wildcard special-chars</span><br><span class="line">     --address=ADDRESS       <span class="built_in">bind</span> address <span class="keyword">for</span> outgoing socket to daemon</span><br><span class="line">     --port=PORT             specify double-colon alternate port number</span><br><span class="line">     --sockopts=OPTIONS      specify custom TCP options</span><br><span class="line">     --blocking-io           use blocking I/O <span class="keyword">for</span> the remote shell</span><br><span class="line">     --stats                 give some file-transfer stats</span><br><span class="line"> -8, --8-bit-output          leave high-bit chars unescaped <span class="keyword">in</span> output</span><br><span class="line"> -h, --human-readable        output numbers <span class="keyword">in</span> a human-readable format</span><br><span class="line">     --progress              show progress during transfer</span><br><span class="line"> -P                          same as --partial --progress</span><br><span class="line"> -i, --itemize-changes       output a change-summary <span class="keyword">for</span> all updates</span><br><span class="line">     --out-format=FORMAT     output updates using the specified FORMAT</span><br><span class="line">     --<span class="built_in">log</span>-file=FILE         <span class="built_in">log</span> what we<span class="string">'re doing to the specified FILE</span></span><br><span class="line"><span class="string">     --log-file-format=FMT   log updates using the specified FMT</span></span><br><span class="line"><span class="string">     --password-file=FILE    read daemon-access password from FILE</span></span><br><span class="line"><span class="string">     --list-only             list the files instead of copying them</span></span><br><span class="line"><span class="string">     --bwlimit=RATE          limit socket I/O bandwidth</span></span><br><span class="line"><span class="string">     --outbuf=N|L|B          set output buffering to None, Line, or Block</span></span><br><span class="line"><span class="string">     --write-batch=FILE      write a batched update to FILE</span></span><br><span class="line"><span class="string">     --only-write-batch=FILE like --write-batch but w/o updating destination</span></span><br><span class="line"><span class="string">     --read-batch=FILE       read a batched update from FILE</span></span><br><span class="line"><span class="string">     --protocol=NUM          force an older protocol version to be used</span></span><br><span class="line"><span class="string">     --iconv=CONVERT_SPEC    request charset conversion of filenames</span></span><br><span class="line"><span class="string">     --checksum-seed=NUM     set block/file checksum seed (advanced)</span></span><br><span class="line"><span class="string"> -4, --ipv4                  prefer IPv4</span></span><br><span class="line"><span class="string"> -6, --ipv6                  prefer IPv6</span></span><br><span class="line"><span class="string">     --version               print version number</span></span><br><span class="line"><span class="string">(-h) --help                  show this help (-h is --help only if used alone)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Use"rsync --daemon --help"to see the daemon-mode command-line options.</span></span><br><span class="line"><span class="string">Please see the rsync(1) and rsyncd.conf(5) man pages for full documentation.</span></span><br><span class="line"><span class="string">See http://rsync.samba.org/ for updates, bug reports, and answers</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># rsync 常用参数 </span></span><br><span class="line"><span class="string">-v : 展示详细的同步信息</span></span><br><span class="line"><span class="string">-a : 归档模式，相当于 -rlptgoD</span></span><br><span class="line"><span class="string">    -r : 递归目录</span></span><br><span class="line"><span class="string">    -l : 同步软连接文件</span></span><br><span class="line"><span class="string">    -p : 保留权限</span></span><br><span class="line"><span class="string">    -t : 将源文件的"modify time"同步到目标机器</span></span><br><span class="line"><span class="string">    -g : 保持文件属组</span></span><br><span class="line"><span class="string">    -o : 保持文件属主</span></span><br><span class="line"><span class="string">    -D : 和 --devices --specials 一样，保持设备文件和特殊文件</span></span><br><span class="line"><span class="string">-z : 发送数据前，先压缩再传输</span></span><br><span class="line"><span class="string">-H : 保持硬链接</span></span><br><span class="line"><span class="string">-n : 进行试运行，不作任何更改</span></span><br><span class="line"><span class="string">-P same as --partial --progress</span></span><br><span class="line"><span class="string">    --partial : 支持断点续传</span></span><br><span class="line"><span class="string">    --progress : 展示传输的进度</span></span><br><span class="line"><span class="string">--delete : 如果源文件消失，目标文件也会被删除</span></span><br><span class="line"><span class="string">--delete-excluded : 指定要在目的端删除的文件</span></span><br><span class="line"><span class="string">--delete-after : 默认情况下，rsync 是先清理目的端的文件再开始数据同步；如果使用此选项，则 rsync 会先进行数据同步，都完成后再删除那些需要清理的文件。</span></span><br><span class="line"><span class="string">--exclude=PATTERN : 排除匹配 PATTERN 的文件</span></span><br><span class="line"><span class="string">--exclude-from=FILE : 如果要排除的文件很多，可以统一写在某一文件中</span></span><br><span class="line"><span class="string">-e ssh : 使用 SSH 加密隧道传输</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 远程 Shell 方式</span></span><br><span class="line"><span class="string">rsync [OPTION]... SRC [SRC]... [USER@]HOST:DEST # 执行“推” 操作 </span></span><br><span class="line"><span class="string">or   rsync [OPTION]... [USER@]HOST:SRC [DEST]   # 执行“拉” 操作 </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 远程 C/S 方式</span></span><br><span class="line"><span class="string">rsync [OPTION]... SRC [SRC]... [USER@]HOST::DEST                    # 执行“推” 操作 </span></span><br><span class="line"><span class="string">or   rsync [OPTION]... SRC [SRC]... rsync://[USER@]HOST[:PORT]/DEST # 执行“推” 操作 </span></span><br><span class="line"><span class="string">or   rsync [OPTION]... [USER@]HOST::SRC [DEST]                      # 执行“拉” 操作 </span></span><br><span class="line"><span class="string">or   rsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]        # 执行“拉” 操作</span></span><br></pre></td></tr></table></figure><h2 id="rsync-同步方式"><a href="#rsync-同步方式" class="headerlink" title="rsync 同步方式"></a>rsync 同步方式</h2><p>Rsync 远程同步主要有两种方式：使用远程 shell（ssh 或 rsh） 或使用 rsync 的 daemon 方式</p><p>rsync 命令和 ssh，scp 命令有点相似。</p><p>我们创建两个测试目录和一些文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mkdir dir1</span><br><span class="line">mkdir dir2</span><br><span class="line">touch dir1/somefile&#123;1..100&#125;</span><br><span class="line"><span class="comment"># dir1 中有 100 文件，dir2 中为空。使用 rsync 把 dir1 内容同步到 dir2，-r 选项代表递归，在同步目录时使用。</span></span><br><span class="line">rsync -r dir1/ dir2</span><br><span class="line"><span class="comment"># 你也可以使用 -a 选项，代表同步所有，包括修改时间、群组、权限、特殊文件、也包括递归。</span></span><br><span class="line">rsync -anv dir1/ dir2</span><br><span class="line"><span class="comment"># 注意上面的 dir1 / 中的 “/” 不能少，它代表同步目录下文件， 如果没有 “/” 代表同步这个目录。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 和远程主机进行同步目录首先，你要确保有远程主机的 SSH 访问权限</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把本地目录同步到远程主机：</span></span><br><span class="line">rsync -a dir1/ root@linux:~/dir2</span><br><span class="line"><span class="comment"># 把远程主机目录同步到本地：</span></span><br><span class="line">rsync -a root@linux:~/dir2/ dir1</span><br></pre></td></tr></table></figure><h3 id="本地文件同步"><a href="#本地文件同步" class="headerlink" title="本地文件同步"></a>本地文件同步</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果没有 desc 目录，会自动创建</span></span><br><span class="line">rsync -avH /opt/resource/ /tmp/desc/</span><br></pre></td></tr></table></figure><h3 id="远程文件同步-–shell-方式"><a href="#远程文件同步-–shell-方式" class="headerlink" title="远程文件同步 –shell 方式"></a>远程文件同步 –shell 方式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从本地传到远端，目标文件会被写成 ssh 登录用户的属组和属主（如下 www）</span></span><br><span class="line">rsync -avH /opt/nginx-1.12.1/ www@172.18.50.125:/tmp/nginx/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 ssh 加密隧道方式传输，保障数据的安全性</span></span><br><span class="line">rsync -avHe ssh /opt/nginx-1.12.1/ www@172.18.50.125:/tmp/nginx/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从远端传到本地，只要对目标文件有读的权限，就可以同步到本地</span></span><br><span class="line">rsync -avH www@172.18.50.125:/tmp/nginx/ /tmp/nginx/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果远程服务器 ssh 端口不是默认的 22</span></span><br><span class="line">rsync -avHe <span class="string">"ssh -p 11222"</span> /opt/nginx-1.12.1/ www@172.18.50.125:/tmp/nginx/</span><br></pre></td></tr></table></figure><h3 id="远程文件同步-–daemon-方式"><a href="#远程文件同步-–daemon-方式" class="headerlink" title="远程文件同步 –daemon 方式"></a>远程文件同步 –daemon 方式</h3><blockquote><p>rsync 服务端配置</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建 rsync 服务的目录和配置文件 (可选)</span></span><br><span class="line">mkdir /etc/rsync </span><br><span class="line"><span class="built_in">cd</span> /etc/rsync</span><br><span class="line">touch rsyncd.conf</span><br><span class="line">touch rsyncd.secrets</span><br><span class="line">touch rsyncd.motd</span><br><span class="line">chmod 600 rsyncd.secrets</span><br><span class="line"></span><br><span class="line"><span class="comment">### rsyncd.conf 文件的配置</span></span><br><span class="line">vim /etc/rsync/rsyncd.conf</span><br><span class="line"><span class="comment"># /etc/rsyncd: configuration file for rsync daemon mode</span></span><br><span class="line"><span class="comment"># See rsyncd.conf man page for more options.</span></span><br><span class="line"><span class="comment"># 传输文件使用的用户和用户组，如果是从服务器 =&gt; 客户端，要保证 www 用户对文件有读取的权限；如果是从客户端 =&gt; 服务端，要保证 www 对文件有写权限。</span></span><br><span class="line">uid = www</span><br><span class="line">gid = www</span><br><span class="line"><span class="comment"># 允许 chroot，提升安全性，客户端连接模块，首先 chroot 到模块 path 参数指定的目录下，chroot 为 yes 时必须使用 root 权限，且不能备份 path 路径外的链接文件</span></span><br><span class="line">use chroot = yes</span><br><span class="line"><span class="comment"># 只读</span></span><br><span class="line"><span class="built_in">read</span> only = no</span><br><span class="line"><span class="comment"># 只写</span></span><br><span class="line">write only = no</span><br><span class="line"><span class="comment"># 设定白名单，可以指定 IP 段（172.18.50.1/255.255.255.0）, 各个 Ip 段用空格分开</span></span><br><span class="line">hosts allow = 172.18.50.110 172.18.50.111</span><br><span class="line">hosts deny = *</span><br><span class="line"><span class="comment"># 允许的客户端最大连接数</span></span><br><span class="line">max connections = 4</span><br><span class="line"><span class="comment"># 欢迎文件的路径，非必须</span></span><br><span class="line">motd file = /etc/rsync/rsyncd.motd</span><br><span class="line"><span class="comment"># pid 文件路径</span></span><br><span class="line">pid file = /var/run/rsyncd.pid</span><br><span class="line"><span class="comment"># 记录传输文件日志</span></span><br><span class="line">transfer logging = yes</span><br><span class="line"><span class="comment"># 日志文件格式</span></span><br><span class="line"><span class="built_in">log</span> format = %t %a %m %f %b</span><br><span class="line"><span class="comment"># 指定日志文件</span></span><br><span class="line"><span class="built_in">log</span> file = /var/<span class="built_in">log</span>/rsync.log</span><br><span class="line"><span class="comment"># 剔除某些文件或目录，不同步</span></span><br><span class="line">exclude = lost+found/</span><br><span class="line"><span class="comment"># 设置超时时间</span></span><br><span class="line">timeout = 900</span><br><span class="line">ignore nonreadable = yes</span><br><span class="line"><span class="comment"># 设置不需要压缩的文件</span></span><br><span class="line">dont compress   = *.gz *.tgz *.zip *.z *.Z *.rpm *.deb *.bz2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模块，可以配置多个，使用如: sate@172.18.50.125::125to110</span></span><br><span class="line">[125to110]</span><br><span class="line"><span class="comment"># 模块的根目录，同步目录，要注意权限</span></span><br><span class="line">path = /tmp/nginx</span><br><span class="line"><span class="comment"># 是否允许列出模块内容</span></span><br><span class="line">list = no</span><br><span class="line"><span class="comment"># 忽略错误</span></span><br><span class="line">ignore errors</span><br><span class="line"><span class="comment"># 添加注释</span></span><br><span class="line">comment = ftp <span class="built_in">export</span> area</span><br><span class="line"><span class="comment"># 模块验证的用户名称，可使用空格或者逗号隔开多个用户名</span></span><br><span class="line">auth users = sate</span><br><span class="line"><span class="comment"># 模块验证密码文件 可放在全局配置里</span></span><br><span class="line">secrets file = /etc/rsync/rsyncd.secrets</span><br><span class="line"><span class="comment"># 剔除某些文件或目录，不同步</span></span><br><span class="line">exclude = lost+found/ conf/ man/</span><br><span class="line"></span><br><span class="line"><span class="comment">### rsyncd.secrets 文件的配置</span></span><br><span class="line">cat rsyncd.secrets </span><br><span class="line"><span class="comment"># 用户名: 密码</span></span><br><span class="line">sate:111111</span><br><span class="line"></span><br><span class="line"><span class="comment">### rsync 启动</span></span><br><span class="line">rsync --daemon --config=/etc/rsync/rsyncd.conf</span><br></pre></td></tr></table></figure><blockquote><p>rsync 客户端配置</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从 服务端 =&gt; 客户端 同步数据，会提示输入密码</span></span><br><span class="line">rsync -avzP --delete sate@172.18.50.125::125to110 /tmp/sync/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从 客户端 =&gt; 服务端 同步数据，会提示输入密码</span></span><br><span class="line">rsync -avzP --delete /tmp/sync/ sate@172.18.50.125::125to110</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注: 如果是 /tmp/sync，则同步 sync 目录；如果 /tmp/sync/，则同步 sync 目录下的文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 免密码同步，将密码写到文件，再通过 --password-file 指定该文件，注：该文件的权限必须是 600</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"111111"</span> &gt; /tmp/secrets.file</span><br><span class="line">chmod 600 /tmp/secrets.file</span><br><span class="line">rsync -avzP --delete --password-file=/tmp/secrets.file sate@172.18.50.125::125to110 /tmp/sync/</span><br><span class="line"></span><br><span class="line"><span class="comment"># --exclude 排除文件目录时，如果有多个同名目录的情况</span></span><br><span class="line"><span class="comment"># 目录结构</span></span><br><span class="line">tree</span><br><span class="line">.</span><br><span class="line">├── dir1</span><br><span class="line">│   └── <span class="built_in">test</span></span><br><span class="line">│       ├── 3.file</span><br><span class="line">│       ├── 4.file</span><br><span class="line">│       └── 5.file</span><br><span class="line">├── dir2</span><br><span class="line">└── <span class="built_in">test</span></span><br><span class="line">    ├── 1.file</span><br><span class="line">    ├── 2.file</span><br><span class="line">    └── 3.file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 情况一 ： 排除 /test 目录，同步其他目录（同步的是 / tmp/sync/ 下边的文件）</span></span><br><span class="line">rsync -avP --delete --password-file=/tmp/secrets.file --exclude=<span class="built_in">test</span>  /tmp/sync/ sate@172.18.50.125::125to110 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 会发现，该目录下所有 test 目录都被排除了，如果想只排除第一层目录的 test，可以如下（/ 代表所同步目录第一层）：</span></span><br><span class="line">rsync -avP --delete --password-file=/tmp/secrets.file --exclude=/<span class="built_in">test</span>/  /tmp/sync/ sate@172.18.50.125::125to110 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 情况二 ： 和情况一不同的是 同步的 /tmp/sync 这个目录（同步的是 / tmp/sync 目录本身，导致 exclude 后边的参数也会变化）</span></span><br><span class="line">rsync -avP --delete --password-file=/tmp/secrets.file --exclude=/sync/<span class="built_in">test</span>/  /tmp/sync sate@172.18.50.125::125to110</span><br></pre></td></tr></table></figure><h2 id="rsync-简化配置实践"><a href="#rsync-简化配置实践" class="headerlink" title="rsync 简化配置实践"></a>rsync 简化配置实践</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置服务端 rsyncd.conf</span></span><br><span class="line">vim /etc/rsyncd.conf</span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> only = no</span><br><span class="line">list = yes</span><br><span class="line">uid = root</span><br><span class="line">gid = root</span><br><span class="line"></span><br><span class="line">[backup]</span><br><span class="line">path= /data/</span><br><span class="line">hosts allow = 10.71.12.0/23</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置服务</span></span><br><span class="line">systemctl start rsyncd</span><br><span class="line">systemctl <span class="built_in">enable</span> rsyncd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 rsync 客户端</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑 backup.sh 同步脚本</span></span><br><span class="line">vim backup.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">SOURCE=<span class="variable">$1</span></span><br><span class="line">DEST=<span class="variable">$2</span></span><br><span class="line"></span><br><span class="line">CMD=<span class="string">"rsync -ravz --bwlimit=2000 <span class="variable">$1</span> rsync://&#123;&#123;log_server_ip&#125;&#125;:873/backup/<span class="variable">$2</span>"</span></span><br><span class="line"></span><br><span class="line">PROCS=$(pgrep -f <span class="string">"&#123;&#123;log_server_ip&#125;&#125;:873/backup/<span class="variable">$2</span>"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"x"</span> != <span class="string">"x<span class="variable">$PROCS</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">       <span class="built_in">echo</span> <span class="string">"not finished"</span></span><br><span class="line">       <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$CMD</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 crontab</span></span><br><span class="line">vim /etc/crontab</span><br><span class="line">15 * * * * root <span class="built_in">cd</span> /opt/sa_scripts/ &amp;&amp; ./backup.sh /var/<span class="built_in">log</span>/ocha/pos_python_server/  10.71.12.89/$(date +\%Y-\%m)</span><br></pre></td></tr></table></figure><h2 id="rsync-有用的选项"><a href="#rsync-有用的选项" class="headerlink" title="rsync 有用的选项"></a>rsync 有用的选项</h2><p>-z 选项，压缩传输的文件</p><p>rsync -az source dest</p><p>-P 选项非常有用，它是 -progress 和 -partial 的组合。第一个选项是用来显示传输进度条，第二个选项允许断点续传和增量传输：</p><p>rsync -azP source dest</p><p>–bwlimit 选项，限制传输带宽，参数值的默认单位是 KBPS，也就是每秒多少 KB</p><p>rsync -avzP–bwlimit=100</p>]]></content>
    
    <summary type="html">
    
      rsync安装使用实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>MacBook 使用指北</title>
    <link href="https://wsgzao.github.io/post/macbook/"/>
    <id>https://wsgzao.github.io/post/macbook/</id>
    <published>2019-02-28T08:59:49.000Z</published>
    <updated>2019-03-01T10:47:30.814Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="https://i.v2ex.co/y2JB0IAD.png" alt=""></p><p>这里做下 MacBook 从小白到入门的持续更新记录</p><blockquote><p>学习使用 MacBook</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 02 月 28 日 - 更新 Mac 开启关闭 SIP<br>2019 年 01 月 24 日 - 增加开启 HiDPI 和解决黑屏问题<br>2018 年 10 月 19 日 - 更新升级 macOS Mojave 后的各种小问题解决方法<br>2018 年 07 月 25 日 - 补充细节<br>2018 年 07 月 05 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/macbook/">https://wsgzao.github.io/post/macbook/</a></p><p><strong> 扩展阅读 </strong></p><p>Awesome Mac - <a href="http://wangchujiang.com/awesome-mac/index.zh.html" target="_blank" rel="noopener">http://wangchujiang.com/awesome-mac/index.zh.html</a></p><hr><h2 id="System-Preferences"><a href="#System-Preferences" class="headerlink" title="System Preferences"></a>System Preferences</h2><blockquote><p>在任何的操作系统中，首先你需要做一件事就是更新系统，点击窗口左上角的  &gt; 关于本机 &gt; 软件更新 。此外，如果这是一部新的电脑，你还需要到系统设置进行一些适当调整。如何调整，取决于个人喜好。</p></blockquote><h3 id="触控板"><a href="#触控板" class="headerlink" title="触控板"></a>触控板</h3><p>系统设置 &gt; 触控板</p><p>光标与点击</p><ul><li>轻拍来点按</li><li>辅助点按</li><li>查找</li><li>三指拖移</li></ul><p>滚动缩放</p><ul><li>默认全选</li></ul><p>更多手势</p><ul><li>默认全选</li></ul><h3 id="Dock"><a href="#Dock" class="headerlink" title="Dock"></a>Dock</h3><p>置于屏幕上的位置：左边<br>设置 Dock 图标更小（大小随个人喜好）</p><ul><li>自动显示和隐藏 Dock</li></ul><h3 id="Finder"><a href="#Finder" class="headerlink" title="Finder"></a>Finder</h3><p>Finder &gt; 显示</p><ul><li>显示标签页栏</li><li>显示路径栏</li><li>显示状态栏</li><li>自定工具栏 &gt; 去除所有按钮，仅剩搜索栏</li></ul><p>Finder &gt; 偏好设置</p><p>通用</p><ul><li>开启新 Finder 窗口时打开：HOME「用户名」目录</li></ul><p>边栏</p><ul><li>添加 HOME「用户名」目录 和 创建代码文件目录</li><li>将 共享的(shared) 和 标记(tags) 目录去掉</li></ul><h3 id="菜单栏"><a href="#菜单栏" class="headerlink" title="菜单栏"></a>菜单栏</h3><ul><li>去掉蓝牙等无需经常使用的图标</li><li>将电池显示设置为百分比</li></ul><h3 id="Spotlight"><a href="#Spotlight" class="headerlink" title="Spotlight"></a>Spotlight</h3><ul><li>去掉字体和书签与历史记录等不需要的内容</li><li>设置合适的快捷键</li></ul><h3 id="互联网帐户"><a href="#互联网帐户" class="headerlink" title="互联网帐户"></a>互联网帐户</h3><ul><li>添加 iCloud 用户，同步日历，联系人和 Find my mac 等等</li></ul><h3 id="English"><a href="#English" class="headerlink" title="English"></a>English</h3><p>Trackpad</p><ul><li>Tap to click</li></ul><p>Accessibility -&gt; Mouse &amp; Trackpad -&gt; Trackpad Options</p><ul><li>Enable dragging | three finger drag</li></ul><p>Language &amp; Region</p><ul><li>Time format | 24-Hour Time</li><li>click add button | Chinese, Simplified</li></ul><p>Language &amp; Region -&gt; Keyboard Preferences -&gt; Shortcuts -&gt; Input Sources</p><ul><li>Select the previous input source</li></ul><p>Display -&gt; Arrangement</p><ul><li>Drag the graphics and just make what you want</li><li>if the display rotates 90 degrees then change Rotation to 90° or 270° and click confirm button to save</li></ul><h2 id="Mac-键盘快捷键"><a href="#Mac-键盘快捷键" class="headerlink" title="Mac 键盘快捷键"></a>Mac 键盘快捷键</h2><p><a href="https://support.apple.com/zh-cn/HT201236" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT201236</a></p><p>Command ⌘<br>Shift ⇧<br>Option ⌥<br>Control ⌃<br>Caps Lock ⇪<br>Fn</p><blockquote><p>我自己常用的快捷键</p></blockquote><table><thead><tr><th>快捷键</th><th>描述</th></tr></thead><tbody><tr><td>Command(⌘)-C</td><td>复制</td></tr><tr><td>Command(⌘)-V</td><td>粘贴</td></tr><tr><td>Command(⌘)-Z</td><td>撤销</td></tr><tr><td>Command(⌘)-Option-V</td><td>剪切粘贴</td></tr><tr><td>Command(⌘)-A</td><td>全选</td></tr><tr><td>Command(⌘)-F</td><td>查找</td></tr><tr><td>Command(⌘)-S</td><td>保存</td></tr><tr><td>Command(⌘)-W</td><td>关闭当前窗口</td></tr><tr><td>Command(⌘)- 空格键</td><td>聚焦</td></tr><tr><td>Command(⌘)- 方向左键</td><td>后退</td></tr><tr><td>Command(⌘)- 方向右键</td><td>前进</td></tr><tr><td>Control-A</td><td>移至行或段落的开头</td></tr><tr><td>Control-E</td><td>移至行或段落的末尾</td></tr><tr><td>Control - 空格键</td><td>切换输入法（需要手动设置）</td></tr><tr><td>Control-Command-Q</td><td>系统自带锁屏快捷键</td></tr><tr><td>Option-Command-C</td><td>复制文件路径，当然也可以直接拖拽到命令行</td></tr></tbody></table><h2 id="Mac-Soft"><a href="#Mac-Soft" class="headerlink" title="Mac Soft"></a>Mac Soft</h2><p>Homebrew - Mac 下必备的包管理工具<br><a href="https://brew.sh/" target="_blank" rel="noopener">https://brew.sh/</a></p><p>Alfred - Mac 下被无数人安利的效率工具，虽然我觉得 Spotlight 暂时够用了<br><a href="https://www.alfredapp.com/" target="_blank" rel="noopener">https://www.alfredapp.com/</a></p><p>Mounty for NTFS - 免费的 NTFS 支持软件<br><a href="http://enjoygineering.com/mounty/" target="_blank" rel="noopener">http://enjoygineering.com/mounty/</a></p><p>Sougou Input - 陪伴大家多年的搜狗输入法<br><a href="https://pinyin.sogou.com/mac/" target="_blank" rel="noopener">https://pinyin.sogou.com/mac/</a></p><p>Youdao Dict - 网易开发的老牌翻译工具<br><a href="http://cidian.youdao.com/index-mac.html" target="_blank" rel="noopener">http://cidian.youdao.com/index-mac.html</a></p><p>Jietu - 腾讯开发的截图工具，其实可以使用 QQ 或者微信快捷键<br><a href="http://jietu.qq.com/" target="_blank" rel="noopener">http://jietu.qq.com/</a></p><p>Kantu - 腾讯开发的看图工具<br><a href="https://kantu.qq.com/" target="_blank" rel="noopener">https://kantu.qq.com/</a></p><p>f.lux - Mac 和 Windows 都必备的护眼亮度调整工具<br><a href="https://justgetflux.com/" target="_blank" rel="noopener">https://justgetflux.com/</a></p><p>Foxit Reader - 国内福昕开发的免费 PDF 阅读器<br><a href="https://www.foxitsoftware.com/pdf-reader/" target="_blank" rel="noopener">https://www.foxitsoftware.com/pdf-reader/</a></p><p>Clearview - 支持 PDF, EPUB, CHM, MOBI 的免费阅读器<br><a href="https://itunes.apple.com/app/clearview/id557090104?mt=12&amp;ls=1" target="_blank" rel="noopener">https://itunes.apple.com/app/clearview/id557090104?mt=12&amp;ls=1</a></p><p>Evernote - 轻量级的在线笔记类应用内<br><a href="https://evernote.com/" target="_blank" rel="noopener">https://evernote.com/</a></p><p>Dropbox - 最佳的实时同步工具之一<br><a href="https://www.dropbox.com/" target="_blank" rel="noopener">https://www.dropbox.com/</a></p><p>Keka - 国外开源的免费压缩解压缩工具<br><a href="https://www.keka.io/en/" target="_blank" rel="noopener">https://www.keka.io/en/</a></p><p>Mac 迅雷 - 支持协议多广告也多<br><a href="http://mac.xunlei.com/" target="_blank" rel="noopener">http://mac.xunlei.com/</a></p><p>百度网盘 - 国内的网盘共享基本只剩下百度一家独大了<br><a href="https://pan.baidu.com/" target="_blank" rel="noopener">https://pan.baidu.com/</a></p><p>FOLX - 用来代替迅雷的免费下载工具<br><a href="https://mac.eltima.com/download-manager.html" target="_blank" rel="noopener">https://mac.eltima.com/download-manager.html</a></p><p>IINA - 国人编写的开源视频播放器<br><a href="https://lhc70000.github.io/iina/" target="_blank" rel="noopener">https://lhc70000.github.io/iina/</a></p><p>Clipy - 记录多条粘贴板小工具<br><a href="https://github.com/Clipy/Clipy" target="_blank" rel="noopener">https://github.com/Clipy/Clipy</a></p><p>Grid - 快速调整程序窗口位置的效率工具<br><a href="http://mildgrind.com/" target="_blank" rel="noopener">http://mildgrind.com/</a></p><p>Proxyee Down - Mac 下百度网盘下载神器<br><a href="https://github.com/proxyee-down-org/proxyee-down" target="_blank" rel="noopener">https://github.com/proxyee-down-org/proxyee-down</a></p><p>Sourcetree - 图形化 Git 管理工具<br><a href="https://www.sourcetreeapp.com/" target="_blank" rel="noopener">https://www.sourcetreeapp.com/</a></p><p>Microsoft Remote Desktop - Mac 下的微软 RDP 远程桌面登录工具<br><a href="https://itunes.apple.com/us/app/microsoft-remote-desktop-10/id1295203466?mt=12" target="_blank" rel="noopener">https://itunes.apple.com/us/app/microsoft-remote-desktop-10/id1295203466?mt=12</a></p><p>VirtualBox - 免费的虚拟机工具<br><a href="http://www.oracle.com/technetwork/server-storage/virtualbox/downloads/index.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/server-storage/virtualbox/downloads/index.html</a></p><p>VMware OS Optimization Tool - VMware 开发的 Windows 虚拟机优化工具<br><a href="https://labs.vmware.com/flings/vmware-os-optimization-tool" target="_blank" rel="noopener">https://labs.vmware.com/flings/vmware-os-optimization-tool</a></p><h3 id="Homebrew"><a href="#Homebrew" class="headerlink" title="Homebrew"></a>Homebrew</h3><p><a href="https://docs.brew.sh/Installation" target="_blank" rel="noopener">https://docs.brew.sh/Installation</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install xcode first</span></span><br><span class="line">https://itunes.apple.com/us/app/xcode/id497799835</span><br><span class="line"></span><br><span class="line"><span class="comment"># install homebrew</span></span><br><span class="line">/usr/bin/ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># install packages</span></span><br><span class="line">brew tap dteoh/sqa</span><br><span class="line">brew install zsh</span><br><span class="line">brew install wget</span><br><span class="line">brew install git</span><br><span class="line"><span class="comment"># default install is python3 now, if you need python2 just run `brew install python2`</span></span><br><span class="line">brew install python</span><br></pre></td></tr></table></figure><h3 id="iTerm2-zsh-Oh-My-Zsh"><a href="#iTerm2-zsh-Oh-My-Zsh" class="headerlink" title="iTerm2 + zsh + Oh My Zsh"></a>iTerm2 + zsh + Oh My Zsh</h3><p>iTerm2<br><a href="https://www.iterm2.com/" target="_blank" rel="noopener">https://www.iterm2.com/</a></p><p>Oh My Zsh<br><a href="http://ohmyz.sh/" target="_blank" rel="noopener">http://ohmyz.sh/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install latest zsh zsh-syntax-highlighting</span></span><br><span class="line">brew install zsh zsh-syntax-highlighting</span><br><span class="line"><span class="comment"># 修改默认 shell，在 /etc/shells 文件中加入如下一行</span></span><br><span class="line">vi /etc/shells</span><br><span class="line"></span><br><span class="line">/usr/<span class="built_in">local</span>/bin/zsh</span><br><span class="line"><span class="comment"># 然后运行命令切换 shell</span></span><br><span class="line">chsh -s /usr/<span class="built_in">local</span>/bin/zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># install oh-my-zsh</span></span><br><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改主题为 agnoster，增加一行 zsh-syntax-highlighting</span></span><br><span class="line">vi ~/.zshrc</span><br><span class="line"></span><br><span class="line">ZSH_THEME=<span class="string">"agnoster"</span></span><br><span class="line"><span class="built_in">source</span> /usr/<span class="built_in">local</span>/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可选增加 visual studio code 命令行 code 支持 zsh</span></span><br><span class="line"><span class="keyword">function</span> code &#123;</span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$#</span> = 0 ]]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        open -a <span class="string">"Visual Studio Code"</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">local</span> argPath=<span class="string">"<span class="variable">$1</span>"</span></span><br><span class="line">        [[ <span class="variable">$1</span> = /* ]] &amp;&amp; argPath=<span class="string">"<span class="variable">$1</span>"</span> || argPath=<span class="string">"<span class="variable">$PWD</span>/<span class="variable">$&#123;1#./&#125;</span>"</span></span><br><span class="line">        open -a <span class="string">"Visual Studio Code"</span> <span class="string">"<span class="variable">$argPath</span>"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决 Too many files open error</span></span><br><span class="line"><span class="built_in">ulimit</span> -n 10000</span><br><span class="line"><span class="built_in">ulimit</span> -u 2048</span><br><span class="line"></span><br><span class="line"><span class="comment"># 刷新环境变量</span></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 powerline 字体</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/powerline/fonts.git</span><br><span class="line"><span class="built_in">cd</span> fonts</span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure><blockquote><p>配置 iTerm2 主题，主题可以从 iterm2colorschemes 下载</p></blockquote><p><a href="https://iterm2colorschemes.com/" target="_blank" rel="noopener">https://iterm2colorschemes.com/</a></p><ol><li>Download iTerm2 color you like</li><li>Open iTerm2 that we already downloaded at the first section</li><li>Go to iTerm2 &gt; Preferences &gt; Profiles &gt; Colors Tab</li><li>Click Color Presets at the bottom right</li><li>Click Import</li><li>Select the *.itermcolors file</li><li>Select the * from Load Presets</li></ol><p>在 Keys -&gt; Hotkey 中设置 <code>command + i</code> 快速显示和隐藏 iTerm<br>在 Profiles -&gt; Default -&gt; Colors -&gt; Load Presets 导入主题，作为默认颜色，我的主题是 <code>3024 Night</code><br>在 Profiles -&gt; Text -&gt; Change Font 调整字体 / 大小 / 颜色等，我的字体是 <code>18pt Ubuntu Mono derivative Powerline</code></p><h2 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h2><p><img src="http://wx4.sinaimg.cn/large/7207510dgy1fxgwknz69qg20jg0b5hdz.gif" alt=""></p><h3 id="升级-macOS-Mojave-新版卡顿黑屏和字体发虚解决方案"><a href="#升级-macOS-Mojave-新版卡顿黑屏和字体发虚解决方案" class="headerlink" title="升级 macOS Mojave 新版卡顿黑屏和字体发虚解决方案"></a>升级 macOS Mojave 新版卡顿黑屏和字体发虚解决方案</h3><blockquote><p>输入文字卡顿</p></blockquote><p>如果你的 Mac 已经更新至 macOS Mojave，在输入文字时经常卡顿，频繁出现小风车，那很有可能是搜狗输入法造成的，只需将它升级至最新的 4.8.0 版本，即可完美解决。</p><blockquote><p>字体发虚</p></blockquote><p>升级 macOS Mojave 新系统后，苹果默认关闭了子像素抗锯齿，导致字体变细锯齿增多。<br>解决字体渲染过细，打开终端，输入：</p><pre><code>defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO</code></pre><p>重启应用比如 VS Code 后即可看到效果</p><blockquote><p>开启 HiDPI</p></blockquote><p>如果外接显示器字体模糊，可以使用 Scale Resolutions<br>Display Override PropertyList File Parser and Generator with HiDPI support</p><p><a href="https://comsysto.github.io/Display-Override-PropertyList-File-Parser-and-Generator-with-HiDPI-Support-For-Scaled-Resolutions/" target="_blank" rel="noopener">https://comsysto.github.io/Display-Override-PropertyList-File-Parser-and-Generator-with-HiDPI-Support-For-Scaled-Resolutions/</a></p><p>Enable HiDPI on OS X - <a href="https://github.com/syscl/Enable-HiDPI-OSX" target="_blank" rel="noopener">https://github.com/syscl/Enable-HiDPI-OSX</a></p><blockquote><p>解决唤醒时黑屏只看见鼠标的问题</p></blockquote><p>先关机，然后开机快速同时点击 Command + S 按键进入 single-user 单用户模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/sbin/fsck -fy</span><br><span class="line">/sbin/mount -uw /</span><br><span class="line">rm -f /Library/Preferences/com.apple.loginwindow.plist</span><br><span class="line">rm -f /var/db/.AppleUpgrade</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="解决-Command-Q-经常误按"><a href="#解决-Command-Q-经常误按" class="headerlink" title="解决 Command+Q 经常误按"></a>解决 Command+Q 经常误按</h3><p>Slow Quit Apps</p><p>A macOS app that adds a global delay of 1 second to the Cmd-Q shortcut. In other words, you have to hold down Cmd-Q for 1 second before an application will quit.</p><p>When the delay is active, an overlay is drawn at the center of the screen.</p><p><a href="https://github.com/dteoh/SlowQuitApps" target="_blank" rel="noopener">https://github.com/dteoh/SlowQuitApps</a></p><p>brew cask install slowquitapps</p><p>运行程序按照提示授权后重启应用并设置开机自启动即可享受 1s 延迟关闭提醒，如果觉得时间不够长可以自己设定</p><h3 id="提示应用程序被破坏无法打开"><a href="#提示应用程序被破坏无法打开" class="headerlink" title="提示应用程序被破坏无法打开"></a>提示应用程序被破坏无法打开</h3><blockquote><p>SOLVED: “Application” is damaged and can’t be opened in macOS Sierra</p></blockquote><pre><code>sudo spctl --master-disable</code></pre><p>输入密码重新打开 System Preferences &gt; Security &amp; Privacy &gt; General 即可看到之前隐藏的“Anywhere”<br><a href="https://www.santoshsrinivas.com/disable-gatekeeper-in-macos-sierra/" target="_blank" rel="noopener">https://www.santoshsrinivas.com/disable-gatekeeper-in-macos-sierra/</a></p><blockquote><p>macOS High Seirra 提示 “已损坏，打不开，您应该将它移至垃圾篓”</p></blockquote><p>这是因为在系统偏好设置的 “安全性与隐私” 里面的 “允许从以下位置下载的应用” 没有选中“任何来源”，解决方法如下：</p><ol><li>打开终端，然后输入以下命令：sudo spctl –master-disable</li><li>然后回车，输入系统密码并回车（这里输入密码不会显示，输完密码直接回车即可），如果没有提示即操作成功。</li><li>打开系统偏好设置的 “安全性与隐私”，查看“允许从以下位置下载的应用” 是否选中的是“任何来源”，如果选中说明操作成功。这时再打开软件安装就没有已损坏的提示的了。</li></ol><h3 id="Mac-开启关闭-SIP"><a href="#Mac-开启关闭-SIP" class="headerlink" title="Mac 开启关闭 SIP"></a>Mac 开启关闭 SIP</h3><p>S1. 查看 SIP 状态<br>在终端中输入 csrutil status，就可以看到是 enabled 还是 disabled。</p><p>S2. 关闭 SIP</p><ol><li>重启 MAC，按住 cmd+R 直到屏幕上出现苹果的标志和进度条，进入 Recovery 模式；</li><li>在屏幕最上方的工具栏找到实用工具（左数第 3 个），打开终端，输入：csrutil disable；</li><li>关掉终端，重启 mac；</li><li>重启以后可以在终端中查看状态确认。</li></ol><p>S3. 开启 SIP<br>与关闭的步骤类似，只是在 S2 中输入 csrutil enable 即可。</p><h3 id="更改-Apple-ID-国家或地区"><a href="#更改-Apple-ID-国家或地区" class="headerlink" title="更改 Apple ID 国家或地区"></a>更改 Apple ID 国家或地区</h3><blockquote><p>区域在国内即使身在国外也看不到你需要的很多东东，建议修改</p></blockquote><p><a href="https://support.apple.com/zh-cn/ht201389" target="_blank" rel="noopener">https://support.apple.com/zh-cn/ht201389</a></p><h3 id="USB-Type-C-耳机"><a href="#USB-Type-C-耳机" class="headerlink" title="USB Type-C 耳机"></a>USB Type-C 耳机</h3><ol><li>插入耳机至任意 USB Type-C 接口</li><li>System Preferences -&gt; Sound -&gt; Output -&gt; 选择识别到的耳机设备即可</li></ol><h3 id="Macbook-外置键盘如何更改设置"><a href="#Macbook-外置键盘如何更改设置" class="headerlink" title="Macbook 外置键盘如何更改设置"></a>Macbook 外置键盘如何更改设置</h3><p>option 改成 command（win 版键盘下的四个方块图标按键）<br>command 改成 option</p><p><a href="https://jingyan.baidu.com/article/363872ec2185346e4aa16f61.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/363872ec2185346e4aa16f61.html</a></p><h3 id="配置从命令提示行启动-vscode"><a href="#配置从命令提示行启动-vscode" class="headerlink" title="配置从命令提示行启动 vscode"></a>配置从命令提示行启动 vscode</h3><p>安装 Visual Studio Code，打开命令面板（按 F1 或 command + shift + p）输入 Shell 命令找到 Shell 命令: 在 PATH 中安装 “code” 命令。命令执行完成之后，重启终端工具使新的 $PATH 可用。现在，您可以简单地在终端中任意文件夹下输入‘code .’来编辑该文件夹下的文件了。</p><h3 id="Git-Ignore"><a href="#Git-Ignore" class="headerlink" title="Git Ignore"></a>Git Ignore</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个新文件 ~/.gitignore ，并将以下内容添加进去，这样全部 git 仓库将会忽略以下内容所提及的文件。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Folder view configuration files</span></span><br><span class="line">.DS_Store</span><br><span class="line">Desktop.ini</span><br><span class="line"></span><br><span class="line"><span class="comment"># Thumbnail cache files</span></span><br><span class="line">._*</span><br><span class="line">Thumbs.db</span><br><span class="line"></span><br><span class="line"><span class="comment"># Files that might appear on external disks</span></span><br><span class="line">.Spotlight-V100</span><br><span class="line">.Trashes</span><br><span class="line"></span><br><span class="line"><span class="comment"># Compiled Python files</span></span><br><span class="line">*.pyc</span><br><span class="line"></span><br><span class="line"><span class="comment"># Compiled C++ files</span></span><br><span class="line">*.out</span><br><span class="line"></span><br><span class="line"><span class="comment"># Application specific files</span></span><br><span class="line">venv</span><br><span class="line">node_modules</span><br><span class="line">.sass-cache</span><br><span class="line"></span><br><span class="line"><span class="comment"># Temp File</span></span><br><span class="line">*.swp</span><br><span class="line">*.swa</span><br><span class="line">*.swo</span><br><span class="line"></span><br><span class="line"><span class="comment"># github merge file</span></span><br><span class="line">*.orig</span><br><span class="line"></span><br><span class="line"><span class="comment">#vscode </span></span><br><span class="line">.vscode</span><br></pre></td></tr></table></figure><h3 id="禁止-DS-store-生成"><a href="#禁止-DS-store-生成" class="headerlink" title="禁止. DS_store 生成"></a>禁止. DS_store 生成</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 禁止 .DS_store 生成，打开“终端”，复制黏贴下面的命令，回车执行，重启 Mac 即可生效。</span></span><br><span class="line">defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool TRUE</span><br><span class="line"><span class="comment"># 恢复 .DS_store 生成</span></span><br><span class="line">defaults delete com.apple.desktopservices DSDontWriteNetworkStores</span><br><span class="line"><span class="comment"># 刪除已存在的. DS_Store</span></span><br><span class="line">sudo find . -name <span class="string">".DS_Store"</span> -depth -<span class="built_in">exec</span> rm &#123;&#125; \;</span><br></pre></td></tr></table></figure><h3 id="ssh-相关"><a href="#ssh-相关" class="headerlink" title="ssh 相关"></a>ssh 相关</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -bash: warning: setlocale: LC_CTYPE: cannot change locale (UTF-8): No such file or directory</span></span><br><span class="line"><span class="comment"># 禁止 OpenSSH 客户端从 OS X/Linux/Unix 桌面发送 LC_* 变量</span></span><br><span class="line">vi /etc/ssh/ssh_config</span><br><span class="line"><span class="comment">#SendEnv LANG LC_*</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># port forwarding</span></span><br><span class="line">ssh -p 22202 wangao@127.0.0.1</span><br><span class="line">ssh -p 22202 wangao@127.0.0.1 -X</span><br><span class="line">scp -P 22202 -r sysctl.sh sysctl.d/ wangao@127.0.0.1:/tmp</span><br><span class="line"></span><br><span class="line"><span class="comment"># ssh tunnel for one-time</span></span><br><span class="line">ssh -t -A wangao@xx.xx.xx.xx ssh wangao@10.65.32.60</span><br><span class="line"></span><br><span class="line"><span class="comment"># config ssh tunnel to make easy connect everyday</span></span><br><span class="line">vim ~/.ssh/config</span><br><span class="line"></span><br><span class="line">StrictHostKeyChecking=no</span><br><span class="line"></span><br><span class="line">Host 10.65.32.*</span><br><span class="line">  HostName %h</span><br><span class="line">  ProxyCommand ssh bastion_GOP_SG_NC_MAIN -W %h:%p</span><br><span class="line">Host bastion_GOP_SG_NC_MAIN</span><br><span class="line">  HostName 8.8.8.8</span><br><span class="line">  port 22</span><br><span class="line">  User wangao</span><br><span class="line"></span><br><span class="line"><span class="comment"># test</span></span><br><span class="line">ssh 10.65.32.60</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      学习使用MacBook
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>tcpdump 抓包使用小结</title>
    <link href="https://wsgzao.github.io/post/tcpdump/"/>
    <id>https://wsgzao.github.io/post/tcpdump/</id>
    <published>2019-02-27T06:59:49.000Z</published>
    <updated>2019-03-01T04:04:41.337Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>tcpdump 是一个很常用的网络包分析工具，可以用来显示通过网络传输到本系统的 TCP/IP 以及其他网络的数据包。tcpdump 使用 libpcap 库来抓取网络报，这个库在几乎在所有的 Linux/Unix 中都有。在 Windows 中我们通常会使用 Wireshark 进行图形化操作相当便捷，然而在 Linux 环境中如何巧妙应用 tcpdump 的命令来操作提升效率就显得尤为重要。在本文中，我们将会通过一些实例来演示如何使用 tcpdump 命令。</p><blockquote><p>tcpdump 是一款灵活、功能强大的抓包工具，能有效地帮助排查网络故障问题。</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 02 月 27 日 - 更新 tcpdump 抓包规则常用命令<br>2018 年 12 月 11 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/tcpdump/">https://wsgzao.github.io/post/tcpdump/</a></p><p><strong> 扩展阅读 </strong></p><p>Wireshark - <a href="https://www.wireshark.org/#download" target="_blank" rel="noopener">https://www.wireshark.org/#download</a><br>tcpdump - <a href="http://www.tcpdump.org/" target="_blank" rel="noopener">http://www.tcpdump.org/</a><br>在 Linux 命令行中使用 tcpdump 抓包 - <a href="https://linux.cn/article-10191-1.html" target="_blank" rel="noopener">https://linux.cn/article-10191-1.html</a></p><hr><h2 id="tcpdump-简介"><a href="#tcpdump-简介" class="headerlink" title="tcpdump 简介"></a>tcpdump 简介</h2><blockquote><p>tcpdump, a powerful command-line packet analyzer; and libpcap, a portable C/C++ library for network traffic capture.</p></blockquote><p>Tcpdump prints out a description of the contents of packets on a network interface that match the boolean expression; the description is preceded by a time stamp, printed, by default, as hours, minutes, seconds, and fractions of a second since midnight. It can also be run with the -w flag, which causes it to save the packet data to a file for later analysis, and/or with the -r flag, which causes it to read from a saved packet file rather than to read packets from a network interface. It can also be run with the -V flag, which causes it to read a list of saved packet files. In all cases, only packets that match expression will be processed by tcpdump.</p><p>tcpdump 是一款用于截取网络分组，并过滤输出分组内容的工具。tcpdump 凭借强大的功能和灵活的截取策略，使其成为类 UNIX 系统下用于网络分析和问题排查的首选工具。 tcpdump 提供了源代码，公开了接口，因此具备很强的可扩展性，对于网络维护和入侵者都是非常有用的工具。tcpdump 存在于基本的 Linux 系统中，由于它需要将网络界面设置为混杂模式，普通用户不能正常执行，但具备 root 权限的用户可以直接执行它来获取网络上的信息。因此系统中存在网络分析工具主要不是对本机安全的威胁，而是对网络上的其他计算机的安全存在威胁。tcpdump 可以将网络中传送的数据包的 “头” 完全截获下来提供分析。它支持针对网络层、协议、主机、网络或端口的过滤，并提供 and、or、not 等逻辑语句来帮助我们去掉无用的信息。</p><h2 id="tcpdump-安装"><a href="#tcpdump-安装" class="headerlink" title="tcpdump 安装"></a>tcpdump 安装</h2><blockquote><p>tcpdump 默认在几乎所有的 Linux 发行版中都可用，但若你的 Linux 上没有的话，使用下面方法进行安装。</p></blockquote><p>CentOS/RHEL<br>使用下面命令在 CentOS 和 RHEL 上安装 tcpdump，</p><pre><code>sudo yum install tcpdump*</code></pre><p>Fedora<br>使用下面命令在 Fedora 上安装 tcpdump：</p><pre><code>dnf install tcpdump</code></pre><p>Ubuntu/Debian/Linux Mint<br>在 Ubuntu/Debain/Linux Mint 上使用下面命令安装 tcpdump：</p><pre><code>apt-get install tcpdump</code></pre><h2 id="tcpdump-常用命令解释"><a href="#tcpdump-常用命令解释" class="headerlink" title="tcpdump 常用命令解释"></a>tcpdump 常用命令解释</h2><p>tcpdump [ 选项 ] [ -c 数量 ] [ -i 网络接口 ] [ -w 文件名 ] [ 表达式 ]</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">man tcpdump</span><br><span class="line">...</span><br><span class="line">tcpdump [ -AbdDefhHIJKlLnNOpqStuUvxX<span class="comment"># ] [ -B buffer_size ]</span></span><br><span class="line">        [ -c count ]</span><br><span class="line">        [ -C file_size ] [ -G rotate_seconds ] [ -F file ]</span><br><span class="line">        [ -i interface ] [ -j tstamp_type ] [ -m module ] [ -M secret ]</span><br><span class="line">        [ --number ] [ -Q <span class="keyword">in</span>|out|inout ]</span><br><span class="line">        [ -r file ] [ -V file ] [ -s snaplen ] [ -T <span class="built_in">type</span> ] [ -w file ]</span><br><span class="line">        [ -W filecount ]</span><br><span class="line">        [ -E spi@ipaddr algo:secret,...  ]</span><br><span class="line">        [ -y datalinktype ] [ -z postrotate-command ] [ -Z user ]</span><br><span class="line">        [ --time-stamp-precision=tstamp_precision ]</span><br><span class="line">        [ --immediate-mode ] [ --version ]</span><br><span class="line">        [ expression ]</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">选项翻译如下： </span><br><span class="line"></span><br><span class="line">-l：使标准输出变为缓冲行形式；</span><br><span class="line">-c：抓包次数；</span><br><span class="line">-nn：直接以 IP 及 Port Number 显示，而非主机名与服务名称；</span><br><span class="line">-s ：&lt; 数据包大小 & gt; 设置每个数据包的大小；</span><br><span class="line">-i：指定监听的网络接口；</span><br><span class="line">-r：从指定的文件中读取包；</span><br><span class="line">-w：输出信息保存到指定文件；</span><br><span class="line">-a：将网络地址和广播地址转变成名字；</span><br><span class="line">-d：将匹配信息包的代码以人们能够理解的汇编格式给出；</span><br><span class="line">-e：在输出行打印出数据链路层的头部信息；</span><br><span class="line">-f：将外部的 Internet 地址以数字的形式打印出来；</span><br><span class="line">-t：在输出的每一行不打印时间戳；</span><br><span class="line">-v ：输出稍微详细的报文信息；--vv 则输出更详细信息。</span><br></pre></td></tr></table></figure><p>表达式指正则表达式，tcpdump 利用它作为过滤报文的条件，如果一个报文满足表达式的条件，则会捕获该报文。如果没有给出任何条件，则会截获网络上所有的信息包。<br>在表达式中一般有如下几种类型的关键字： </p><ol><li><p>关于类型的关键字：<br>host(缺省类型): 指明一台主机，如：host 10.215.20.13<br>net: 指定网络地址, net 10.215.20.0<br>port: 指明端口号, port 3306</p></li><li><p>确定传输方向的关键字： </p></li></ol><p>dst or src(缺省值) 指定源或者目标地址是 10.215.20.13 的流量包<br>src: src 10.9.51.13, 指定源地址是 10.9.51.13<br>dst: dst net 172.0.0.0, 指定目标网络地址是 172.0.0.0<br>dst and src  比如: src host 10.9.51.13 and dst host 10.215.20.13 </p><ol start="3"><li>协议的关键字：</li></ol><p>协议的关键字：缺省值是监听所有协议的信息包<br>ip<br>arp<br>tcp<br>udp<br>icmp</p><ol start="4"><li>三种逻辑运算： </li></ol><p>非 : ! , not<br>与 : &amp;&amp; , and<br>或 : || , or</p><p>例子: 抓取所有经过 bond0，目的地址是 10.10.1.254 或 10.10.1.200 端口是 80 的 TCP 数据</p><pre><code>tcpdump -i bond0 &apos;((tcp) and (port 80) and ((dst host 10.10.1.254) or (dst host 10.10.1.200)))&apos;</code></pre><ol start="5"><li>其他重要的关键字：</li></ol><p>gateway, broadcast, less（小于）, greater（大于）</p><h2 id="tcpdump-参数实例"><a href="#tcpdump-参数实例" class="headerlink" title="tcpdump 参数实例"></a>tcpdump 参数实例</h2><pre><code>tcpdump tcp -i bond0 -tttt -s 0 -c 100 and dst port ! 22 and src net 10.10.1.0/24 -w 20190131.tcpdump</code></pre><p>(1) tcp: 协议类型，用来过滤数据报的协议类型。<br>(2) -i bond0 : 只抓取经过接口 bond0 的包<br>(3) -tttt : 使用格式 2019-02-02 10:37:37.120297, 便于分析。<br>(4) -s 0: 抓取数据包时默认抓取长度为 68 字节。加上 - s 0 后可以抓到完整的数据包<br>(5) -c 100: 只抓取 100 个数据包<br>(6) dst port ! 22: 不抓取目标端口是 22 的数据包<br>(7) src net 10.10.1.0/24: 数据包的源网络地址为 10.10.1.0/24<br>(8) -w 20190131.tcpdump: 保存成 tcpdump 文件中, 方便使用 wireshark 分析抓包结果。</p><p>还有其他常用的参数:</p><p>-D: 列出所有可用的网络接口<br>-n: 禁用域名解析，让 tcpdump 直接输出 IP 地址.<br>-X: 以 16 进制格式输出数据包的内容, 不加该参数, 会只输出 iptcp/udp 头部信息。<br>                            加上该选项会将整个数据包输出。<br>-vvvv  该参数其实是 - v 与 - vvv 的组合。<br>       -v 会输出稍微详细一点的信息包括校验和 ttl 之类的；<br>       -vvv 会尝试解析应用层协议，输出详细信息。二者组合就能完整的详细信息。<br>-A: 以 ASCII 值显示抓到的包, 比如和 MySQL 的交互时，可以通过 - A 查看包的文本内容.   </p><h2 id="tcpdump-命令演示"><a href="#tcpdump-命令演示" class="headerlink" title="tcpdump 命令演示"></a>tcpdump 命令演示</h2><p>从所有网卡中捕获数据包<br>运行下面命令来从所有网卡中捕获数据包：</p><pre><code>tcpdump -i any</code></pre><p>从指定网卡中捕获数据包<br>要从指定网卡中捕获数据包，运行：</p><pre><code>tcpdump -i eth0</code></pre><p>将捕获的包写入文件<br>使用 -w 选项将所有捕获的包写入文件：</p><pre><code>tcpdump -i eth1 -w packets_file</code></pre><p>读取之前产生的 tcpdump 文件<br>使用下面命令从之前创建的 tcpdump 文件中读取内容：</p><pre><code>tcpdump -r packets_file</code></pre><p>获取更多的包信息，并且以可读的形式显示时间戳<br>要获取更多的包信息同时以可读的形式显示时间戳，使用：</p><pre><code>tcpdump -ttttnnvvS</code></pre><p>查看整个网络的数据包<br>要获取整个网络的数据包，在终端执行下面命令：</p><pre><code>tcpdump net 192.168.1.0/24</code></pre><p>根据 IP 地址查看报文<br>要获取指定 IP 的数据包，不管是作为源地址还是目的地址，使用下面命令：</p><pre><code>tcpdump host 192.168.1.100</code></pre><p>要指定 IP 地址是源地址或是目的地址则使用：</p><pre><code>tcpdump src 192.168.1.100tcpdump dst 192.168.1.100</code></pre><p>查看某个协议或端口号的数据包<br>要查看某个协议的数据包，运行下面命令：</p><pre><code>tcpdump ssh</code></pre><p>要捕获某个端口或一个范围的数据包，使用：</p><pre><code>tcpdump port 22tcpdump portrange 22-125</code></pre><p>我们也可以与 src 和 dst 选项连用来捕获指定源端口或指定目的端口的报文。</p><p>我们还可以使用 “与” （and，&amp;&amp;）、“或” （or，|| ) 和 “非”（not，!） 来将两个条件组合起来。当我们需要基于某些条件来分析网络报文是非常有用。</p><p>使用 “与”<br>可以使用 and 或者符号 &amp;&amp; 来将两个或多个条件组合起来。比如：</p><pre><code>tcpdump src 192.168.1.100 &amp;&amp; port 22 -w ssh_packets</code></pre><p>使用 “或”<br>“或” 会检查是否匹配命令所列条件中的其中一条，像这样：</p><pre><code>tcpdump src 192.168.1.100 or dst 192.168.1.50 &amp;&amp; port 22 -w ssh_packetstcpdump port 443 or 80 -w http_packets</code></pre><p>使用 “非”<br>当我们想表达不匹配某项条件时可以使用 “非”，像这样：</p><pre><code>tcpdump -i eth0 src port not 22</code></pre><p>这会捕获 eth0 上除了 22 号端口的所有通讯。</p><h2 id="tcpdump-抓包规则常用命令"><a href="#tcpdump-抓包规则常用命令" class="headerlink" title="tcpdump 抓包规则常用命令"></a>tcpdump 抓包规则常用命令</h2><blockquote><p>下面的例子全是以抓取 eth0 接口为例，如果不加”-i eth0” 是表示抓取所有的接口包括 lo</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 抓取包含 172.16.1.122 的数据包  </span></span><br><span class="line">tcpdump -i eth0 -vnn host 172.16.1.122  </span><br><span class="line"><span class="comment"># 抓取包含 172.16.1.0/24 网段的数据包  </span></span><br><span class="line">tcpdump -i eth0 -vnn net 172.16.1.0/24  </span><br><span class="line"><span class="comment"># 抓取包含端口 22 的数据包  </span></span><br><span class="line">tcpdump -i eth0 -vnn port 22  </span><br><span class="line"><span class="comment"># 抓取 udp 协议的数据包  </span></span><br><span class="line">tcpdump -i eth0 -vnn  udp  </span><br><span class="line"><span class="comment"># 抓取 icmp 协议的数据包  </span></span><br><span class="line">tcpdump -i eth0 -vnn icmp  </span><br><span class="line"><span class="comment"># 抓取 arp 协议的数据包  </span></span><br><span class="line">tcpdump -i eth0 -vnn arp  </span><br><span class="line"><span class="comment"># 抓取 ip 协议的数据包  </span></span><br><span class="line">tcpdump -i eth0 -vnn ip  </span><br><span class="line"><span class="comment"># 抓取源 ip 是 172.16.1.122 数据包。  </span></span><br><span class="line">tcpdump -i eth0 -vnn src host 172.16.1.122  </span><br><span class="line"><span class="comment"># 抓取目的 ip 是 172.16.1.122 数据包  </span></span><br><span class="line">tcpdump -i eth0 -vnn dst host 172.16.1.122  </span><br><span class="line"><span class="comment"># 抓取源端口是 22 的数据包  </span></span><br><span class="line">tcpdump -i eth0 -vnn src port 22  </span><br><span class="line"><span class="comment"># 抓取源 ip 是 172.16.1.253 且目的 ip 是 22 的数据包  </span></span><br><span class="line">tcpdump -i eth0 -vnn src host 172.16.1.253 and dst port 22  </span><br><span class="line"><span class="comment"># 抓取源 ip 是 172.16.1.122 或者包含端口是 22 的数据包  </span></span><br><span class="line">tcpdump -i eth0 -vnn src host 172.16.1.122 or port 22  </span><br><span class="line"><span class="comment"># 抓取源 ip 是 172.16.1.122 且端口不是 22 的数据包  </span></span><br><span class="line">tcpdump -i eth0 -vnn src host 172.16.1.122 and not port 22  </span><br><span class="line"><span class="comment"># 抓取源 ip 是 172.16.1.2 且目的端口是 22，或源 ip 是 172.16.1.65 且目的端口是 80 的数据包。  </span></span><br><span class="line">tcpdump -i eth0 -vnn \( src host 172.16.1.2 and dst port 22 \) or   \( src host 172.16.1.65 and dst port 80 \)  </span><br><span class="line"><span class="comment"># 抓取源 ip 是 172.16.1.59 且目的端口是 22，或源 ip 是 172.16.1.68 且目的端口是 80 的数据包。  </span></span><br><span class="line">tcpdump -i  eth0 -vnn <span class="string">'src host 172.16.1.59 and dst port 22'</span> or  <span class="string">'src host 172.16.1.68 and dst port 80'</span>  </span><br><span class="line"><span class="comment"># 把抓取的数据包记录存到 / tmp/fill 文件中，当抓取 100 个数据包后就退出程序。  </span></span><br><span class="line">tcpdump –i eth0 -vnn -w  /tmp/fil1 -c 100  </span><br><span class="line"><span class="comment"># 从 / tmp/fill 记录中读取 tcp 协议的数据包  </span></span><br><span class="line">tcpdump –i eth0 -vnn -r  /tmp/fil1 tcp</span><br><span class="line"><span class="comment"># 从 / tmp/fill 记录中读取包含 172.16.1.58 的数据包  </span></span><br><span class="line">tcpdump –i eth0 -vnn -r  /tmp/fil1 host  172.16.1.58 </span><br><span class="line"><span class="comment"># 抓取目的地址范围是 10 网段</span></span><br><span class="line">tcpdump -i any -nn <span class="string">'ip[16] == 10'</span></span><br><span class="line"><span class="comment"># 抓取目的地址范围是 192.168.1.10 ~ 192.168.1.100</span></span><br><span class="line">tcpdump -i any -nn <span class="string">'ip[16] == 192 and ip[17] == 168 and ip[18] == 1 and ip[19] &gt; 9 and ip[19] &lt; 101'</span></span><br><span class="line"><span class="comment"># 保存 10000 个数据包过滤条件为 443 端口，并解析来源 IP</span></span><br><span class="line">tcpdump -i any -nn -c 10000 port 443 &gt; tcpdump.log</span><br><span class="line">cat tcpdump.log | awk <span class="string">'&#123;print $3&#125;'</span> |awk -F <span class="string">'.'</span> <span class="string">'&#123;print $1"."$2"."$3"."$4&#125;'</span>| sort | uniq -c | sort -rn</span><br></pre></td></tr></table></figure><h2 id="tcpdump-抓包实践"><a href="#tcpdump-抓包实践" class="headerlink" title="tcpdump 抓包实践"></a>tcpdump 抓包实践</h2><p>使用 tcpdump 抓包，需要管理员权限，因此下面的示例中绝大多数命令都是以 sudo 开头。</p><p>首先，先用 tcpdump -D 命令列出可以抓包的网络接口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ sudo tcpdump -D</span><br><span class="line">1.eth0</span><br><span class="line">2.virbr0</span><br><span class="line">3.eth1</span><br><span class="line">4.any (Pseudo-device that captures on all interfaces)</span><br><span class="line">5.lo [Loopback]</span><br></pre></td></tr></table></figure><p>如上所示，可以看到我的机器中所有可以抓包的网络接口。其中特殊接口 any 可用于抓取所有活动的网络接口的数据包。</p><p>我们就用如下命令先对 any 接口进行抓包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ sudo tcpdump -i any</span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv <span class="keyword">for</span> full protocol decode</span><br><span class="line">listening on any, link-type LINUX_SLL (Linux cooked), capture size 262144 bytes</span><br><span class="line">09:56:18.293641 IP rhel75.localdomain.ssh &gt; 192.168.64.1.56322: Flags [P.], seq 3770820720:3770820916, ack 3503648727, win 309, options [nop,nop,TS val 76577898 ecr 510770929], length 196</span><br><span class="line">09:56:18.293794 IP 192.168.64.1.56322 &gt; rhel75.localdomain.ssh: Flags [.], ack 196, win 391, options [nop,nop,TS val 510771017 ecr 76577898], length 0</span><br><span class="line">09:56:18.295058 IP rhel75.59883 &gt; gateway.domain: 2486+ PTR? 1.64.168.192.in-addr.arpa. (43)</span><br><span class="line">09:56:18.310225 IP gateway.domain &gt; rhel75.59883: 2486 NXDomain* 0/1/0 (102)</span><br><span class="line">09:56:18.312482 IP rhel75.49685 &gt; gateway.domain: 34242+ PTR? 28.64.168.192.in-addr.arpa. (44)</span><br><span class="line">09:56:18.322425 IP gateway.domain &gt; rhel75.49685: 34242 NXDomain* 0/1/0 (103)</span><br><span class="line">09:56:18.323164 IP rhel75.56631 &gt; gateway.domain: 29904+ PTR? 1.122.168.192.in-addr.arpa. (44)</span><br><span class="line">09:56:18.323342 IP rhel75.localdomain.ssh &gt; 192.168.64.1.56322: Flags [P.], seq 196:584, ack 1, win 309, options [nop,nop,TS val 76577928 ecr 510771017], length 388</span><br><span class="line">09:56:18.323563 IP 192.168.64.1.56322 &gt; rhel75.localdomain.ssh: Flags [.], ack 584, win 411, options [nop,nop,TS val 510771047 ecr 76577928], length 0</span><br><span class="line">09:56:18.335569 IP gateway.domain &gt; rhel75.56631: 29904 NXDomain* 0/1/0 (103)</span><br><span class="line">09:56:18.336429 IP rhel75.44007 &gt; gateway.domain: 61677+ PTR? 98.122.168.192.in-addr.arpa. (45)</span><br><span class="line">09:56:18.336655 IP gateway.domain &gt; rhel75.44007: 61677* 1/0/0 PTR rhel75. (65)</span><br><span class="line">09:56:18.337177 IP rhel75.localdomain.ssh &gt; 192.168.64.1.56322: Flags [P.], seq 584:1644, ack 1, win 309, options [nop,nop,TS val 76577942 ecr 510771047], length 1060</span><br><span class="line">---- SKIPPING LONG OUTPUT -----</span><br><span class="line">09:56:19.342939 IP 192.168.64.1.56322 &gt; rhel75.localdomain.ssh: Flags [.], ack 1752016, win 1444, options [nop,nop,TS val 510772067 ecr 76578948], length 0</span><br><span class="line">^C</span><br><span class="line">9003 packets captured</span><br><span class="line">9010 packets received by filter</span><br><span class="line">7 packets dropped by kernel</span><br><span class="line">$</span><br></pre></td></tr></table></figure><p>tcpdump 会持续抓包直到收到中断信号。你可以按 Ctrl+C 来停止抓包。正如上面示例所示，tcpdump 抓取了超过 9000 个数据包。在这个示例中，由于我是通过 ssh 连接到服务器，所以 tcpdump 也捕获了所有这类数据包。-c 选项可以用于限制 tcpdump 抓包的数量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ sudo tcpdump -i any -c 5</span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv <span class="keyword">for</span> full protocol decode</span><br><span class="line">listening on any, link-type LINUX_SLL (Linux cooked), capture size 262144 bytes</span><br><span class="line">11:21:30.242740 IP rhel75.localdomain.ssh &gt; 192.168.64.1.56322: Flags [P.], seq 3772575680:3772575876, ack 3503651743, win 309, options [nop,nop,TS val 81689848 ecr 515883153], length 196</span><br><span class="line">11:21:30.242906 IP 192.168.64.1.56322 &gt; rhel75.localdomain.ssh: Flags [.], ack 196, win 1443, options [nop,nop,TS val 515883235 ecr 81689848], length 0</span><br><span class="line">11:21:30.244442 IP rhel75.43634 &gt; gateway.domain: 57680+ PTR? 1.64.168.192.in-addr.arpa. (43)</span><br><span class="line">11:21:30.244829 IP gateway.domain &gt; rhel75.43634: 57680 NXDomain 0/0/0 (43)</span><br><span class="line">11:21:30.247048 IP rhel75.33696 &gt; gateway.domain: 37429+ PTR? 28.64.168.192.in-addr.arpa. (44)</span><br><span class="line">5 packets captured</span><br><span class="line">12 packets received by filter</span><br><span class="line">0 packets dropped by kernel</span><br><span class="line">$</span><br></pre></td></tr></table></figure><p>如上所示，tcpdump 在抓取 5 个数据包后自动停止了抓包。这在有些场景中十分有用 —— 比如你只需要抓取少量的数据包用于分析。当我们需要使用过滤规则抓取特定的数据包（如下所示）时，-c 的作用就十分突出了。</p><p>在上面示例中，tcpdump 默认是将 IP 地址和端口号解析为对应的接口名以及服务协议名称。而通常在网络故障排查中，使用 IP 地址和端口号更便于分析问题；用 -n 选项显示 IP 地址，-nn 选项显示端口号：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ sudo tcpdump -i any -c5 -nn</span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv <span class="keyword">for</span> full protocol decode</span><br><span class="line">listening on any, link-type LINUX_SLL (Linux cooked), capture size 262144 bytes</span><br><span class="line">23:56:24.292206 IP 192.168.64.28.22 &gt; 192.168.64.1.35110: Flags [P.], seq 166198580:166198776, ack 2414541257, win 309, options [nop,nop,TS val 615664 ecr 540031155], length 196</span><br><span class="line">23:56:24.292357 IP 192.168.64.1.35110 &gt; 192.168.64.28.22: Flags [.], ack 196, win 1377, options [nop,nop,TS val 540031229 ecr 615664], length 0</span><br><span class="line">23:56:24.292570 IP 192.168.64.28.22 &gt; 192.168.64.1.35110: Flags [P.], seq 196:568, ack 1, win 309, options [nop,nop,TS val 615664 ecr 540031229], length 372</span><br><span class="line">23:56:24.292655 IP 192.168.64.1.35110 &gt; 192.168.64.28.22: Flags [.], ack 568, win 1400, options [nop,nop,TS val 540031229 ecr 615664], length 0</span><br><span class="line">23:56:24.292752 IP 192.168.64.28.22 &gt; 192.168.64.1.35110: Flags [P.], seq 568:908, ack 1, win 309, options [nop,nop,TS val 615664 ecr 540031229], length 340</span><br><span class="line">5 packets captured</span><br><span class="line">6 packets received by filter</span><br><span class="line">0 packets dropped by kernel</span><br></pre></td></tr></table></figure><p>如上所示，抓取的数据包中显示 IP 地址和端口号。这样还可以阻止 tcpdump 发出 DNS 查找，有助于在网络故障排查中减少数据流量。</p><p>现在你已经会抓包了，让我们来分析一下这些抓包输出的含义吧。</p><h3 id="理解抓取的报文"><a href="#理解抓取的报文" class="headerlink" title="理解抓取的报文"></a>理解抓取的报文</h3><p>tcpdump 能够抓取并解码多种协议类型的数据报文，如 TCP、UDP、ICMP 等等。虽然这里我们不可能介绍所有的数据报文类型，但可以分析下 TCP 类型的数据报文，来帮助你入门。更多有关 tcpdump 的详细介绍可以参考其 帮助手册。tcpdump 抓取的 TCP 报文看起来如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">08:41:13.729687 IP 192.168.64.28.22 &gt; 192.168.64.1.41916: Flags [P.], seq 196:568, ack 1, win 309, options [nop,nop,TS val 117964079 ecr 816509256], length 372</span><br></pre></td></tr></table></figure><p>具体的字段根据不同的报文类型会有不同，但上面这个例子是一般的格式形式。</p><p>第一个字段 08:41:13.729687 是该数据报文被抓取的系统本地时间戳。</p><p>然后，IP 是网络层协议类型，这里是 IPv4，如果是 IPv6 协议，该字段值是 IP6。</p><p>192.168.64.28.22 是源 ip 地址和端口号，紧跟其后的是目的 ip 地址和其端口号，这里是 192.168.64.1.41916。</p><p>在源 IP 和目的 IP 之后，可以看到是 TCP 报文标记段 Flags [P.]。该字段通常取值如下：</p><table><thead><tr><th>值</th><th>标志类型</th><th>描述</th></tr></thead><tbody><tr><td>S</td><td>SYN</td><td>Connection Start 发起连接标志</td></tr><tr><td>F</td><td>FIN</td><td>Connection Finish 关闭连接标志</td></tr><tr><td>P</td><td>PUSH</td><td>Data push 传送数据标志</td></tr><tr><td>R</td><td>RST</td><td>Connection reset 异常关闭连接</td></tr><tr><td>.</td><td>ACK</td><td>Acknowledgment 表示确认包</td></tr></tbody></table><p>该字段也可以是这些值的组合，例如 [S.] 代表 SYN-ACK 数据包。</p><p>接下来是该数据包中数据的序列号。对于抓取的第一个数据包，该字段值是一个绝对数字，后续包使用相对数值，以便更容易查询跟踪。例如此处 seq 196:568 代表该数据包包含该数据流的第 196 到 568 字节。</p><p>接下来是 ack 值：ack 1。该数据包是数据发送方，ack 值为 1。在数据接收方，该字段代表数据流上的下一个预期字节数据，例如，该数据流中下一个数据包的 ack 值应该是 568。</p><p>接下来字段是接收窗口大小 win 309，它表示接收缓冲区中可用的字节数，后跟 TCP 选项如 MSS（最大段大小）或者窗口比例值。更详尽的 TCP 协议内容请参考 Transmission Control Protocol(TCP) Parameters。</p><p>最后，length 372 代表数据包有效载荷字节长度。这个长度和 seq 序列号中字节数值长度是不一样的。</p><p>现在让我们学习如何过滤数据报文以便更容易的分析定位问题。</p><h3 id="过滤数据包"><a href="#过滤数据包" class="headerlink" title="过滤数据包"></a>过滤数据包</h3><p>正如上面所提，tcpdump 可以抓取很多种类型的数据报文，其中很多可能和我们需要查找的问题并没有关系。举个例子，假设你正在定位一个与 web 服务器连接的网络问题，就不必关系 SSH 数据报文，因此在抓包结果中过滤掉 SSH 报文可能更便于你分析问题。</p><p>tcpdump 有很多参数选项可以设置数据包过滤规则，例如根据源 IP 以及目的 IP 地址，端口号，协议等等规则来过滤数据包。下面就介绍一些最常用的过滤方法。</p><p>协议<br>在命令中指定协议便可以按照协议类型来筛选数据包。比方说用如下命令只要抓取 ICMP 报文：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">$ sudo tcpdump -i any -c5 icmp</span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv <span class="keyword">for</span> full protocol decode</span><br><span class="line">listening on any, link-type LINUX_SLL (Linux cooked), capture size 262144 bytes</span><br><span class="line">然后再打开一个终端，去 ping 另一台机器：</span><br><span class="line"></span><br><span class="line">$ ping opensource.com</span><br><span class="line">PING opensource.com (54.204.39.132) 56(84) bytes of data.</span><br><span class="line">64 bytes from ec2-54-204-39-132.compute-1.amazonaws.com (54.204.39.132): icmp_seq=1 ttl=47 time=39.6 ms</span><br><span class="line">回到运行 tcpdump 命令的终端中，可以看到它筛选出了 ICMP 报文。这里 tcpdump 并没有显示有关 opensource.com 的域名解析数据包：</span><br><span class="line"></span><br><span class="line">09:34:20.136766 IP rhel75 &gt; ec2-54-204-39-132.compute-1.amazonaws.com: ICMP <span class="built_in">echo</span> request, id 20361, seq 1, length 64</span><br><span class="line">09:34:20.176402 IP ec2-54-204-39-132.compute-1.amazonaws.com &gt; rhel75: ICMP <span class="built_in">echo</span> reply, id 20361, seq 1, length 64</span><br><span class="line">09:34:21.140230 IP rhel75 &gt; ec2-54-204-39-132.compute-1.amazonaws.com: ICMP <span class="built_in">echo</span> request, id 20361, seq 2, length 64</span><br><span class="line">09:34:21.180020 IP ec2-54-204-39-132.compute-1.amazonaws.com &gt; rhel75: ICMP <span class="built_in">echo</span> reply, id 20361, seq 2, length 64</span><br><span class="line">09:34:22.141777 IP rhel75 &gt; ec2-54-204-39-132.compute-1.amazonaws.com: ICMP <span class="built_in">echo</span> request, id 20361, seq 3, length 64</span><br><span class="line">5 packets captured</span><br><span class="line">5 packets received by filter</span><br><span class="line">0 packets dropped by kernel</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">主机 </span><br><span class="line"> 用 host 参数只抓取和特定主机相关的数据包：</span><br><span class="line"></span><br><span class="line">``` bash</span><br><span class="line">$ sudo tcpdump -i any -c5 -nn host 54.204.39.132</span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv <span class="keyword">for</span> full protocol decode</span><br><span class="line">listening on any, link-type LINUX_SLL (Linux cooked), capture size 262144 bytes</span><br><span class="line">09:54:20.042023 IP 192.168.122.98.39326 &gt; 54.204.39.132.80: Flags [S], seq 1375157070, win 29200, options [mss 1460,sackOK,TS val 122350391 ecr 0,nop,wscale 7], length 0</span><br><span class="line">09:54:20.088127 IP 54.204.39.132.80 &gt; 192.168.122.98.39326: Flags [S.], seq 1935542841, ack 1375157071, win 28960, options [mss 1460,sackOK,TS val 522713542 ecr 122350391,nop,wscale 9], length 0</span><br><span class="line">09:54:20.088204 IP 192.168.122.98.39326 &gt; 54.204.39.132.80: Flags [.], ack 1, win 229, options [nop,nop,TS val 122350437 ecr 522713542], length 0</span><br><span class="line">09:54:20.088734 IP 192.168.122.98.39326 &gt; 54.204.39.132.80: Flags [P.], seq 1:113, ack 1, win 229, options [nop,nop,TS val 122350438 ecr 522713542], length 112: HTTP: GET / HTTP/1.1</span><br><span class="line">09:54:20.129733 IP 54.204.39.132.80 &gt; 192.168.122.98.39326: Flags [.], ack 113, win 57, options [nop,nop,TS val 522713552 ecr 122350438], length 0</span><br><span class="line">5 packets captured</span><br><span class="line">5 packets received by filter</span><br><span class="line">0 packets dropped by kernel</span><br><span class="line">如上所示，只抓取和显示与 54.204.39.132 有关的数据包。</span><br></pre></td></tr></table></figure><p>端口号<br>tcpdump 可以根据服务类型或者端口号来筛选数据包。例如，抓取和 HTTP 服务相关的数据包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ sudo tcpdump -i any -c5 -nn port 80</span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv <span class="keyword">for</span> full protocol decode</span><br><span class="line">listening on any, link-type LINUX_SLL (Linux cooked), capture size 262144 bytes</span><br><span class="line">09:58:28.790548 IP 192.168.122.98.39330 &gt; 54.204.39.132.80: Flags [S], seq 1745665159, win 29200, options [mss 1460,sackOK,TS val 122599140 ecr 0,nop,wscale 7], length 0</span><br><span class="line">09:58:28.834026 IP 54.204.39.132.80 &gt; 192.168.122.98.39330: Flags [S.], seq 4063583040, ack 1745665160, win 28960, options [mss 1460,sackOK,TS val 522775728 ecr 122599140,nop,wscale 9], length 0</span><br><span class="line">09:58:28.834093 IP 192.168.122.98.39330 &gt; 54.204.39.132.80: Flags [.], ack 1, win 229, options [nop,nop,TS val 122599183 ecr 522775728], length 0</span><br><span class="line">09:58:28.834588 IP 192.168.122.98.39330 &gt; 54.204.39.132.80: Flags [P.], seq 1:113, ack 1, win 229, options [nop,nop,TS val 122599184 ecr 522775728], length 112: HTTP: GET / HTTP/1.1</span><br><span class="line">09:58:28.878445 IP 54.204.39.132.80 &gt; 192.168.122.98.39330: Flags [.], ack 113, win 57, options [nop,nop,TS val 522775739 ecr 122599184], length 0</span><br><span class="line">5 packets captured</span><br><span class="line">5 packets received by filter</span><br><span class="line">0 packets dropped by kernel</span><br></pre></td></tr></table></figure><p>IP 地址 / 主机名<br>同样，你也可以根据源 IP 地址或者目的 IP 地址或者主机名来筛选数据包。例如抓取源 IP 地址为 192.168.122.98 的数据包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$ sudo tcpdump -i any -c5 -nn src 192.168.122.98</span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv <span class="keyword">for</span> full protocol decode</span><br><span class="line">listening on any, link-type LINUX_SLL (Linux cooked), capture size 262144 bytes</span><br><span class="line">10:02:15.220824 IP 192.168.122.98.39436 &gt; 192.168.122.1.53: 59332+ A? opensource.com. (32)</span><br><span class="line">10:02:15.220862 IP 192.168.122.98.39436 &gt; 192.168.122.1.53: 20749+ AAAA? opensource.com. (32)</span><br><span class="line">10:02:15.364062 IP 192.168.122.98.39334 &gt; 54.204.39.132.80: Flags [S], seq 1108640533, win 29200, options [mss 1460,sackOK,TS val 122825713 ecr 0,nop,wscale 7], length 0</span><br><span class="line">10:02:15.409229 IP 192.168.122.98.39334 &gt; 54.204.39.132.80: Flags [.], ack 669337581, win 229, options [nop,nop,TS val 122825758 ecr 522832372], length 0</span><br><span class="line">10:02:15.409667 IP 192.168.122.98.39334 &gt; 54.204.39.132.80: Flags [P.], seq 0:112, ack 1, win 229, options [nop,nop,TS val 122825759 ecr 522832372], length 112: HTTP: GET / HTTP/1.1</span><br><span class="line">5 packets captured</span><br><span class="line">5 packets received by filter</span><br><span class="line">0 packets dropped by kernel</span><br><span class="line">注意此处示例中抓取了来自源 IP 地址 192.168.122.98 的 53 端口以及 80 端口的数据包，它们的应答包没有显示出来因为那些包的源 IP 地址已经变了。</span><br><span class="line"></span><br><span class="line">相对的，使用 dst 就是按目的 IP / 主机名来筛选数据包。</span><br><span class="line"></span><br><span class="line">$ sudo tcpdump -i any -c5 -nn dst 192.168.122.98</span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv <span class="keyword">for</span> full protocol decode</span><br><span class="line">listening on any, link-type LINUX_SLL (Linux cooked), capture size 262144 bytes</span><br><span class="line">10:05:03.572931 IP 192.168.122.1.53 &gt; 192.168.122.98.47049: 2248 1/0/0 A 54.204.39.132 (48)</span><br><span class="line">10:05:03.572944 IP 192.168.122.1.53 &gt; 192.168.122.98.47049: 33770 0/0/0 (32)</span><br><span class="line">10:05:03.621833 IP 54.204.39.132.80 &gt; 192.168.122.98.39338: Flags [S.], seq 3474204576, ack 3256851264, win 28960, options [mss 1460,sackOK,TS val 522874425 ecr 122993922,nop,wscale 9], length 0</span><br><span class="line">10:05:03.667767 IP 54.204.39.132.80 &gt; 192.168.122.98.39338: Flags [.], ack 113, win 57, options [nop,nop,TS val 522874436 ecr 122993972], length 0</span><br><span class="line">10:05:03.672221 IP 54.204.39.132.80 &gt; 192.168.122.98.39338: Flags [P.], seq 1:643, ack 113, win 57, options [nop,nop,TS val 522874437 ecr 122993972], length 642: HTTP: HTTP/1.1 302 Found</span><br><span class="line">5 packets captured</span><br><span class="line">5 packets received by filter</span><br><span class="line">0 packets dropped by kernel</span><br></pre></td></tr></table></figure><p>多条件筛选<br>当然，可以使用多条件组合来筛选数据包，使用 and 以及 or 逻辑操作符来创建过滤规则。例如，筛选来自源 IP 地址 192.168.122.98 的 HTTP 数据包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$ sudo tcpdump -i any -c5 -nn src 192.168.122.98 and port 80</span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv <span class="keyword">for</span> full protocol decode</span><br><span class="line">listening on any, link-type LINUX_SLL (Linux cooked), capture size 262144 bytes</span><br><span class="line">10:08:00.472696 IP 192.168.122.98.39342 &gt; 54.204.39.132.80: Flags [S], seq 2712685325, win 29200, options [mss 1460,sackOK,TS val 123170822 ecr 0,nop,wscale 7], length 0</span><br><span class="line">10:08:00.516118 IP 192.168.122.98.39342 &gt; 54.204.39.132.80: Flags [.], ack 268723504, win 229, options [nop,nop,TS val 123170865 ecr 522918648], length 0</span><br><span class="line">10:08:00.516583 IP 192.168.122.98.39342 &gt; 54.204.39.132.80: Flags [P.], seq 0:112, ack 1, win 229, options [nop,nop,TS val 123170866 ecr 522918648], length 112: HTTP: GET / HTTP/1.1</span><br><span class="line">10:08:00.567044 IP 192.168.122.98.39342 &gt; 54.204.39.132.80: Flags [.], ack 643, win 239, options [nop,nop,TS val 123170916 ecr 522918661], length 0</span><br><span class="line">10:08:00.788153 IP 192.168.122.98.39342 &gt; 54.204.39.132.80: Flags [F.], seq 112, ack 643, win 239, options [nop,nop,TS val 123171137 ecr 522918661], length 0</span><br><span class="line">5 packets captured</span><br><span class="line">5 packets received by filter</span><br><span class="line">0 packets dropped by kernel</span><br><span class="line">你也可以使用括号来创建更为复杂的过滤规则，但在 shell 中请用引号包含你的过滤规则以防止被识别为 shell 表达式：</span><br><span class="line"></span><br><span class="line">$ sudo tcpdump -i any -c5 -nn <span class="string">"port 80 and (src 192.168.122.98 or src 54.204.39.132)"</span></span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv <span class="keyword">for</span> full protocol decode</span><br><span class="line">listening on any, link-type LINUX_SLL (Linux cooked), capture size 262144 bytes</span><br><span class="line">10:10:37.602214 IP 192.168.122.98.39346 &gt; 54.204.39.132.80: Flags [S], seq 871108679, win 29200, options [mss 1460,sackOK,TS val 123327951 ecr 0,nop,wscale 7], length 0</span><br><span class="line">10:10:37.650651 IP 54.204.39.132.80 &gt; 192.168.122.98.39346: Flags [S.], seq 854753193, ack 871108680, win 28960, options [mss 1460,sackOK,TS val 522957932 ecr 123327951,nop,wscale 9], length 0</span><br><span class="line">10:10:37.650708 IP 192.168.122.98.39346 &gt; 54.204.39.132.80: Flags [.], ack 1, win 229, options [nop,nop,TS val 123328000 ecr 522957932], length 0</span><br><span class="line">10:10:37.651097 IP 192.168.122.98.39346 &gt; 54.204.39.132.80: Flags [P.], seq 1:113, ack 1, win 229, options [nop,nop,TS val 123328000 ecr 522957932], length 112: HTTP: GET / HTTP/1.1</span><br><span class="line">10:10:37.692900 IP 54.204.39.132.80 &gt; 192.168.122.98.39346: Flags [.], ack 113, win 57, options [nop,nop,TS val 522957942 ecr 123328000], length 0</span><br><span class="line">5 packets captured</span><br><span class="line">5 packets received by filter</span><br><span class="line">0 packets dropped by kernel</span><br><span class="line">该例子中我们只抓取了来自源 IP 为 192.168.122.98 或者 54.204.39.132 的 HTTP （端口号 80）的数据包。使用该方法就很容易抓取到数据流中交互双方的数据包了。</span><br></pre></td></tr></table></figure><h3 id="检查数据包内容"><a href="#检查数据包内容" class="headerlink" title="检查数据包内容"></a>检查数据包内容</h3><p>在以上的示例中，我们只按数据包头部的信息来建立规则筛选数据包，例如源地址、目的地址、端口号等等。有时我们需要分析网络连接问题，可能需要分析数据包中的内容来判断什么内容需要被发送、什么内容需要被接收等。tcpdump 提供了两个选项可以查看数据包内容，-X 以十六进制打印出数据报文内容，-A 打印数据报文的 ASCII 值。</p><p>例如，HTTP 请求报文内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">$ sudo tcpdump -i any -c10 -nn -A port 80</span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv <span class="keyword">for</span> full protocol decode</span><br><span class="line">listening on any, link-type LINUX_SLL (Linux cooked), capture size 262144 bytes</span><br><span class="line">13:02:14.871803 IP 192.168.122.98.39366 &gt; 54.204.39.132.80: Flags [S], seq 2546602048, win 29200, options [mss 1460,sackOK,TS val 133625221 ecr 0,nop,wscale 7], length 0</span><br><span class="line">E..&lt;..@.@.....zb6.<span class="string">'....P...@......r............</span></span><br><span class="line"><span class="string">............................</span></span><br><span class="line"><span class="string">13:02:14.910734 IP 54.204.39.132.80 &gt; 192.168.122.98.39366: Flags [S.], seq 1877348646, ack 2546602049, win 28960, options [mss 1460,sackOK,TS val 525532247 ecr 133625221,nop,wscale 9], length 0</span></span><br><span class="line"><span class="string">E..&lt;..@./..a6.'</span>...zb.P..o..&amp;...A..q a..........</span><br><span class="line">.R.W.......     ................</span><br><span class="line">13:02:14.910832 IP 192.168.122.98.39366 &gt; 54.204.39.132.80: Flags [.], ack 1, win 229, options [nop,nop,TS val 133625260 ecr 525532247], length 0</span><br><span class="line">E..4..@.@.....zb6.<span class="string">'....P...Ao..'</span>...........</span><br><span class="line">.....R.W................</span><br><span class="line">13:02:14.911808 IP 192.168.122.98.39366 &gt; 54.204.39.132.80: Flags [P.], seq 1:113, ack 1, win 229, options [nop,nop,TS val 133625261 ecr 525532247], length 112: HTTP: GET / HTTP/1.1</span><br><span class="line">E.....@.@..1..zb6.<span class="string">'....P...Ao..'</span>...........</span><br><span class="line">.....R.WGET / HTTP/1.1</span><br><span class="line">User-Agent: Wget/1.14 (linux-gnu)</span><br><span class="line">Accept: */*</span><br><span class="line">Host: opensource.com</span><br><span class="line">Connection: Keep-Alive</span><br><span class="line">................</span><br><span class="line">13:02:14.951199 IP 54.204.39.132.80 &gt; 192.168.122.98.39366: Flags [.], ack 113, win 57, options [nop,nop,TS val 525532257 ecr 133625261], length 0</span><br><span class="line">E..4.F@./..<span class="string">"6.'...zb.P..o..'.......9.2.....</span></span><br><span class="line"><span class="string">.R.a....................</span></span><br><span class="line"><span class="string">13:02:14.955030 IP 54.204.39.132.80 &gt; 192.168.122.98.39366: Flags [P.], seq 1:643, ack 113, win 57, options [nop,nop,TS val 525532258 ecr 133625261], length 642: HTTP: HTTP/1.1 302 Found</span></span><br><span class="line"><span class="string">E....G@./...6.'...zb.P..o..'.......9.......</span></span><br><span class="line"><span class="string">.R.b....HTTP/1.1 302 Found</span></span><br><span class="line"><span class="string">Server: nginx</span></span><br><span class="line"><span class="string">Date: Sun, 23 Sep 2018 17:02:14 GMT</span></span><br><span class="line"><span class="string">Content-Type: text/html; charset=iso-8859-1</span></span><br><span class="line"><span class="string">Content-Length: 207</span></span><br><span class="line"><span class="string">X-Content-Type-Options: nosniff</span></span><br><span class="line"><span class="string">Location: https://opensource.com/</span></span><br><span class="line"><span class="string">Cache-Control: max-age=1209600</span></span><br><span class="line"><span class="string">Expires: Sun, 07 Oct 2018 17:02:14 GMT</span></span><br><span class="line"><span class="string">X-Request-ID: v-6baa3acc-bf52-11e8-9195-22000ab8cf2d</span></span><br><span class="line"><span class="string">X-Varnish: 632951979</span></span><br><span class="line"><span class="string">Age: 0</span></span><br><span class="line"><span class="string">Via: 1.1 varnish (Varnish/5.2)</span></span><br><span class="line"><span class="string">X-Cache: MISS</span></span><br><span class="line"><span class="string">Connection: keep-alive</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE HTML PUBLIC"</span>-//IETF//DTD HTML 2.0//EN<span class="string">"&gt;</span></span><br><span class="line"><span class="string">&lt;html&gt;&lt;head&gt;</span></span><br><span class="line"><span class="string">&lt;title&gt;302 Found&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;h1&gt;Found&lt;/h1&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;The document has moved &lt;a href="</span>https://opensource.com/<span class="string">"&gt;here&lt;/a&gt;.&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;&lt;/html&gt;</span></span><br><span class="line"><span class="string">................</span></span><br><span class="line"><span class="string">13:02:14.955083 IP 192.168.122.98.39366 &gt; 54.204.39.132.80: Flags [.], ack 643, win 239, options [nop,nop,TS val 133625304 ecr 525532258], length 0</span></span><br><span class="line"><span class="string">E..4..@.@.....zb6.'....P....o..............</span></span><br><span class="line"><span class="string">.....R.b................</span></span><br><span class="line"><span class="string">13:02:15.195524 IP 192.168.122.98.39366 &gt; 54.204.39.132.80: Flags [F.], seq 113, ack 643, win 239, options [nop,nop,TS val 133625545 ecr 525532258], length 0</span></span><br><span class="line"><span class="string">E..4..@.@.....zb6.'....P....o..............</span></span><br><span class="line"><span class="string">.....R.b................</span></span><br><span class="line"><span class="string">13:02:15.236592 IP 54.204.39.132.80 &gt; 192.168.122.98.39366: Flags [F.], seq 643, ack 114, win 57, options [nop,nop,TS val 525532329 ecr 133625545], length 0</span></span><br><span class="line"><span class="string">E..4.H@./.. 6.'...zb.P..o..........9.I.....</span></span><br><span class="line"><span class="string">.R......................</span></span><br><span class="line"><span class="string">13:02:15.236656 IP 192.168.122.98.39366 &gt; 54.204.39.132.80: Flags [.], ack 644, win 239, options [nop,nop,TS val 133625586 ecr 525532329], length 0</span></span><br><span class="line"><span class="string">E..4..@.@.....zb6.'....P....o..............</span></span><br><span class="line"><span class="string">.....R..................</span></span><br><span class="line"><span class="string">10 packets captured</span></span><br><span class="line"><span class="string">10 packets received by filter</span></span><br><span class="line"><span class="string">0 packets dropped by kernel</span></span><br></pre></td></tr></table></figure><p>这对定位一些普通 HTTP 调用 API 接口的问题很有用。当然如果是加密报文，这个输出也就没多大用了。</p><h3 id="保存抓包数据"><a href="#保存抓包数据" class="headerlink" title="保存抓包数据"></a>保存抓包数据</h3><p>tcpdump 提供了保存抓包数据的功能以便后续分析数据包。例如，你可以夜里让它在那里抓包，然后早上起来再去分析它。同样当有很多数据包时，显示过快也不利于分析，将数据包保存下来，更有利于分析问题。</p><p>使用 -w 选项来保存数据包而不是在屏幕上显示出抓取的数据包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ sudo tcpdump -i any -c10 -nn -w webserver.pcap port 80</span><br><span class="line">[sudo] password <span class="keyword">for</span> ricardo:</span><br><span class="line">tcpdump: listening on any, link-type LINUX_SLL (Linux cooked), capture size 262144 bytes</span><br><span class="line">10 packets captured</span><br><span class="line">10 packets received by filter</span><br><span class="line">0 packets dropped by kernel</span><br></pre></td></tr></table></figure><p>该命令将抓取的数据包保存到文件 webserver.pcap。后缀名 pcap 表示文件是抓取的数据包格式。</p><p>正如示例中所示，保存数据包到文件中时屏幕上就没有任何有关数据报文的输出，其中 -c10 表示抓取到 10 个数据包后就停止抓包。如果想有一些反馈来提示确实抓取到了数据包，可以使用 -v 选项。</p><p>tcpdump 将数据包保存在二进制文件中，所以不能简单的用文本编辑器去打开它。使用 -r 选项参数来阅读该文件中的报文内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ tcpdump -nn -r webserver.pcap</span><br><span class="line">reading from file webserver.pcap, link-type LINUX_SLL (Linux cooked)</span><br><span class="line">13:36:57.679494 IP 192.168.122.98.39378 &gt; 54.204.39.132.80: Flags [S], seq 3709732619, win 29200, options [mss 1460,sackOK,TS val 135708029 ecr 0,nop,wscale 7], length 0</span><br><span class="line">13:36:57.718932 IP 54.204.39.132.80 &gt; 192.168.122.98.39378: Flags [S.], seq 1999298316, ack 3709732620, win 28960, options [mss 1460,sackOK,TS val 526052949 ecr 135708029,nop,wscale 9], length 0</span><br><span class="line">13:36:57.719005 IP 192.168.122.98.39378 &gt; 54.204.39.132.80: Flags [.], ack 1, win 229, options [nop,nop,TS val 135708068 ecr 526052949], length 0</span><br><span class="line">13:36:57.719186 IP 192.168.122.98.39378 &gt; 54.204.39.132.80: Flags [P.], seq 1:113, ack 1, win 229, options [nop,nop,TS val 135708068 ecr 526052949], length 112: HTTP: GET / HTTP/1.1</span><br><span class="line">13:36:57.756979 IP 54.204.39.132.80 &gt; 192.168.122.98.39378: Flags [.], ack 113, win 57, options [nop,nop,TS val 526052959 ecr 135708068], length 0</span><br><span class="line">13:36:57.760122 IP 54.204.39.132.80 &gt; 192.168.122.98.39378: Flags [P.], seq 1:643, ack 113, win 57, options [nop,nop,TS val 526052959 ecr 135708068], length 642: HTTP: HTTP/1.1 302 Found</span><br><span class="line">13:36:57.760182 IP 192.168.122.98.39378 &gt; 54.204.39.132.80: Flags [.], ack 643, win 239, options [nop,nop,TS val 135708109 ecr 526052959], length 0</span><br><span class="line">13:36:57.977602 IP 192.168.122.98.39378 &gt; 54.204.39.132.80: Flags [F.], seq 113, ack 643, win 239, options [nop,nop,TS val 135708327 ecr 526052959], length 0</span><br><span class="line">13:36:58.022089 IP 54.204.39.132.80 &gt; 192.168.122.98.39378: Flags [F.], seq 643, ack 114, win 57, options [nop,nop,TS val 526053025 ecr 135708327], length 0</span><br><span class="line">13:36:58.022132 IP 192.168.122.98.39378 &gt; 54.204.39.132.80: Flags [.], ack 644, win 239, options [nop,nop,TS val 135708371 ecr 526053025], length 0</span><br><span class="line">$</span><br></pre></td></tr></table></figure><p>这里不需要管理员权限 sudo 了，因为此刻并不是在网络接口处抓包。</p><p>你还可以使用我们讨论过的任何过滤规则来过滤文件中的内容，就像使用实时数据一样。 例如，通过执行以下命令从源 IP 地址 54.204.39.132 检查文件中的数据包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ tcpdump -nn -r webserver.pcap src 54.204.39.132</span><br><span class="line">reading from file webserver.pcap, link-type LINUX_SLL (Linux cooked)</span><br><span class="line">13:36:57.718932 IP 54.204.39.132.80 &gt; 192.168.122.98.39378: Flags [S.], seq 1999298316, ack 3709732620, win 28960, options [mss 1460,sackOK,TS val 526052949 ecr 135708029,nop,wscale 9], length 0</span><br><span class="line">13:36:57.756979 IP 54.204.39.132.80 &gt; 192.168.122.98.39378: Flags [.], ack 113, win 57, options [nop,nop,TS val 526052959 ecr 135708068], length 0</span><br><span class="line">13:36:57.760122 IP 54.204.39.132.80 &gt; 192.168.122.98.39378: Flags [P.], seq 1:643, ack 113, win 57, options [nop,nop,TS val 526052959 ecr 135708068], length 642: HTTP: HTTP/1.1 302 Found</span><br><span class="line">13:36:58.022089 IP 54.204.39.132.80 &gt; 192.168.122.98.39378: Flags [F.], seq 643, ack 114, win 57, options [nop,nop,TS val 526053025 ecr 135708327], length 0</span><br></pre></td></tr></table></figure><h2 id="下一步做什么？"><a href="#下一步做什么？" class="headerlink" title="下一步做什么？"></a>下一步做什么？</h2><p>以上的基本功能已经可以帮助你使用强大的 tcpdump 抓包工具了。更多的内容请参考 tcpdump 网站以及它的帮助文件。</p><p><a href="https://hackertarget.com/tcpdump-examples/" target="_blank" rel="noopener">https://hackertarget.com/tcpdump-examples/</a></p><p>tcpdump 命令行工具为分析网络流量数据包提供了强大的灵活性。如果需要使用图形工具来抓包请参考 Wireshark。</p><p>Wireshark 还可以用来读取 tcpdump 保存的 pcap 文件。你可以使用 tcpdump 命令行在没有 GUI 界面的远程机器上抓包然后在 Wireshark 中分析数据包。</p><p>一站式学习 Wireshark<br><a href="https://community.emc.com/thread/194901" target="_blank" rel="noopener">https://community.emc.com/thread/194901</a><br><a href="https://www.w3cschool.cn/wireshark/" target="_blank" rel="noopener">https://www.w3cschool.cn/wireshark/</a></p>]]></content>
    
    <summary type="html">
    
      tcpdump 是一款灵活、功能强大的抓包工具，能有效地帮助排查网络故障问题。
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>从国内跳槽至新加坡工作的经验分享</title>
    <link href="https://wsgzao.github.io/post/singapore/"/>
    <id>https://wsgzao.github.io/post/singapore/</id>
    <published>2019-02-14T06:59:49.000Z</published>
    <updated>2019-02-14T10:10:21.037Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://wx3.sinaimg.cn/large/7207510dgy1fv6xrebwasj21jj0uzqe6.jpg" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>记录和分享自己在新加坡的工作生活以及新加坡的基本介绍，如果你只想了解我是如何来到新加坡的可以直接跳到最后一章。</p><blockquote><p>为帮助大家玩转新加坡，快速适应当地生活</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 02 月 14 日 - 更新半年的经历以及 PR 申请流程<br>2018 年 09 月 09 日 - 增加新加坡 3 个月工作生活感受<br>2018 年 08 月 01 日 - 更新个人经验<br>2018 年 05 月 15 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/singapore/">https://wsgzao.github.io/post/singapore/</a></p><p><strong> 扩展阅读 </strong></p><p>新加坡外交部 - <a href="https://www.mfa.gov.sg/content/mfa/overseasmission/beijing/ch.html" target="_blank" rel="noopener">https://www.mfa.gov.sg/content/mfa/overseasmission/beijing/ch.html</a><br>新加坡眼 - <a href="https://www.yan.sg/" target="_blank" rel="noopener">https://www.yan.sg/</a></p><hr><h2 id="认识狮城"><a href="#认识狮城" class="headerlink" title="认识狮城"></a>认识狮城</h2><p>姓名：新加坡</p><p>年龄：53 岁（成立于 1965 年，国庆日为每年的 8 月 9 日）</p><p>家庭住址：北半球赤道地区，位于马来半岛最南端 （北纬 1°22′，东经 103°48′）</p><p>住房面积：新加坡国土面积 710.3 平方公里 （新加坡面积是上海的 1/9，北京的 1/23）</p><p>家庭成员：人口约 520 万，密度达到每平方公里 7700 多人（排在世界前列）</p><p>相貌特征：新加坡多元种族和文化的相互融合是其极具魅力的原因之一，由华族（占全国人口约四分之三）、欧亚族、印度族、马来族、土生华人构成。</p><p>性格特征：新加坡以实行严格的法律和制度著称，无论是居民还是游客，都需要予以足够重视，否则可能会被课以重罚。当然，如果您遵循当地法律规章，也不必过分担心。</p><blockquote><p>所获荣誉：或许这些荣誉只属于过去，我们更需要关心的是现在和未来会怎样</p></blockquote><p>让人最想移民的国家全球排名第一<br>全球最具竞争力国家排名第一<br>最适应亚洲人士居住的地方全球排名第一<br>城市基础设施建设全球排名第一<br>全球化程度最高的城市排名第一</p><p>其他方面：<a href="http://www.visitsingapore.com.cn/travel-guide-tips/about-singapore/" target="_blank" rel="noopener">http://www.visitsingapore.com.cn/travel-guide-tips/about-singapore/</a></p><h2 id="旅游出入境"><a href="#旅游出入境" class="headerlink" title="旅游出入境"></a>旅游出入境</h2><blockquote><p>签证</p></blockquote><p>中国公民去新加坡须提前申请有效签证，不可以落地签。</p><p>中国公民申请的新加坡旅游 / 商务签证为电子签证（e-Visa），在获得签证后，建议上网打印多份有效签证以防遗失。签证费为每人 SG$30。</p><p>新加坡签证可多次入境，有效期分别有 35 天 / 62 天 / 2 年，由签证官根据申请人资料而定。逗留时间则由入境官决定，通常为 14-30 天。从 2015 年 6 月 1 日起新加坡将给予符合条件的中国公民有效期长达 10 年的多次入境签证。</p><p><a href="http://www.visitsingapore.com.cn/travel-guide-tips/travelling-to-singapore/" target="_blank" rel="noopener">http://www.visitsingapore.com.cn/travel-guide-tips/travelling-to-singapore/</a></p><blockquote><p>申请途径 How to Apply</p></blockquote><p>2014 年 12 月 8 日起大使馆及各领事馆停止接收签证申请，可登录新加坡外交部官网，查询中国国内官方指定的签证机构，办理新加坡签证。</p><blockquote><p>所需资料 Required Information</p></blockquote><ol><li>个人信息表（登录新加坡外交部官网下载表格，链接：<a href="http://www.mfa.gov.sg）" target="_blank" rel="noopener">www.mfa.gov.sg）</a></li><li>户口本（原件或扫描电子版，户主 + 个人页复印件）</li><li>身份证（原件或正反面扫描电子版，正反面复印件）</li><li>护照（原件或个人页扫描电子版，个人页复印件，有效期 6 个月以上）</li><li>2 张 2 寸白底免冠照片</li><li>在职证明原件或相关职业证书</li></ol><blockquote><p>出入境</p></blockquote><p>从 2018 年 10 月 4 日起，新加坡纸质入境卡（人称 “白卡”）即将走入历史！取而代之的是电子化入境卡。</p><p>访客可通过移民关卡局官方网站 <a href="https://www.ica.gov.sg/" target="_blank" rel="noopener">https://www.ica.gov.sg/</a> 或下载手机应用程序填写资料。通过手机填写资料还有自动储存功能，以方便下一次入境时使用。而与家人或小组团体同游新加坡的人，能够以团体方式提交入境资料。</p><p>离境前别忘了退税，在附有 “退税” 标志的场所消费满 100 新币以上，即可退回 7% 的商品及服务税，退税时需出示购物发票或收据。具体的退税要求，可咨询工作人员。</p><blockquote><p>其它注意事项</p></blockquote><p>电源插座：新加坡使用的标准电流是 220-240 伏特交流电（50 赫兹），在这里，您可以使用三眼电源插座。</p><p><a href="http://www.visitsingapore.com.cn/travel-guide-tips/" target="_blank" rel="noopener">http://www.visitsingapore.com.cn/travel-guide-tips/</a></p><p><img src="https://ws3.sinaimg.cn/large/7207510dgy1frc1wdtdd7j20vh12047o.jpg" alt=""></p><h2 id="新加坡工作准证"><a href="#新加坡工作准证" class="headerlink" title="新加坡工作准证"></a>新加坡工作准证</h2><blockquote><p>关于工作准证的最新信息请以新加坡人力部 (MOM) 发布的为准</p></blockquote><p><a href="https://www.mom.gov.sg/" target="_blank" rel="noopener">https://www.mom.gov.sg/</a></p><p>在新加坡工作，新加坡人力部 Ministry Of Manpower (MOM) 是最常打交道的政府部门，工作准证不仅是由人力部批准和颁发所有文件提交最终也是到达人力部</p><p>注意：所有提交给 MOM 的资料原件，都需要在入境的时候随身携带。以便在去人力部办卡的时候，让长官核实和查阅。</p><ol><li>新版卡片上将不再印刷准证的到期日期，新版卡片会印上二维码（QR Code），下载 SGWorkPass 的手机 APP 后，可以扫码查看持卡人的职务、证件是否有效等信息</li><li>如果过海关或签合约等需要核对卡片截止日期时，不再可以只看卡面信息，还需要扫码或在线上核对截止日期等，建议保存 SGWorkPass 截图至手机中以防万一</li></ol><p><img src="https://wx1.sinaimg.cn/large/7207510dgy1fv5lr2gqf4j21a40ek0xd.jpg" alt=""></p><p><a href="https://docs.qq.com/sheet/DeVh5ZEhKWnhCTldK" target="_blank" rel="noopener">如果发现表有错误请点击链接申请编辑更新，谢谢</a></p><h3 id="Work-Permit-WP"><a href="#Work-Permit-WP" class="headerlink" title="Work Permit (WP)"></a>Work Permit (WP)</h3><p>WP 是人力部设置的给外国低水准员工提供的工作准证。</p><p>对申请者的要求：薪水和学历：无要求<br>年龄：马来西亚人（18-58 周岁），非马来西亚人（18-50 周岁）；<br>对公司的要求：需要为其购买保额至少 15000 新币的保险；缴纳 5000 新币担保金<br>注意事项：<br>公司需要先为雇员申请好 WP 并办理保险，才可以持 WP 准证进入新加坡。在申请的状态中，本人不可以进入新加坡。</p><h3 id="S-PASS-SP"><a href="#S-PASS-SP" class="headerlink" title="S PASS (SP)"></a>S PASS (SP)</h3><p>SP 是人力部设置的给外国中级技术水准雇员提供的工作准证。</p><p>对申请者的要求：学历：大专，本科，或者技术资质认证（需要至少一年全职学习获得的技术认证）；<br>工作年限：虽然没有明文规定最少需要多少年的工作经验，但工作经验会作为一个审核标准；<br>对公司的要求：所付起薪 2200 新币；</p><p>注意事项：<br>也有公司人头配额限制：服务行业 SP 人数不可超过总员工的 15%，其它行业是 20%。<br>你在申请之前需要确保学历在 Dataflow，学信网及中国学位与研究生教育信息网上可以查到。另外，针对不同的行业，也有可能需要提交相关的专业证明。</p><h3 id="Employment-Pass（EP）"><a href="#Employment-Pass（EP）" class="headerlink" title="Employment Pass（EP）"></a>Employment Pass（EP）</h3><p>EP 是人力部设置的给外国专业人员（管理层，主管或专业职位）提供的工作准证. 是工作准证中级别最高的。</p><p>对申请者的要求：<br>年轻的申请者需拥有优秀院校的毕业证书，且达到 3600 的雇佣薪水以及拥有相关专业经验才可以申请。<br>至于年长的申请人，则必须拥有更高的薪水以及相应工作经验和工作质量。</p><p>对雇主的要求：<br>所付起薪 3600 新币</p><p>注意事项：<br>和申请 SP 一样，在申请之前需要确保学历在 Dataflow，学信网及中国学位与研究生教育信息网上可以查到。另外，针对不同的行业，也有可能需要提交相关的专业证明。<br>根据对应的准证类型，提交人力部 (MOM) 所要求的材料</p><ul><li>有效的护照信息</li><li>必要的技能证书</li><li>有效的毕业证</li></ul><p>2018 年 1 月 1 日起两件重要变化</p><ul><li>EP 准证持有人月薪至少 6000 新币以上可以给配偶和孩子申请相关准证(DP)</li><li>EP 准证持有人月薪至少 12000 新币以上可以申请父母长期探访准证（LTVP)</li></ul><h2 id="家庭成员准证"><a href="#家庭成员准证" class="headerlink" title="家庭成员准证"></a>家庭成员准证</h2><h3 id="Dependant‘s-Pass-家属准证（DP）"><a href="#Dependant‘s-Pass-家属准证（DP）" class="headerlink" title="Dependant‘s Pass 家属准证（DP）"></a>Dependant‘s Pass 家属准证（DP）</h3><p>家属准证，在新加坡工作或经商，并持有 EP SP 或 Enptrpass 的人士，可为自己的配偶及 21 岁以下小孩申请的一种准证。持家属准证的小孩，可直接入学新加坡政府中小学。</p><p>薪水：担保人固定月薪薪水需达到 5,000 新币以上。（2018 年 1 月 1 日起至少达到 6000 新币以上）。</p><p>工作：EP 或创业准证家属，可通过公司向人力部申请新加坡工作的凭证 LOC（Letter of consent），批准后，可直接工作（不占用公司配额）。SP 家属准证，需申请工作准证后才能工作。家属准证（DP）持有人申请到工作准证（EP 或 SP）后需取消 DP，SP 家属取得的工作准证有效期与 SP 持有人准证有效期相关。</p><h3 id="Long-Term-Visit-Pass-长期探访准证（LTVP）"><a href="#Long-Term-Visit-Pass-长期探访准证（LTVP）" class="headerlink" title="Long Term Visit Pass 长期探访准证（LTVP）"></a>Long Term Visit Pass 长期探访准证（LTVP）</h3><p>长期探访准证，是新加坡政府颁发的一种可以在新加坡长期居住的准证，期限从半年到十年不等。其中新加坡公民的配偶又可以申请获得 LTVP+。目前的审批部门有两个，一个是 ICA 移民厅，一个是 MOM 人力部。</p><p>需要去移民厅申请的：</p><ol><li>新加坡公民的配偶<br>2.PR 的配偶</li><li>新加坡公民 / PR 未满 21 周岁的小孩</li><li>新加坡公民 / 21 周岁以上 PR 的父母</li><li>寻求在新加坡工作的有关高校毕业生</li><li>小孩 / 孙辈在新加坡持学生准证读书的母亲或外祖母</li><li>寻求准许在新加坡分娩者</li></ol><p>新加坡移民局网址<br><a href="https://www.ica.gov.sg/" target="_blank" rel="noopener">https://www.ica.gov.sg/</a></p><p>需要去人力部申请的：</p><ol><li>EP/SP 准证持有者的配偶（2018 年 1 月 1 日起至少 6000 新币）</li><li>EP/SP 准证持有者未满 21 周岁的未婚残疾子女（2018 年 1 月 1 日起至少 6000 新币）</li><li>EP/SP 准证持有者未满 21 周岁的未婚继子女（2018 年 1 月 1 日起至少 6000 新币）</li><li>EP/SP 准证持有者的父母（2018 年 1 月 1 日起至少 12000 新币）</li><li>Entrepass（创业准证）的父母</li></ol><p>新加坡人力部网址：<br><a href="https://www.mom.gov.sg/" target="_blank" rel="noopener">https://www.mom.gov.sg/</a></p><h2 id="新加坡通讯指南"><a href="#新加坡通讯指南" class="headerlink" title="新加坡通讯指南"></a>新加坡通讯指南</h2><p>国内的手机大部分都可以在新加坡直接换卡使用，除非你的手机是中国移动 4G 定制版本，由于网络制式的区别，无法使用新加坡 4G 网络，新加坡目前 2G 网络停止服务。</p><blockquote><p>小贴士：建议使用全网通手机，去国外任何地方都可以直接换卡使用。</p></blockquote><p>运营商：新电信（Singtel）、星河（Starhub）和 M1（Mobile One）</p><p>在新加坡机场、邮局、7-11 便利店和代理商都可以购买和充值电话卡，记得一定要带上护照，新加坡的手机卡采用实名制。推荐大家下载所用运营商的 App，查询和购买话费、流量等。</p><blockquote><p>Zero1: Get Ready For Unlimited Data | Plans</p></blockquote><p>我自己办理的是 Zero1 的 9.9 新币 / 月无限流量套餐</p><p>详情请参考官网：<a href="https://zero1.sg/" target="_blank" rel="noopener">https://zero1.sg/</a></p><h2 id="新加坡交通指南"><a href="#新加坡交通指南" class="headerlink" title="新加坡交通指南"></a>新加坡交通指南</h2><p>新加坡主要交通出行方式：地铁（MRT）、轻轨（LRT）、巴士（Bus）和德士（Taxi）。</p><p>其中地铁（MRT）是新加坡最便捷的交通工具，也是日常最佳的出行方式。根据官方 2017 年 1 月份提供的最新信息显示，全岛共设有 142 个车站，目前主要的运营线中，南北运营线以 “NS” 红线标明，东西运营线以 “EW” 绿线标明，东北运营线以 “NE” 紫线标明，环线以 “CC” 黄线标明，市区运营线以 “DT” 蓝线。</p><p><img src="http://ws2.sinaimg.cn/large/7207510dgy1ftu6uc735wj215o0xp48v.jpg" alt=""></p><p>新加坡地铁图</p><p><a href="https://exploresg.com/ditie/" target="_blank" rel="noopener">https://exploresg.com/ditie/</a></p><p>新加坡地铁和巴士车 (站) 内规定</p><ol><li>不可吃喝、吸烟、携带榴莲、大声喧哗和带宠物 </li><li>Bus 不报站、上下车需要刷卡</li></ol><p>温馨提示</p><ol><li>地铁和巴士上冷气很足，建议携带薄外套</li><li>在 20 分钟内，地铁和巴士之间转换，车资有优惠</li><li>在地铁或者商场等使用扶梯时，左侧是站立侧，右侧是快速通道</li></ol><h2 id="新加坡房屋指南"><a href="#新加坡房屋指南" class="headerlink" title="新加坡房屋指南"></a>新加坡房屋指南</h2><blockquote><p>组屋(HDB)</p></blockquote><p>新加坡的“组屋”，全称为组合房屋。由新加坡建屋发展局（HDB）不以盈利为目的承担建筑的楼房，为大部分新加坡人（80%）的住所。</p><p>组屋一般分为三房式、四房式和五房式。三房式指一厅两房，使用面积约 60 平方米；四房式是一厅三房，使用面积约 90 平方米；五房式是两厅三房，使用面积大致在 110 平方米。</p><p>组屋的区分都是按照地区名 + 数字，例如：PasirRis Block 186（巴西立大牌 186）、YishunBlock 210（义顺大牌 210）等。</p><p>屋内客厅，厨房，卫生间都是公用设施，一般会配备冰箱，洗衣机，空调或者风扇。</p><p>租房费用（一般情况下）：</p><p>新型组屋 (近 10 年内建成的) 相对条件会好很多 (平均价格 S$1000-1200 / 间)<br>单人单间：500-1000 新币<br>二人间：350-550 新币 / 人<br>四人间：270-350 新币 / 人</p><p><strong> 小贴士 </strong></p><ol><li>新加坡政府规定租住的房子必须要能在建屋局上注册。正常情况下，注册要求至少住 6 个月。如果不能注册，就是不合法的房屋。</li><li>如果退租，一定要提前一月声明，以防押金不退。</li><li>仔细看合同，仔细看合同，仔细看合同。</li></ol><blockquote><p>私人公寓(Condo)</p></blockquote><p>公寓，常见两房式或三房式，相当于国内的高档成熟社区，内有免费游泳池、健身房，BBQ 等公共设施，住宿环境相对较好，价格也相对高一些；大部分的 condo 房间都有主人房与非主人房之分，主人房有自己独立的洗手间和相对宽敞的卧室，当然价格也比非主人房高 200-300 / 月(非主人房平均价格<br>S$1,000-1,500 / 间 / 月)</p><blockquote><p>排屋(Terrace)</p></blockquote><p>独门不独栋的联排别墅，此类出租房源相对较少，住宿环境、价格与房子位置、条件有相当大的关系。</p><blockquote><p>独栋别墅(Landedproperty)</p></blockquote><p>少见于房间出租。</p><h2 id="租房"><a href="#租房" class="headerlink" title="租房"></a>租房</h2><blockquote><p>如果英语不是太差，不推荐狮城 BBS 或者微博租房，如果你有认识的新加坡房产中介自然是最佳选择</p></blockquote><p>Property Guru - <a href="http://www.propertyguru.com.sg/" target="_blank" rel="noopener">http://www.propertyguru.com.sg/</a></p><p>新加坡本地发布平台，房源多。使用下来感觉 Property Guru 信息发布是最多的，信息筛选条件多，容易搜索到希望的房源。多为中介发布，有中介费。</p><p>Nestia - <a href="https://www.nestia.com/" target="_blank" rel="noopener">https://www.nestia.com/</a></p><p>新加坡本地发布平台，功能强。Nestia 上的房源也比较多，但感觉不如 Property Guru。不过 Nestia 可以以某一建筑（公司地址）为中心从远及近的搜索房源。找步行距离的房源就很合适了。另外自带的导航也不错。所以我是 Property Guru 和 Nestia 结合使用。</p><p>99.co - <a href="https://www.99.co/" target="_blank" rel="noopener">https://www.99.co/</a></p><p>新加坡本地发布平台，平台新。和上面两个相比算是一个比较新的平台，数据没有 Property Guru 多但是针对房屋本身的介绍更加详细，房源信息相对真实。</p><p>在新加坡租房，有哪些经验可以分享？<br><a href="https://www.zhihu.com/question/22430961" target="_blank" rel="noopener">https://www.zhihu.com/question/22430961</a></p><h2 id="在新加坡买房与中国有何不同？"><a href="#在新加坡买房与中国有何不同？" class="headerlink" title="在新加坡买房与中国有何不同？"></a>在新加坡买房与中国有何不同？</h2><blockquote><p>无论在中国还是新加坡买房前后都记得关注下政策上的变化，新加坡买房的流程很简单，首付 = 房屋价格 + 税 + 中介费 - 贷款额度。</p></blockquote><p><img src="https://ws4.sinaimg.cn/large/7207510dgy1fuwkom9kljj20u00i30u7.jpg" alt=""></p><p>① 面积</p><p>说到面积，首先让中国买家摸不着头脑的，就是面积单位的换算。中国买家习惯用平方米（也称平方公尺）计算面积，来新加坡选购房子时听到的都是平方英尺，往往脑子得转一圈才知道个大概。1 平方米约等于 10.8 平方英尺。100 平方米就是 1080 平方英尺。</p><p>除了计算单位不同，“面积”一词在两地公寓市场上的定义也不一样。在中国，面积指的是建筑面积；新加坡算的是实用面积。建筑面积的算法比较繁琐。简单来讲，是根据各套房屋的套内建筑面积，求得各套房屋分摊所得的共有建筑分摊面积，比如门口的面积、楼梯等，都按比例算进每一个单位的建筑面积。</p><p>所以，同一个公寓单位，其建筑面积一定会大于实用面积，通常后者比前者少 20％左右。在中国买一个 “100 平方米” 的单位，和在新加坡买一个“1080 平方英尺”（相当于 100 平方米）相比，后者明显感觉宽敞一点，就是这个道理。</p><p>② 地契</p><p>中国的房产地契通常是 70 年左右，而新加坡的则有 99 年、999 年和永久地契之分。新加坡的房产因为地契年限长，颇受外籍人士青睐。其中，永久地契的房产一般要比 99 年地契的贵 20％。尽管如此，永久地契一直很抢手，也深受中国买家欢迎，因为买家看准这块市场的保值与增值。</p><p>这其中很大程度上因为新加坡的地皮比较少，想要建新楼必须拆掉现有的建筑。不像中国地皮比较多，还有可开发的地段。新加坡永久地契的地段价值比较高，所以如果进行集体出售、或是被政府征用的话，永久地契房地产的房主会可得到较高的补偿。</p><p>物以稀为贵，永久地契房产越是少见，也就越炙手可热。此外，永久地契对中国买家还有另一大吸引力，那就是永久地契满足了 “总觉得要给后代留下点什么” 的传统华人心愿。所以说，新加坡房产能如此吸引外国买家，与地契久脱不了关系。</p><p>③ 贷款</p><p>在新加坡首次购房的买家，可向金融机构贷款的房贷比率顶限为 80％，外籍人士一般则最高 70％。在中国，外国人一般不能向本土中国银行贷款，只能通过外资银行或中国银行境外支行。</p><p>原本新加坡和中国在房贷比率顶限方面有很大差别。不过两国都不断调整房贷比率顶限，因此两国的房贷比率顶限差别已缩小。</p><p>④ 税收</p><p>在新加坡，如果在一定期限里卖掉公寓，卖家需要上缴印花税。在 2011 年 1 月 14 日过后买房的购屋者，只要在四年内卖房屋都需要支付卖方印花税，第一、二、三和四年卖掉房产的税率分别是 16％、12％、8％和 4％。此后就不必上缴卖家印花税。</p><p>在中国，除了印花税外，还需要上缴增值税。为了给中国房地产市场降温，中国政府在 2013 年实施 20％的房地产买卖增值税。所谓增值税，就是对卖家卖房所得的利润征收的税。譬如，150 万人民币买的房子在几年后以 200 万人民币卖掉，卖家所赚得的 50 万就将需要以一定的比率交税。</p><p>⑤ 车位</p><p>在中国购买中高档住宅，需要另外购买车位。而在新加坡，买家不需要另付车位费，发展商一般会为每个新单位赠送一个车位。可不能小瞧这个车位费。近年来，车位费在中国节节攀升，动辄十几、二十万人民币，是一笔不小的开销。</p><p>新加坡私人公寓不收车位费，而是将停车场的修建和维护等费用，包括在每月的项目管理费之中。管理费除了车库，还包括游泳池、健身房等设施，每月一般是几百元新元。如果每月的管理费是 300 元新元（约 1400 元人民币），一年就是 1 万 7000 元人民币，15 年刚好是 25 万 5000 元人民币。总体来讲，这要比中国的车位 “划算” 得多。</p><h2 id="新加坡医疗指南"><a href="#新加坡医疗指南" class="headerlink" title="新加坡医疗指南"></a>新加坡医疗指南</h2><p>新加坡是一个热带国家，从国内刚过去有可能因水土不服引起的伤风、感冒、皮肤敏感或蚊虫叮咬等。出行之前可以带一些三九胃泰、牛黄解毒等日常药品之类的药品，防范于未然是最好的。</p><p>看医生：在新加坡持有工作签证，所在的公司会按照新加坡劳工部规定给每位员工会购买医疗保险或者费用报销。</p><p>医疗保险：一般是三种模式</p><ol><li>直接去合作门诊，提供公司信息，看病不用自己拿钱。</li><li>直接去合作门诊，提供公司信息，看病前给门诊 5 新币（每个公司不一样），其它的费用不用自己拿。</li><li>直接去合作门诊，自己先付产生的费用，然后去公司报销。意外伤害险等（视公司合同规定）。</li></ol><h2 id="公立和私立医疗服务"><a href="#公立和私立医疗服务" class="headerlink" title="公立和私立医疗服务"></a>公立和私立医疗服务</h2><blockquote><p>中国人在新加坡看病就好比外国人在中国看病一样不是很方便，价格不便宜，小病也有可能看成大病</p></blockquote><p>新加坡的医疗服务体系以优质高效著称，选择面广, 综合医院，专科医院，私人诊所遍布全国, 随处可见；不仅为全新加坡的公民，永久居民，外籍工作人士提供服务，同时周边国家的高端人群, 包括东南亚、亚洲、欧洲、中东阿拉伯等国家的病患都会将新加坡的国际医疗服务作为他们的首选。</p><p>新加坡的公立医疗机构和私立医疗机构在整个医疗系统中扮演着不同的角色。基础医疗门诊 80% 由私立医疗机构 / 家庭医生诊所提供，另外 20% 则是由政府综合诊疗所提供；而综合医疗，包括各类科室的住院，专科和 24 小时急诊主要由公立医疗机构提供，占 80% 的比例，剩下的 20% 由私立医疗机构提供。由于政府的有效规划和管控，公立医院和私立医院相辅相成, 缺一不可。</p><p>在公立医疗机构就诊一般都需要提前预约, 候诊时间较长, 也不能自由选择医生。由于那里的医生要面对更多的患者, 为每个患者服务的时间相对较短；而私立医疗机构由于患者相对较少, 不需要预约, 候诊时间较短，还可以自己选择医生，医生也能与患者作更多的交流, 提供更细致的服务，收费就相应高一些。</p><p>一些新加坡的公立医院也为自费病人提供高端医疗服务, 设有针对性的部门和项目, 如体检，会诊，专科治疗等。基础的检查和服务, 公立医院比私立医院收费较低；对于外籍人士和高端的服务项目, 公立和私立医院的收费差异不大。</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzIwMTQxODUxNw==&amp;mid=2650871863&amp;idx=3&amp;sn=b9536c73a1b6a0e0ed02019598d75c35&amp;chksm=8d1b8a4dba6c035b898a133fdf30ec613eb6826a0f4a66d5befe6364a04e24fb6bde9a981ce7&amp;scene=21" target="_blank" rel="noopener">8 家新加坡著名的公立和私立医院</a></p><h2 id="货币兑换和汇款"><a href="#货币兑换和汇款" class="headerlink" title="货币兑换和汇款"></a>货币兑换和汇款</h2><blockquote><p>如果时间宽裕，推荐走新加坡工商银行渠道</p></blockquote><p>新加坡实行货币开放政策，货币兑换中心随处可见，尤其是在牛车水 (China Town) 附近。如有汇款需求到国内，可以先去牛车水汇款 (珍珠坊二楼)，方便快捷。等周围熟悉后，推荐去淡宾尼(Tampines) 汇款到国内，汇率会比其它地方高一些。具体的地方，在地图搜索 Tampines Money Exchange Center。 </p><p>小贴士：汇款中心一般可以汇到中国邮政、中国农业、中国交通、中国招商和中国银行等。第一次汇钱到国内，当填写汇款单据的时候一定要知道对方银行卡是在 <strong> 省 </strong> 市 ** 银行支行开户的(很重要)。</p><h2 id="法律法规"><a href="#法律法规" class="headerlink" title="法律法规"></a>法律法规</h2><p>新加坡向来是给世人展示优美环境，井然秩序，舒适安全的名片，然而这些美好的展现离不开新加坡法律制度的约束和规范。Singaporeis a“fine”country 完整的诠释了这两方面。所以在新加坡生活，你需要注意以下细节：</p><ol><li>自动排队：公共场合最经常听到的一句话就是 please queue！</li><li>着装：不同场合穿不同衣服, 建议每天换衣服。</li><li>公共习惯：乘坐公共交通或者在公共场合用餐时, 切忌大声喧哗, 不然你一样会被当做异类奥! 而且记得再饿也要撑到下车再用餐。</li><li>言论：新加坡是多文化和宗教融合的国家, 公共场合不要发表敏感政治言论或者宗教话题, 这也体现互相尊重。</li><li>不当行为：竖中指可能会被当做种族歧视处理的</li><li>如厕：来也匆匆, 去也冲冲。如若不然请准备 500 新币吧。</li><li>口香糖：公共场所不允许嚼口香糖, 不可以随意买卖, 允许带少量入境, 正是这个奇葩的规定维护了公共环境的整洁。</li><li>吸烟：新加坡公共场所绝对禁烟。如若吸烟不幸被抓到, 恭喜你一个月的工资 (高达 2000 新币) 为国家做贡献了!</li><li>垃圾：乱丢垃圾初犯者将处高达 1000 新币罚款, 再犯者将罚款额提高至 2000 新币以及在劳改法令下受罚。</li><li>交通规则：闯红灯, 随便乱穿马路这些不多啰嗦。违反的是规则, 伤害的是人身安全, 因为小编也感觉马路上的车如同闪电般行驶。</li><li>不可非法聚会和使用暴力</li></ol><p>以上内容是提醒大家在生活细节方面应遵守的规则, 但有些行为未必就可以罚款结案的, 比如: 签证到期后逾期逗留、抢劫、公共场所涂鸦、纵火、携带毒品等这些可都是在鞭刑的定罪范围内的。</p><p><strong> 最后郑重的提醒各位：</strong> 在机场不要发扬助人为乐精神帮陌生人携带物品, 因为很有可能你同时把生命交给了别人(运输毒品和贩毒同罪)。</p><h2 id="工作准证遗失如何处理"><a href="#工作准证遗失如何处理" class="headerlink" title="工作准证遗失如何处理"></a>工作准证遗失如何处理</h2><ol><li>发现丢失后立即携带护照或者工作准证的复印件到任何一间警察局报案，记得保存报案记录原件。</li><li>通知雇主公司 HR, 让其在 7 天之内在新加坡人力部网上提交补办工作准证的申请。</li><li>费用: 首次补办 100 新币, 第二次是 300 新币(一般在提交申请补办 4 个工作日可去新卡)</li></ol><h2 id="银行卡遗失如何处理"><a href="#银行卡遗失如何处理" class="headerlink" title="银行卡遗失如何处理"></a>银行卡遗失如何处理</h2><ol><li>发现遗失后立即拨打银行客户服务中心热线挂失</li><li>银行客户专员会核对护照和工作准证信息, 然后等待新卡邮寄到住处或者去支行直接领取。</li></ol><p>POSB 用户请拨打 18003396963<br>DBS 用户请拨打 18001111111<br>UOB 用户请拨打 18002222121<br>OCBC 用户请拨打 18003633333</p><h2 id="护照遗失如何处理"><a href="#护照遗失如何处理" class="headerlink" title="护照遗失如何处理"></a>护照遗失如何处理</h2><p>如护照遗失或被盗, 请立即到中国驻新加坡大使馆如实填写《护照遗失陈述表》，提供关于护照遗失或被盗的情况说明, 以及提供报警记录原件及复印件。如护照损毁, 请提交损毁的护照, 以及护照损毁的原因说明。</p><p>具体的更换护照和网上预约等等详细流程请参考大使馆的官网：<a href="http://www.chinaembassy.org.sg/chn/" target="_blank" rel="noopener">http://www.chinaembassy.org.sg/chn/</a></p><p>中国驻新加坡大使馆信息:</p><p>地址: 150 TANGLIN ROAD,SINGAPORE 247969</p><p>领事部：64712117；92971517(仅限紧急领保求助, 不接受证件咨询)</p><p>Email: <a href="mailto:chinaemb_sg@mfa.gov.cn" target="_blank" rel="noopener">chinaemb_sg@mfa.gov.cn</a></p><p>办公时间：周一至周五(节假日除外)</p><p>上午 9:00-11:30</p><h2 id="新加坡日常-App-推荐"><a href="#新加坡日常-App-推荐" class="headerlink" title="新加坡日常 App 推荐"></a>新加坡日常 App 推荐</h2><blockquote><p>如果是 Android 记得安装 Google 框架，如果是 iOS 记得调整更改 Apple ID 国家或地区</p></blockquote><p>交通: Grab(类似国内滴滴)、Google Map(谷歌地图)、SG Buses(公交时刻表)、Mobike（摩拜单车国内账户通用）</p><p>社交: Facebook、WhatsApp、Twitter、Instagram</p><p>购物: Shopee、Lazada、eBay、Amazon、淘宝国际、京东国际、网易考拉、网易严选、小米有品</p><p>娱乐: Youtube(视频必备)、 Golden Village(电影院)、CATHAY (电影院)</p><p>快递: 小坡岛集运、淘宝直送 / 集运</p><p>特别推荐: Zero1(9.9 每月无限流量手机卡)、SG BusLeh(更好用的公交时刻表)、eatigo(开启新加坡美食 5 折之旅)</p><h2 id="新加坡父母签证"><a href="#新加坡父母签证" class="headerlink" title="新加坡父母签证"></a>新加坡父母签证</h2><blockquote><p>网上找到的，忘记出处了，如果有错误描述请及时指正</p></blockquote><p>本人 PR，老婆七月份预产期。打算让父母 6 月中旬来。计划步骤如下:<br>1, 先买往返机票（返程可更改的）。<br>=== 对的。<br>2,5 月份申请父母旅游签证。<br>=== 旅游签证可提前一个月内申请，有效期多数 63 天，也有一年，两年，非固定。有效期内入境即可。<br>3, 父母来新后申请延期至 89 天。<br>=== 对的。<br>4, 同时申请 LTVP。<br>=== 也没错。<br>5, 悲剧后申诉。<br>=== 步骤没错。<br>请指点一下按这样做有什么不拖吗？<br>=== 有什么不妥是吧？没什么不妥的，如果觉得自己条件还可以，就可以早点安排申请 LTVP，如果觉得条件比较牵强，可以晚一点入境，晚一点延期，晚一点申请 ltvp，争取在月子后多待一点时间帮你们带孩子。<br>可以现在就申请旅行签证吗?<br>=== 提前一个月内申请，一个月内，内。<br>旅行签证有效期多久? 一年多次吗？<br>=== 上面已经回答了。<br>申请 LTVP 必须人在新加坡吗？<br>=== 是的。必须入境后申请。</p><p><a href="https://www.ica.gov.sg/" target="_blank" rel="noopener">https://www.ica.gov.sg/</a></p><h2 id="新加坡公民-永久居民-外国人的区别"><a href="#新加坡公民-永久居民-外国人的区别" class="headerlink" title="新加坡公民 / 永久居民 / 外国人的区别"></a>新加坡公民 / 永久居民 / 外国人的区别</h2><blockquote><p>我们大多数人的起点是外国人，这点与国内的户口制度类似，无论是中国还是新加坡始终绕不开买房和教育这两座大山</p></blockquote><p><img src="http://wx1.sinaimg.cn/large/7207510dgy1fv25ybdomqj21su0qiwqe.jpg" alt=""></p><p><a href="https://docs.qq.com/sheet/B80RhZ2ZATLC0ge3Bi2bLYpr2iY5PC1nE3031LWRcK1rTcgj0Z2bvD00bDO63Ie3tz2ovOwW4" target="_blank" rel="noopener">如果发现表有错误请点击链接申请编辑更新，谢谢</a></p><h3 id="EP-申请-PR"><a href="#EP-申请-PR" class="headerlink" title="EP 申请 PR"></a>EP 申请 PR</h3><blockquote><p>在新加坡工作满半年即可申请 PR，不过大概率是被拒的，失败后等待半年继续申请挑战吧</p></blockquote><p>基本准备材料：</p><ol><li>护照 （资料页）</li><li>准证 / 身份证 （如有）</li><li>出生证明 （公证件）</li><li>更名证明（如有）</li><li>最高学历（成绩单，资格证，会员资质等也可提供）</li><li>护照尺寸照片</li></ol><blockquote><p>其他所需材料：</p></blockquote><p>A1：以前雇主的推荐信，说明就业的性质，持续时间以及基本工资（有最好了，没有也可以）<br>A2：过去 6 个月的薪资单（这个找 HR 开）<br>A3：现任雇主的信函，说明就业日期，过去 6 个月的每月工资，包括加班和津贴（找 HR 开）。这封信 To 谁呢，记得是 To Controller of Immigration，而且要在申请前一个月内开具<br>A4：IRAS 同意书，表示同意 ICA 获取和核实与此相关的财务信息</p><blockquote><p>已婚汪们还需要这些：</p></blockquote><p>B1：结婚证书（需要公证的记得公证）<br>B2：关于之前婚姻的死亡证明或离婚证明（如有）<br>B3：关于以前婚姻的子女的监护文件（如有）<br>B4：配偶的最高教育证书（包括大专学历），成绩单，职业资格证，能证明牛 X 的统统甩出来哈！</p><blockquote><p>如果配偶一同申请：</p></blockquote><p>B5：配偶的有效旅行证件及有效的入境通行证，护照（资料页）<br>B6：配偶的出生证明<br>B7：更名文件（如有）<br>B8：配偶的身份证（如适用）<br>B9：关于配偶以前的婚姻（如有）离婚证明以及孩子的监护文件，或者死亡证明</p><blockquote><p>如果孩子一起申请：</p></blockquote><p>C1：护照资料页<br>C2：孩子的出生证明，显示孩子和父母的姓名<br>C3：儿童收养文件（如适用）<br>C4：儿童改名证明（如适用）</p><h3 id="PR-申请公民"><a href="#PR-申请公民" class="headerlink" title="PR 申请公民"></a>PR 申请公民</h3><blockquote><p>等 PR 满两年后再申请</p></blockquote><p><a href="https://toutiaosg.com/%E5%90%90%E8%A1%80%E6%95%B4%E7%90%86%EF%BC%81%E5%A6%82%E4%BD%95%E5%9C%A8%E7%BD%91%E4%B8%8A%E7%94%B3%E8%AF%B7%E6%96%B0%E5%8A%A0%E5%9D%A1pr%E5%92%8C%E5%85%AC%E6%B0%91%E6%9C%80%E5%BC%BA%E6%94%BB%E7%95%A5/" target="_blank" rel="noopener">吐血整理！如何在网上申请新加坡 PR 和公民最强攻略！收藏~</a></p><h2 id="个人经验"><a href="#个人经验" class="headerlink" title="个人经验"></a>个人经验</h2><blockquote><p>选择新加坡的理由：给自己多一种选择</p></blockquote><ul><li>MOM: Ministry of Manpower</li><li>IPA: In-Principle Approval</li><li>EP: Employment Pass 人才准证</li><li>DP: Dependant’s Pass 家属准证</li><li>PR: Singapore Permanent Resident 新加坡永久居民</li><li>SC: Singapore Citizen 新加坡公民</li><li>HDB: Housing &amp; Development 政府组屋</li><li>Condo: 私人公寓</li><li>Food Court: 食阁</li><li>CPF: 公积金</li><li>NUS: National University of Singapore 新加坡国立大学</li><li>NTU: Nanyang Technological University 新加坡南洋理工大学</li></ul><ol><li>原始坐标：上海，无留学经验也没有去过新加坡</li><li>猎头推荐新加坡的职位，想想自己那被遗忘的蹩脚英语抱着试一试的心态</li><li>一共 3 轮 Skype 远程视频面试，约 4 周时间到最后确认 offer</li><li>约 1 天时间思考，离职申请，签电子合同</li><li>检查护照有效期，下载学信网英文翻译认证，由 HR 帮助提交申请 EP，约 3 周内收到 IPA</li><li>在上海户口所在区公证处办理结婚证公证翻译，约 3 周时间完成，又慢又麻烦</li><li>完成 EP 后由 HR 帮助提交申请 DP，约 1 周内收到 IPA</li><li>购买机票，打印 IPA，带上护照，打包行李，兑换 4000 新币，确认人事档案存放地址，选择不缴纳每月养老保险和医疗保险约 1500 元人民币(可由父母代缴，中断非连续缴纳暂时不影响回国养老，以政策变化为准)</li><li>飞机上填写好新加坡入境卡，完成入境登记，无需录入指纹，开启华为天际通</li><li>抵达公司提前安排好的住址，熟悉新加坡环境</li><li>办理 EZ-Link 交通卡和 Singtel Prepaid 手机卡(如果没有强需求可以暂时不办理)</li><li>公司 HR 提交 EP 现场办理申请，收到邮件后预约 MOM 办理时间（我没有被要求体检，根据不同公司情况而定）</li><li>约 1 周后收到 EP 绿色实体卡，使用 SGWorkPass 扫描保存照片，注册 SingPass 后约 1 周左右收到密码信封</li><li>公司开具证明办理银行卡，新加坡本地我选择 UOB(保持 1000 新币存款)，另外强烈推荐再办理工商银行卡(持卡 0 门槛，转账回国 0 费用)</li><li>网上申请 Zero1 的无限流量手机卡，约 3 个工作日收到直接使用，弃用 Singtel Prepaid（浪费了 25 新币）</li><li>新加坡日常消费以现金为主，我本人习惯手机支付无奈降级至刷信用卡阶段(持有浦发 AE 白 / Visa/Master)，怀念下国内的支付宝和微信</li></ol><p>我刚来新加坡 1 个多月，不用担心语言不通，大部分人都会说华语。新加坡真的不算大，地铁和公交都很方便，空气质量很好至少我的鼻炎消失了，天气没有国内那么热，居然没有蚊子，没有蚊子，没有蚊子。在这段时间里我幸运了结识了交大和复旦的校友，跟随专业的中介实地考察了新加坡的租房和买房市场，走遍了几个重要的核心区域，顺便吃了几顿亲民的米其林一星。之后我应该还会继续更新自己在新加坡的经历，比如健身、快递、看病等日常生活，希望对大家有所帮助。</p><h3 id="新加坡-3-个月感想"><a href="#新加坡-3-个月感想" class="headerlink" title="新加坡 3 个月感想"></a>新加坡 3 个月感想</h3><blockquote><p>咋们就从最传统的衣食住行说起吧</p></blockquote><p><strong> 衣 </strong></p><p>因为新加坡全年都是夏季，平时的正常温度基本在 30° 上下，对于我来说已经把家里的夏装的家底全部带过来了，所以也没有什么特别需要单独购买，作为男生如果以后缺衣服的话在新加坡线下就是优衣库，线上还是优衣库。</p><p>女生的选择实在太多了，乌节路和 VivoCity 等都可以逛好久，这里就跳过吧</p><p>新加坡本地的 Outlet(奥特莱斯)是 IMM，如果你喜欢跑步运动，那么只卖 80 新币的 adidas Ultraoost X 和 Asics GEL-Kayano 会有一定吸引力</p><p>在新加坡网购，和国内激烈竞争的胜出者相比，还有很长一段路要走，当然也证明东南亚市场是一块巨大的蛋糕等待挖掘</p><p>新加坡室内空调冷气普遍开得比较足，建议怕冷的同学多备件长袖外套在公司，长时间逛商场时注意冷热交替避免生病</p><p>从中国快递至新加坡我通常会选择和同事拼团 小坡岛新加坡集运</p><p><a href="http://www.xiaopodao.com" target="_blank" rel="noopener">http://www.xiaopodao.com</a></p><p><strong> 食 </strong></p><p>新加坡最有特点的饮食文化莫过于食阁(Food Court)，其实有点类似于上海的大食代，但价格亲民而且还有米其林一星的神奇存在，平均一顿的价格区间在 3-7 新币，整体口味偏重。每个食阁上方都会标注 A/B/C 卫生评级，新加坡本地的习惯一般不在家做饭，大家都出去吃所以种类也还算多，不知道吃什么可以认准 Singapore Best Foods 红色标志，和国内相比关键是放心。</p><p>如果平时想吃顿大餐类似国内海底捞、小龙坎那种，平均每人大概 30-50 新币左右，评级更高的餐厅价格自然也水涨船高</p><p>自己在家做饭的成本其实和外面吃也差不了多少，如果居住的房子允许大炒和大煮当然可以选择自己动手丰衣足食</p><p>新加坡的菜市场比较少见可能是我没有刻意去寻找或者需求的缘故吧，买蔬菜和肉类基本都在 Sheng Siong(昇菘)，FairPrice(NTUC)，Cold Storage，喜欢日本食物还可以选择 DON DON DONKI，我个人很喜欢这只萌企鹅的魔性主题曲</p><p><a href="https://www.bilibili.com/video/av32078102" target="_blank" rel="noopener">https://www.bilibili.com/video/av32078102</a></p><p>新加坡的便利店清一色 7-Eleven，部分大一点的屈臣氏 (Watsons) 支持支付宝(Alipay)，上面提到的 Sheng Siong 已经全部支持 Alipay</p><p>外卖大家就不要指望 GrabFood 或 Foodpanda 有饿了么和美团外卖的速度了，老老实实去附近的食阁按时吃饭才是正道</p><p>新增推荐 eatigo，我每个周末都会使用 eatigo 开启 5 折美食之旅</p><p><a href="https://eatigo.com/sg/singapore/en" target="_blank" rel="noopener">https://eatigo.com/sg/singapore/en</a></p><p><strong> 住 </strong></p><p>(1) 租房</p><p>我在租房这个环节基本上算是跳过了，刚来时建议找好房源，这边的酒店居住成本很高的。因为目前是长租在公司提供的组屋 (HDB) 内，毕竟室友都是公司自己人很放心，合同限制不多每月会安排阿姨定期打扫和保养空调等，手机银行转账支付租金也方便。回想当时刚来的 1 个月每周都跟随专业的中介校友出去找房子都十分辛苦，更不要说自己联系中介一家一家看了，说多了都是泪。这边的房产中介需要考证，据说通过率只有 10-15%，每个中介都会展示唯一的证书编号，所以不用太担心被骗，不过每个中介的态度千差万别，找到靠谱的中介能够加快找房的速度。</p><p>由于地理位置和房屋面积质量差异，下面的租房价格仅仅是一个参考区间，数字单位为新币 / 月<br>组屋(HBD)，普通房 600-800，主人房 1000-1200，整租 1000+<br>公寓(Condo)，普通房 800-1500，主人房 1200-2000，整租 1500+</p><p>房源信息可以来自于同事，也可以自己在线挑选，方法我都写在前面了，和同事咨询过新加坡租房的大致流程</p><ol><li>看准自己喜欢的房子</li><li>看清楚合同，看清楚合同，看清楚合同，签约</li><li>签 1 年一般押一付一，签 2 年押二付一</li><li>中介费是根据实际情况由房东或者租客来承担，一般根据合约长短支付 0.5 或 1 个月的房租作为中介费</li></ol><p>(2) 买房</p><p>虽然是否决定买房的话题为时尚早，但经历了魔都十几年房地产的上涨自然也不会错过对新加坡房地产的研究，如果你是冲着 30w 新币的组屋 (HDB) 那么找新加坡本地人结婚是最快的途径。新加坡在 2018 年 07 月 06 日 0 点开始调整了印花税，对于我们普通人来说 2-3 年内拿到永久居民 (PR) 已然不易。新加坡私人公寓 (Condo) 的价格和质量相对国内来说是有优势的，但是 1 室 80w，2 室 100w，3 室 120w 这样的价格加上印花税还是会让我们感到一丢丢肉疼，好在房地产市场涨幅长期平稳且退出机制清晰，租房市场也足够活跃，而且银行可以贷款 7 成 + 2% 左右的低利率还是足以让我们拥有奋力一搏的勇气，不用牺牲 6 个钱包。</p><p><strong> 行 </strong></p><p>现在无论在哪里手机的使用比重都是极高的，我自己来新加坡前把小米 6 替换为华为 P20 Pro，妻子还是用的小米 MIX2，在国内早已习惯电信乐享家 199 元全国无限流量，我们的老卡 1 个是移动，1 个是联通，来到新加坡之后选择了无合约限制价格为 29.99 新币无限流量的虚拟运营商 Zero1.sg，因为背后是 Singtel 所以质量有保障。在新加坡接收国内短信验证码之类不要钱，双卡双待都是没有问题的，不过我妻子还是很期待 iPhone 即将推出的双卡功能，毕竟她在美国时的 iPhone5s 也用了 4 年多，被我硬生生拖入 Android 阵营实属不易。 </p><p>新加坡公共交通发达，Google Map 在手说走就走。我的选择和国内类似，能坐地铁尽量就不会选择公交车，因为坐公交车有几点不爽，如果你不熟悉新加坡或者不会熟练使用 Google Map 建议不要轻易乘坐公交车。</p><blockquote><p>乘坐地铁切记不可吃喝、吸烟、携带榴莲、大声喧哗和带宠物，乘坐公交车的规定与地铁类似但有以下额外注意事项</p></blockquote><ol><li>公交车来之前一定要招手才会停</li><li>在到达下一站前一定要按 Stop 红色停车按钮，不然不会停</li><li>下车时还要再刷一次交通卡确认付款</li></ol><p>除了公交车和国内差异较大以外，平时过马路记得按一下身边的指示灯，你不按或者对面也没人按，那你就不用想着过去了</p><p>这边的公交卡称为 EZ-Link，想刷 NFC 不好意思没有小米和华为，请购买 NFC SIM card。虽然充值很方便支持国内双币信用卡，但我还是很想念上海二维码扫码进闸机。另外新加坡地铁站没有安检，没有安检，没有安检。</p><p>我丢过一次地铁卡，为了挽回里面 25 新币我第一次主动走进新加坡警察局开具丢失证明，他们做事确实负责而高效，不过我因为操作失误导致旧卡数据没有正常转移到新卡，超过 7 天申报时间我也没有办法无力回天，所以再一次怀念下国内的手机刷卡。</p><p>新加坡已经遍布 Mobike 和 ofo，摩拜的国内账户可以在这里直接使用，ofo 需要重新注册。</p><p>新加坡打车市场已经被 Grab 一统江湖，Uber 和滴滴出行都入股 Grab，另外 Grab 打车很安全而且支持支付宝(Alipay)，普通出租车都支持微信和支付宝</p><p>关于机票从上海往返新加坡的航班很多，价格和飞行时间比较透明就不多说了，我这里还是推荐大家体验下新加坡航空 (Singapore Airlines) 的服务，今年航空公司评选又站回全球第一，即使乘坐经济舱也不要忘记品尝一下新加坡司令哈。</p><p>今年国庆节期间我和老婆买了新加坡至四川成都的 5 日往返机票，新加坡航空旗下的胜安航空(SilkAir)，令我感到惊喜的是 2 人机票往返价格总共才 1600 人民币。</p><p>新加坡拥车成本比较高，虽然公共交通发达，但是开车的梦想还是要有的，万一实现了呢？</p><p>新加坡和国内的走位不一样，行走避让和司机开车位置与国内正好相反。</p><blockquote><p>传统的四大金刚扯完了，我们再聊一些逆转未来的话题</p></blockquote><p><strong> 安全 </strong></p><p>新加坡的安全本质上是基于严格的法律加上遍布各地的摄像头，你如果想挑战下不如先了解下鞭刑的酸爽和罚款罚到你肉疼的数字。</p><p>吸烟，喝酒，乱扔垃圾在法律中都有明确要求，虽然不能百分百杜绝抽烟现象，但你走在马路上不会遇到随意吐痰也不需要提防狗屎。穿过十字路口车辆都会早早的自觉停下来等你先过去，新加坡随处可见的就是无障碍设施，地铁沿线基本都设置了棚顶，既可以防晒又可以躲雨，即便每天都能遇到短时暴雨由于出色的排水系统也从来不会看到有积水。</p><p>在国内随时会收到的垃圾短信和房产金融中介等骚扰电话，在新加坡基本是看不到的，不过 Email 和 WhatsApp 这种网络骚扰还是无法消灭的。这边的违法成本比较高只要被投诉就会收到法律的严格制裁，当然注意保护自己的隐私安全始终不能掉以轻心，毕竟再文明的社会偶尔也会遇上小人。</p><p>在新加坡你基本不用担心丢失物品，因为大概率都能找回来，包包也不用刻意放在前面，拉链忘记拉上也没关系，不用担心人口贩子和小孩走丢，更不用担心一个人走夜路会不会不安全，犯罪成本高促成的低犯罪率给你带来的不仅仅是安全感更是幸福感。</p><p>由于新加坡的地理位置极好，无论是过去还是未来基本是不会受到任何灾难气候影响，台风、海啸或者地震是不存在的</p><p>新加坡的人际关系相对简单，与人为善的过程中也不要忘记多留个心眼谨慎一些，在这边和他人发生误会大多数都会听到 Sorry 和 I am fine 而不是争吵，规规矩矩排队而很少有人随意插队，政府办事效率高以廉洁著称也是难能可贵，在新加坡未必有国内这么亲切有人情味，但你能感受到的是相对的公平和简单。</p><p><strong> 健康 </strong></p><p>我在上海的时候就饱受着变态反应性鼻炎的痛苦，每次体检医生都开玩笑要不住到外环去吧，没想到现在离家这么远。至少来新加坡后我的鼻子就彻底舒畅了，我原来对空气质量也不以为然，买个小米净化器放在家里，直到离开上海前看见基因检测报告提醒风险最高的是鼻咽癌，我才明白空气对于每个人的未来都是如此重要。</p><p>新加坡的温度常年保持在 30° 上下，不会像上海夏季烈日炎炎，但新加坡比较像“蓝天白云 晴空万里 突然暴风雨”，有云有风有遮雨棚，身体其实会觉得很舒服.</p><p>之前已经说过新加坡的饮食文化以食阁 (Food Court) 为主，这些小店很多都有几十年的历史，食物未必都符合你的胃口但至少足够安全，不用担心地沟油。合理的饮食搭配以及规律的生活节奏才是根本。</p><p>新加坡本地人都注重健身，如果不想花太多钱在健身房可以考虑在小区附近的体育馆免费跑步或者花费 1.3 新币游泳。私人公寓 (Condo) 一般自带小型游泳池和健身房，虽然小但有总比没有好。如果公司有补贴健身房的价格 (一般 150-200 新币每月) 其实也不算太贵，每月 99 新币可以选择像 Fitness First or Pure Fitness(Pure Yoga)等专业健身房。</p><p>关于看病，因为前段时间工作比较忙抵抗力突然下降导致出现额头皮肤红肿，在国内经历过不注意小病而酿成大病的惨痛教训，<a href="https://wsgzao.github.io/post/wisdom-tooth/">我是如何做到花 8000 元拔智齿的</a>，所以这次特地请 1 天病假去公司合作的 Raffles Medical 私人诊所看病，事后看诊断结果比较准确且看病过程十分高科技 + 高效率，病因是 <code>带状疱疹</code>，总共 99 新币，30 是问诊费其余都是买药钱。只不过第二天我发现未有起色且眼皮红肿都快睁不开了就先让昨天的医生开具的急症介绍信，然后直奔 Raffles Hospital，在了解基本无大碍和每位专科医生复查至少 300 新币起步的情况下果断申请放弃继续治疗赶紧溜回去休养生息，这一趟花了 199 新币，其中 130 为问诊费(节假日看病费用翻翻)。命固然重要，但人只要一生病真的可能失去一切甚至连累家人。</p><p>和同事回顾了他们看病的流程，作为外国人一般也是建议直接去附近的私人医院，价格其实差不多但不用排队。如果选择去政府医院比如 NUH 等可能存在排队现象，这个体验对于国内看病来说大家心里应该很明白有多痛苦，如果各位有足额的医疗保险在国内其实可以选择特需医疗(免排队 + 专家门诊)。关于新加坡医院的更多信息可以参考最上面的介绍。</p><p>印尼 “烧芭” 引发空气污染和马来西亚动不动就拿断水挑事也是新加坡需要持续努力解决的问题之一。</p><p>新加坡的蔬菜和水果算不上贵但也不会像国内一样便宜，除了猫山王榴莲和部分进口水果质量和价格有优势，也没有太多的种类可供选择，我自己会从网易考拉购买 Swisse 作为补充，话说新加坡的营养品真心贵，同样的 Swisse 一小瓶卖 56 新币，其它品牌价格也是高居不下。</p><p><strong> 娱乐消费 </strong></p><p>新加坡本身就很小，加上我和我妻子都倾向于工作，学习和健身。平时的娱乐活动也就停留在节假日出去寻找下亲民美食，慢慢游览新加坡仅有的几个景点，新加坡环球影城，S.E.A. 海洋馆，新加坡动物园，新加坡夜间动物园，滨海湾花园，金沙酒店附近的鱼尾狮和摩天轮，圣淘沙和赌场，其它像植物园，大学校园很多都是免费的，旅游一般 2 天可以快速结束，如果需要细细品味也就再多增加 1-2 天足够了。</p><p>新加坡娱乐设施真的不算很多，看电影还得去现场买票，网上购买需要多花钱。吃喝玩乐想看看附近的活动和评价都没有像美团点评类似的产品，毕竟需求不像国内这么大，但我觉得让国内的美团猫眼或者阿里淘票票来进攻新加坡市场，相信分分钟钟可以拿下。</p><p>新加坡本地目前小额仍然以现金为主，商场一般支持刷卡，而主要的景点和购物中心区域全部覆盖支付宝(Alipay)</p><p><strong> 教育培训 </strong></p><p>虽然现在谈教育太早但是新加坡本地的教育资源始终都是偏向本国公民的，对我们来说永久居民 (PR) 只是万里长征的第一步，要不要买学区房，要不要做义工，也是留给自己的问题。感觉这又有上海户口，学区房，拼父母，何其相似？</p><p>新加坡和中国一样都很注重基础教育，对子女的教育支出都很高，新加坡第三方教育机构或者成人专业类培训机构的市场也很大。最近在微信朋友圈看到英国 BBC 邀请 3 名威尔士的优等生体验韩国鸡血教育的文章，除了深刻感受到教育的重要性，更加理解韩国快速崛起的因素，成熟而完整的教育产业链对孩子很重要，对国家来说更重要。</p><p><strong> 工作生活 </strong></p><p>我目前在一家新加坡互联网公司上班，工作制度是弹性的，没有严格的打卡要求，正常时间为 09:30-19:00，周围以中国同事居多，大部分是在这边读书毕业工作，学校几乎清一色新加坡国立大学 (NUS) 和新加坡南洋理工大学(NTU)，工作语言为英文，核心生产力工具包括 Google Suite，顶配 MacBook Pro，Herman Miller，Dell 2417H，还有无限制的饮料，水果和零食。原以为只能在国内的创业公司和少数尊重技术的优质公司才能看到的办公环境，可能在国外是很常见的事情吧。新加坡互联网公司在 IT 方面的人才非常短缺，也许是因为本地人大都投身于金融行业，所以很多技术人才也是会考虑从中国引进，甚至直接在国内开设分公司。</p><p>因为我以 EP 身份把我老婆也带了过来，目前还是 DP。对她来说在新加坡找一份金融行业的工作真的非常不容易，花了 2 个多月时间扫光了 LinkedIn 在新加坡几乎所有公开招聘，遗憾的是很少有金融行业愿意招聘非新加坡公民 (SZ) 和永久居民 (PR) 以外的人群，得到的回复大多数都是 Sorry，毕竟新加坡政府在很多地方都会优先照顾本国人的利益，这个道理放在中国也很好理解。不过目前经历了 6 轮面试最终拿到了一个还不错的 offer，后续 DP 也要转成 EP，这是一件值得庆幸的事情。</p><p>在没有明显压缩新加坡生活成本，按 1 人每月估算为 1w 人民币，如果是 2 个人差不多是 1.5w 人民币</p><p>新加坡月薪中位数是 4500 新币左右，新加坡人力部公布了 2018 年全国的工资中位数 4437 新币 / 月</p><p>HDB 合租主人房: 1100<br>水电网: 50<br>移动套餐: 9.9<br>饭费: 20x30<br>交通: 2x30<br>健身: 99<br>理发: 12<br>其他: 100</p><p>≈2030.9 新币≈10000 人民币，如果你是单人还可以选择普通房大概 800 每月。不过我相信新加坡贵的部分体现在后期的看病和生娃教育上</p><p>中国 VS 新加坡，生娃养娃究竟要花多少钱？</p><p>中国：</p><ul><li>生娃：3000-1 万人民币</li><li>养娃：65 万元 - 130 万人民币</li><li>总计：约 65 万 - 131 万人民币</li></ul><p>新加坡：</p><ul><li>生娃：1003-18912 新币</li><li>养娃：至少 67 万新币</li><li>总计：约 69 万新币</li></ul><p>推荐下 Grammarly for Chrome，在写邮件和文档时可以快速发现并纠正语法错误，对提升英文书写能力非常有帮助。我自己也是第一次开始深度使用 MacBook，记录一些简单的入门过程在 Blog 中，也可以做下参考。</p><p>MacBook 使用指北 - <a href="https://wsgzao.github.io/post/macbook/">https://wsgzao.github.io/post/macbook/</a></p><p><strong> 养老政策 </strong></p><p>新加坡不养闲人，你在新加坡的食阁 (Food Court) 仔细观察过就会发现几乎所有打扫卫生的都是老年人，和中国相比新加坡的养老金 CPF 是交多少退多少，不会被平均，所以更多的本地人会提前了解基金股票保险和投资房地产等方式来为自己养老。新加坡、日本、韩国等国家的老龄化问题已经凸显，我们都可以看到未来国内严重的老龄化趋势，谁又能独善其身呢？</p><p>新加坡政府因为楼市过热而提高印花税的闪电行动，中国也吹响了全球征税的集结号，无论身在哪里我们始终躲不开政治不是吗？</p><h2 id="日用品推荐"><a href="#日用品推荐" class="headerlink" title="日用品推荐"></a>日用品推荐</h2><blockquote><p>回顾来新加坡前后的经历，我希望自己分享的一部分实用建议和商品可以帮助大家更好的适应新加坡生活。如果你不喜欢网易严选和网易考拉可以选择性跳过。</p></blockquote><p>只能通过简单描述分享的建议：</p><ol><li>随身携带好护照和相关入境材料，非常重要，非常重要，非常重要</li><li>证件，学历和结婚证公正翻译等材料可以通过扫描全能王 (CamScanner) 录入为电子版，水印是可以很方便去除的，这里就不多说了。如果觉得好用请购买正版服务支持下总部位于上海的合合信息，名片全能王 (CamCard) 也是他们家的产品</li><li>提前规划好到达新加坡后的住宿，交通出行，手机应用，SIM 卡，入职流程</li><li>准备好足够的新币现金建议 4k+，因为银行卡和租房都是大头，有条件至少准备一张以上的 Visa/Mastercard 信用卡</li><li>出国前检查下国内的银行，手机，社保，人事档案是否安排妥当，身份证和护照离过期更换时间是否可控</li><li>如果有条件出国前做下全面的体检至少对自己身体有一个清晰的认识，把牙齿之类的小毛小病尽可能提前扫除隐患</li><li>现在的网络通信都很发达，记得和家人保持联系，减少他们的担心，自己照顾好自己</li></ol><p>我自己携带并且大家都能买到的产品分享：</p><ol><li>药品：我带的是泰诺和夫西地酸乳膏，这边初期看病成本还是比较高，建议最好带一些板蓝根、急用的抗生素、抗过敏药及自己习惯的常用药，如胃药、哮喘喷剂等等。</li><li>其他综合的日用品，我是分 3 批带过来的，这里按照重要性分成 2 部分来推荐，大部分来自网易严选和网易考拉工厂店，关于原因我也记录了自己的观点。如果你不喜欢网易严选和网易考拉可以选择性跳过。</li></ol><p>我的线上线下购物变迁史 - <a href="https://wsgzao.github.io/post/buy/">https://wsgzao.github.io/post/buy/</a></p><h3 id="必备推荐"><a href="#必备推荐" class="headerlink" title="必备推荐"></a>必备推荐</h3><blockquote><p>我就只推荐适用于男同胞的产品了，虽然我妻子也是在严选和工厂店买，如果各位有需求我日后可以再补充，她的东西实在是多</p></blockquote><p>[手机 / 耳机 / 智能穿戴无推荐]<br>Follow Your Heart</p><p><a href="http://163.lu/I8OGX1" target="_blank" rel="noopener">28 寸 纯 PC“铝框”（非全铝）拉杆箱</a><br>新秀丽制造商，但是怎么看怎么觉得更像是日默瓦(RIMOWA)，虽然有小米 90 分旅行箱但 20 寸太小，为了追求更大容量就买了这款，使用感受非常可靠，五星推荐</p><p>[双肩包无推荐]<br>我自己背的是一加(OnePlus)1 代和 2 代，她带的是 Longchamp 和 Doughnut，都是多年的老包了</p><p><a href="http://wx.uniir.com/" target="_blank" rel="noopener">独美</a><br>眼镜我和妻子每人配了 2 副做主备, 我们买的都是来自京东众筹的独美，3.3g 镜架加镜片只要 398。小米有品太阳镜带了 1 副，不过来新加坡后我从来没佩戴过</p><p>[晴雨伞没有推荐]<br>新加坡经常短时暴雨，平日基本阳光明媚，建议携带一把晴雨伞，既能遮阳、又能挡雨。我自己带了 1 把天堂和 1 把小米晴雨两用，因为比较懒所以买的都是自动伞。只是可惜了 RealBrella 锐乐 不对称设计长柄伞留在家里吃灰，我好喜欢这款大红色啊。</p><p>[跑鞋无推荐]<br>自己带了 2 双旧鞋过来，严选上买过一双类似 Adidas UltraBoost 的鞋子还不错。我妻子带了 Asics GEL-Kayano 24，无论在网易考拉买还是在新加坡本地买 Asics 都很便宜，而且新加坡 NIKE EPIC REACT 新款居然只要 130 + 新币，这也是让我觉得很神奇</p><p><a href="http://163.lu/050tb0" target="_blank" rel="noopener">两带式男女款软木拖鞋 2.0</a><br><a href="http://163.lu/SpQlo1" target="_blank" rel="noopener">两带式男 / 女款拖鞋</a><br>Birkenstock 集团制造商，我特地在国内和新加坡的专卖店对比过，自己穿了 1 代非常舒服然后又买了 2 代，因为在新加坡基本是拖鞋 + 短裤的夏装，如果你的工作要求正装注意带好皮鞋和衣服套装</p><p><a href="http://163.lu/v4KrM2" target="_blank" rel="noopener">软弹速干男 / 女沐浴拖鞋</a><br>Crocs 制造商，浴室必备。本来想分享严选的人字拖，但不知道为什么严选把它下架了，反正我基本是放在室内穿，大家买自己觉得舒服的就好</p><p><a href="http://163.lu/CKQh21" target="_blank" rel="noopener">考拉工厂店 5 双 男士精梳棉防臭休闲袜</a><br>我在新加坡穿袜子的次数就和穿运动鞋的次数保持一致，除了健身和户外活动，几乎都是大拖鞋走起，上次登顶新加坡最高峰武吉知马山也是拖鞋，不过大家还是必要学我穿拖鞋爬山，以免自己给自己挖坑</p><p><a href="http://163.lu/uE5Uz3" target="_blank" rel="noopener">网易严选 男式丝滑莫代尔平角内裤</a><br><a href="http://163.lu/7ZOLU2" target="_blank" rel="noopener">考拉工厂店 男士莫代尔零束缚感内裤</a><br>我买过 CK 也买过网易严选和小米有品的纯棉内裤，但真正可以打动我的材质还是莫代尔，网易严选和网易考拉工厂店的两款我都买了，质感各有特色。严选上还有一款空气内裤，勇于尝鲜的同学要不试试？</p><p><a href="http://163.lu/aXBps0" target="_blank" rel="noopener">考拉工厂店 男式无缝插肩短袖 T 恤</a><br>我买了 3 件来自于严选和考拉工厂店的运动速干衣，但是从品质和舒适度上还是感觉不如自己再 Nike 实体店中购买的 Dri-FIT，考拉工厂店这款已经无限逼近了。小米有品也有很多运动衣，都是可以考虑的。我个人推荐备上 3 套运动衣，因为新加坡常年夏季，出汗是难免的，速干面料可以保持身体的舒适</p><p><a href="http://163.lu/Qxhpq2" target="_blank" rel="noopener">考拉工厂店 男式运动短裤</a><br>这款运动短裤我五星推荐，不仅做工精湛，口袋拉链等细节也非常到位，我自己直接买了 2 条，如果不是因为只有 2 种颜色，我还会继续买。另外还带了一条 Nike Dri-FIT 短裤，不过因为没有拉链所以来新加坡后基本没穿过，在上海的时候也仅仅是健身时穿的，现在因为设计问题算是彻底废了。</p><p><a href="http://163.lu/FPubq0" target="_blank" rel="noopener">考拉工厂店 男式针织轻薄运动裤</a><br>这款运动长裤我五星推荐，空气面料在夏天也依旧舒爽，内口袋拉链细节设计极赞，我索性买了 2 条一模一样的黑色款。新加坡平时上班我基本是穿这款长裤，原因和上面说过的新加坡室内空调温度较低有关，注意保暖。</p><p>[睡衣没有推荐]<br>我就直接把以前优衣库的全棉联名 T 恤全部带过来当睡衣穿了，有时候出门也可以穿哈</p><p>[外套没有推荐]<br>我自己带了 Under Armour 防风防雨衣，小米有品夜跑皮肤衣，小米有品防雨皮肤衣，除了 Under Armour 放在公司偶尔冷的时候会披一下，其它皮肤衣还没穿过。</p><p>[衬衫没有推荐]<br>我把原来公司定制的各种正装带过来了，可惜就入职时穿过一次，后来就是拖鞋加运动套装上班了</p><p><a href="http://163.lu/N7voR2" target="_blank" rel="noopener">成人款 高清时尚电镀泳镜</a><br><a href="http://163.lu/tDJJb2" target="_blank" rel="noopener">黑闪系列 硅胶防水泳帽 （男女通用）</a><br><a href="http://163.lu/Egc5c1" target="_blank" rel="noopener">男式基础泳裤</a><br>严选做了游泳装备也出乎我的意料，关键是和我之前买的 Speedo 相比那叫一个便宜啊，我本身是退休多年的游泳二级运动员，看似很简单的游泳装备严选的质量和价格都把控的不错，希望未来增加带度数的游泳镜。新加坡开放的普通游泳馆使用 EZ-link 刷卡，1.3 新币一次非常便宜，关键还多是训练使用的标准泳池人也少，定时清洁的规范让人放心。</p><p><a href="http://163.lu/rDAkF3" target="_blank" rel="noopener">全球通用转换插座</a><br>全球通用转换插座出国的人都应该明白是必备的，严选居然也做出来了，感觉又要干死一片坑爹厂商</p><p>[移动电源必须小米啊]<br>互联网上一直流传着这样的传说，小米什么产品都可以黑但是谁要是敢黑小米移动电源就被其他人反过来喷死。如果不是小米移动电源的出现干掉一众无良商家，现在市场上还不知道有多少人会受到低劣电池爆炸的影响，小米移动电源是真正用产品说话赢得用户口碑的最佳案例之一。我自己买的是紫米新款，我妻子买了一个超薄款就为了好看，哎</p><p><a href="http://163.lu/4ehYt4" target="_blank" rel="noopener">3 头浮动式电动剃须刀</a><br>科技类产品其实很想支持小米，可惜小米生态链不给力，就先用着严选高性价比的剃须刀好了</p><p><a href="http://163.lu/5cpvU0" target="_blank" rel="noopener">THREE SEVEN/777 进口指甲刀便携 4 件套 指甲剪小套装 三色可选</a><br>被淘宝坑过电动指甲刀和匠技指甲刀，也被严选坑过过于简约的指甲刀，没想到最后还是要选择韩国原装进口的 777 牌 4 件套，我以前不了解斜口指甲刀，后来才发现这货是剪脚指甲的神器啊，我以前剪脚指甲是有多痛苦哇</p><p><a href="http://163.lu/RNu3A1" target="_blank" rel="noopener">8 件装 折叠多功能衣架</a><br><a href="http://163.lu/dtCu31" target="_blank" rel="noopener">18 头多功能晾衣架</a><br>必备推荐，折叠携带很方便，18 头多功能晾衣架晾衣服的时候一个顶百，我都差点可以不用普通衣架了</p><p><a href="http://163.lu/pAmCc4" target="_blank" rel="noopener">旅行分装瓶套装</a><br>洗护用品我建议用分装瓶或者带最小包装的出国，因为这些日常用品本身价值不高但分量重，在当地超市购买就好了，除非你非常在意使用某些品牌</p><p><a href="http://163.wyh5.top/OsArG4" target="_blank" rel="noopener">考拉工厂店 智能清洁电动牙刷</a><br>我给父母买的也是同款，建议再带上 2 个以上刷头。如果你之前从来没有使用过电动牙刷，非常建议你尝试，清洁牙齿更加彻底和方便，爱上之后就无法回到过去手动刷牙啦</p><p><a href="http://163.lu/H03jR2" target="_blank" rel="noopener">电动式硅胶洁面仪</a><br>我还记得我给妻子送的第一个礼物就是 FOREO LUNA MINI2 Plus，这个也是我在网易考拉上买的第一个商品，当时这款网红洁面仪被招商银行垄断，没办法直接购买，逼着自己了解到网易考拉在国内海淘市场的领先地位，也算是缘分吧。现在严选自己也推出类似洁面仪才十分之一的价格，买个给自己吧</p><p><a href="http://163.lu/ZKkRz3" target="_blank" rel="noopener">韩国制造 硅胶洁面刷</a><br><a href="http://163.lu/RJS3r0" target="_blank" rel="noopener">韩国制造 硅胶沐浴按摩手套</a><br><a href="http://163.lu/Rv9KI2" target="_blank" rel="noopener">韩国制造 多功能硅胶清洁刷</a><br>严选从韩国引进来相当专业的硅胶产品制造商，其中这 3 件小东西在洗脸，沐浴，洗碗上极大的提升了我的幸福感，强烈推荐人手一件</p><p><a href="http://163.lu/womXA3" target="_blank" rel="noopener">皇室御用超柔毛巾</a><br>内野制造商，这是网易严选当年备受争议的产品之一，我不知道内野是什么，但我只知道这款毛巾确实舒服</p><p>[床单 / 床笠 / 被套 / 毯子]<br>我从家里带了 2 套旧的，然后又从考拉工厂店买了外国人比较喜欢的床笠，因为晚上睡觉都是关闭空调，没有被子就一层薄薄的毯子，一般租房子房东都会提供床板和床上用品，如果你不习惯或者运气不好，在新加坡本地宜家采购也很方便的</p><p><a href="http://163.lu/VY4v73" target="_blank" rel="noopener">考拉工厂店 100% 桑蚕丝双面美肤枕套</a><br>我和妻子一人一个，带过去非常方便，水洗之后也没有出现质量问题，面料实在丝滑</p><p><a href="http://163.lu/pBhg61" target="_blank" rel="noopener">AQR 创口贴</a><br>在新加坡常年夏装，像脚和皮肤很容易受伤，带上一盒以备不时之需</p><h3 id="可选推荐"><a href="#可选推荐" class="headerlink" title="可选推荐"></a>可选推荐</h3><blockquote><p>分享自己购买过的东西真的好累，没想到不知不觉买了这么多，但是能够对自己派上用场没有浪费也值了</p></blockquote><p><a href="http://163.lu/23D8k4" target="_blank" rel="noopener">泰国制造 天然乳胶枕 护颈优眠 升级抗菌</a><br>我买过记忆枕，空气枕，乳胶枕还有各种酒店的枕头体验。小米 8H 的乳胶枕和网易严选的相比我更推荐严选的升级款，这也属于严选的爆款商品了</p><p><a href="http://163.lu/6iWZ74" target="_blank" rel="noopener">日式多功能颈枕 舒滑款</a><br>第一次看到 MUJI 的微粒子 U 型枕就被深深吸引，现在小米和网易严选都有同样类型的，我自己购买的是光滑面料，毕竟新加坡非常热，原来在国内我还买过一个经典款</p><p><a href="http://163.lu/9iYPC2" target="_blank" rel="noopener">舒眠真丝眼罩</a><br>折叠床是带不过去了，很早之前买过零听眼罩，用过真丝眼罩后才明白丝的舒服，就和上面买真丝枕套的理由一样。如果你对声音也很敏感，除了戴耳机以外，再购置几副耳塞也是不错的选择</p><p>[鼻毛修剪器]<br>没有看到小米和严选有，看了张大妈的评测最后淘宝购入松下 ER-BN50，虽然不知道和国产的飞科相比有多大优势，至少用下来还行吧</p><p>[洗护 / 牙膏 / 洗面奶 / 防晒霜]<br>我推荐带上便携装，其实选择什么不重要，重要的是理解背后的成分，我唯一推荐的就是自己在上海和新加坡都长期使用的<a href="http://163.lu/lWFct2" target="_blank" rel="noopener"> 熊野油脂 无硅弱酸性马油洗发水</a></p><p><a href="http://163.lu/M8IW72" target="_blank" rel="noopener">Swisse 男士复合维生素 120 片 / 瓶</a><br>加上我在上海之前吃的半瓶，一共带了 2.5 瓶过去，现在回头看这个决定是非常明智的，因为新加坡本地蔬菜和水果不算便宜，关键是营养品价格奇高，一小瓶都要五六十新币。营养品不能代替药物，更不能代替你规律的饮食作息和身体锻炼，请记住这只是用来辅助身体营养平衡。我妻子还会购买 Swisse 的女士复合维生素片 + 葡萄籽和 Unichi 玫瑰果 + 葡萄籽</p><p><a href="http://163.lu/PsXds0" target="_blank" rel="noopener">考拉工厂店 便携式手持蒸汽挂烫机</a><br>我妻子要买的，方便小巧，出席正式场合会排上用场</p><p><a href="http://163.lu/WXcRz2" target="_blank" rel="noopener">考拉工厂店 强力除螨吸尘器</a><br>我没同意我妻子买养生壶和破壁料理机，原本这么大个头的除螨仪其实也是拒绝的，但是在阅读过网易浪潮工作室的一篇《中国人为什么爱晒被子》后我认为在美国或者韩国流行的洗衣烘干一体机可能不适合现在的我们，但是我不希望自己身边的人因为痘痘或者皮肤细菌感染而受到伤害，既然网易工厂店降低了除螨仪的购买门槛，为什么不尝试改变下自己的习惯呢？</p><p><a href="http://163.lu/oCJS84" target="_blank" rel="noopener">春风 TryFun 超润滑避孕套</a><br>好孩子就不要点击了，尤其是不要淘气切换到春风 TryFun 系列</p><h2 id="工作招聘"><a href="#工作招聘" class="headerlink" title="工作招聘"></a>工作招聘</h2><p><img src="http://wx1.sinaimg.cn/large/7207510dgy1fv3qi3vd5jj20by0bymyh.jpg" alt=""></p><p><a href="https://docs.qq.com/doc/BqI21X2yZIht1vALQM0Mf73G24se4c4wv0v31gLPCn3U4vsH0IQmKC2Cjyb927Q9Ok0PRkXB3WYpg82K1GXC4" target="_blank" rel="noopener">中金所技术公司最新招聘岗位</a></p><p><a href="https://docs.qq.com/doc/B80RhZ2ZATLC0DsTVf3kFjA01XR7Mg1x8BG42bVOrs1E5zYc01HWAZ0vDTku39xOdU3cS99t2" target="_blank" rel="noopener">Sea Job Openings</a></p><p>这是我第一次创建微信个人公众号，不会向大家推送文章，只是作为信息分享的渠道。我和上家公司以及现在公司的人力关系都还不错，在征得允许的前提下给大家分享上海和新加坡这两家公司目前的内部招聘动态，上海的职位真的的是进去的多出来的少，如果你希望相对稳定那这是很不错的机会。新加坡这边我会跟随公司内部招聘邮件每半个月左右更新，工作语言以英文为主，周围的中国同事还比较多，不用太担心在新加坡的语言关。这两家公司的介绍都可以在互联网上轻松获取，如果你相信自己的能力可以直接投递简历至文章内的联系方式。努力奋斗未必都能达到预想的结果，但至少你做出了自己的选择。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><blockquote><p>如果你无法访问 github.io 的原文可以查看知乎专栏的文章，如果你想了解我前往新加坡的渠道可以看微信公众号的提炼内容</p></blockquote><p>从国内跳槽至新加坡工作的经验分享<br><a href="https://zhuanlan.zhihu.com/p/44280335" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/44280335</a></p><p>从国内跳槽至新加坡的最初半年，我都经历了什么？<br><a href="https://mp.weixin.qq.com/s/gDntToVrvFoQbyfrNf7XqA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/gDntToVrvFoQbyfrNf7XqA</a></p><p>从小到大我都没有离开过父母的保护，感谢你们的理解和支持，也同样感谢老婆的付出和双方家庭的包容。<br>引用领结婚证那天分享在朋友圈的一句话作为结语: I never grow up, but I nerver stop growing.</p>]]></content>
    
    <summary type="html">
    
      为帮助大家玩转新加坡、快速适应当地生活
    
    </summary>
    
      <category term="生活 | Life" scheme="https://wsgzao.github.io/categories/%E7%94%9F%E6%B4%BB-Life/"/>
    
    
  </entry>
  
  <entry>
    <title>Jenkins 学习使用实践</title>
    <link href="https://wsgzao.github.io/post/jenkins/"/>
    <id>https://wsgzao.github.io/post/jenkins/</id>
    <published>2019-02-12T06:59:49.000Z</published>
    <updated>2019-02-19T03:39:53.673Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Jenkins 就不用做多余的介绍了，作为 CI/CD 首选的开源解决方案，持续集成 (Continous Intergration)/ 持续交付 (Continous Delievery)，本文只是用于记录使用 Jenkins 的一些基本操作，Jenkins 官方文档也率先支持中文，相信对大家的学习热情会有积极地促进作用。</p><blockquote><p>Jenkins 学习使用实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 02 月 12 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/jenkins/">https://wsgzao.github.io/post/jenkins/</a></p><p><strong> 扩展阅读 </strong></p><p>Jenkins - <a href="https://jenkins.io/zh/" target="_blank" rel="noopener">https://jenkins.io/zh/</a></p><hr><h2 id="Jenkins-简介"><a href="#Jenkins-简介" class="headerlink" title="Jenkins 简介"></a>Jenkins 简介</h2><blockquote><p>构建伟大，无所不能</p></blockquote><p>Jenkins 是开源 CI&amp;CD 软件领导者， 提供超过 1000 个插件来支持构建、部署、自动化，满足任何项目的需要。</p><p>Jenkins 用户手册 - <a href="https://jenkins.io/zh/doc/" target="_blank" rel="noopener">https://jenkins.io/zh/doc/</a></p><p>Jenkins 训练营之基础篇 - <a href="https://ke.qq.com/course/265167" target="_blank" rel="noopener">https://ke.qq.com/course/265167</a><br>Jenkins 训练营之带你玩转 Pipeline - <a href="https://ke.qq.com/course/252785" target="_blank" rel="noopener">https://ke.qq.com/course/252785</a></p><p><a href="https://ke.qq.com/webcourse/index.html#cid=265167&amp;term_id=100312699&amp;taid=1794918372871119&amp;vid=p1423f5tn3g" target="_blank" rel="noopener">https://ke.qq.com/webcourse/index.html#cid=265167&amp;term_id=100312699&amp;taid=1794918372871119&amp;vid=p1423f5tn3g</a></p><p><a href="https://ke.qq.com/webcourse/index.html?cw_id=91852&amp;ac_type=3#cid=252785&amp;term_id=100298102&amp;taid=1707945285114737&amp;type=1024&amp;vid=w1422iqh9q1" target="_blank" rel="noopener">https://ke.qq.com/webcourse/index.html?cw_id=91852&amp;ac_type=3#cid=252785&amp;term_id=100298102&amp;taid=1707945285114737&amp;type=1024&amp;vid=w1422iqh9q1</a></p><h2 id="Jenkins-安装"><a href="#Jenkins-安装" class="headerlink" title="Jenkins 安装"></a>Jenkins 安装</h2><p>Jenkins 项目产生两个发行线，长期支持版本 (LTS) 和每周更新版本。 根据你的组织需求，一个可能比另一个更受欢迎。<br>两个版本都以 .war 文件，原生包，安装程序，和 Docker 容器的形式分发。<br><a href="https://jenkins.io/zh/download/" target="_blank" rel="noopener">https://jenkins.io/zh/download/</a></p><p>这里推荐下载使用 LTS 长期支持版本，以 CentOS 7 作为演示环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Java 8</span></span><br><span class="line">yum install java</span><br><span class="line"></span><br><span class="line"><span class="comment"># Jenkins stable version</span></span><br><span class="line">sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo</span><br><span class="line">sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key</span><br><span class="line">yum install jenkins</span><br><span class="line"></span><br><span class="line"><span class="comment"># start jenkins</span></span><br><span class="line">service jenkins start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化配置向导 </span></span><br><span class="line">http://192.168.56.103:8080/</span><br><span class="line"></span><br><span class="line">cat /var/lib/jenkins/secrets/initialAdminPassword</span><br><span class="line">5224fc83b6d84cc2be69a18c53309ea4</span><br><span class="line"></span><br><span class="line">Install suggested plugins</span><br><span class="line"></span><br><span class="line"> 是否创建管理员账户或者跳过</span><br></pre></td></tr></table></figure><h2 id="Jenkins-入门"><a href="#Jenkins-入门" class="headerlink" title="Jenkins 入门"></a>Jenkins 入门</h2><h3 id="主要的-Job-类型"><a href="#主要的-Job-类型" class="headerlink" title="主要的 Job 类型"></a>主要的 Job 类型</h3><p>Freestyle project<br>自由风格项目，Jenkins 最主要的项目类型</p><p>Maven Project<br>Maven 项目专用，类似 Freestyle，更简单</p><p>Multi-configuration project<br>多配置项目，适合需要大量不同配置 (环境，平台等) 构建</p><p>Pipeline<br>流水线项目，适合使用 pipeline(workflow)插件功能构建流水线任务，或者使用 Freestyle project 不容易实现的复杂任务</p><p>Multibranch Pipeline<br>多分支流水线项目，根据 SCM 仓库中的分支创建多个 Pipeline 项目</p><h3 id="Freestyle-项目"><a href="#Freestyle-项目" class="headerlink" title="Freestyle 项目"></a>Freestyle 项目</h3><p>General<br>项目基本配置<br>项目名字，描述，参数，禁用项目，并发构建，限制构建默认 node 等等</p><p>Source code Management<br>代码库信息，支持 Git，Subversion 等</p><p>Build Triggers<br>构建触发方式<br>周期性构建，Poll SCM，远程脚本触发构建，其他项目构建结束后触发等</p><p>Build Environment<br>构建环境相关设置<br>构建前删除 workspace，向 Console 输出添加时间戳，设置构建名称，插入环境变量等</p><p>Build<br>项目构建任务<br>添加 1 个或者多个构建步骤</p><p>Post-build Actions<br>构建后行为<br>Artifact 归档，邮件通知，发布单元测试报告，触发下游项目等等</p><h3 id="规范项目必要配置"><a href="#规范项目必要配置" class="headerlink" title="规范项目必要配置"></a>规范项目必要配置</h3><p>本规范尤其适用于较多项目共用同一 Jenkins 的场景</p><ul><li>项目命名规范</li><li>设置项目描述</li><li>设置历史构建清理规则</li><li>设置构建节点 Label</li><li>邮件通知</li></ul><h3 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h3><blockquote><p>注意 Jenkins 备份策略，建议结合 rsync 备份远端</p></blockquote><p>Jenkins 定时的备份: ThinBackup<br>邮件发送插件: Email Extension Plugin<br>空间清理扩展插件: Distributed Workspace Clean plugin</p><p>Jenkins 常用插件 – <a href="https://vwin.github.io/2019/01/07/Jenkins%E9%AB%98%E6%95%88%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/" target="_blank" rel="noopener">https://vwin.github.io/2019/01/07/Jenkins%E9%AB%98%E6%95%88%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/</a></p><h3 id="创建第一个-Job"><a href="#创建第一个-Job" class="headerlink" title="创建第一个 Job"></a>创建第一个 Job</h3><p>安装 Timestamper 插件<br>系统管理 - 插件管理 - 可用插件，搜索到 timestamper 点击 Install without restart</p><p>新建一个 Freestyle 类型的 Job</p><ul><li>General 项目名称: My-first-freestyle-demo</li><li>Build Environment 构建环境: 勾选 Add timestamps to the Console Output</li><li>Build 构建: 屏幕打印出 “这是我的第一个 Jenkins Job, oops” </li><li>Post-build Actions 构建后操作: 无</li><li>点击立刻构建</li><li>找到控制台输出</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Console Output</span><br><span class="line">14:40:59 Started by user admin</span><br><span class="line">14:40:59 Building <span class="keyword">in</span> workspace /var/lib/jenkins/workspace/My-first-freestyle-demo</span><br><span class="line">14:41:00 [My-first-freestyle-demo] $ /bin/sh -xe /tmp/jenkins3737737887278720679.sh</span><br><span class="line">14:41:00 + <span class="built_in">echo</span> <span class="string">'这是我的第一个 Jenkins Job, oops'</span></span><br><span class="line">14:41:00 这是我的第一个 Jenkins Job, oops </span><br><span class="line">14:41:00 Finished: SUCCESS</span><br></pre></td></tr></table></figure><h2 id="Jenkins-Pipeline-介绍"><a href="#Jenkins-Pipeline-介绍" class="headerlink" title="Jenkins Pipeline 介绍"></a>Jenkins Pipeline 介绍</h2><p>Pipeline，简而言之，就是一套运行于 Jenkins 上的工作流框架，将原本独立 运行于单个或者多个节点的任务连接起来，实现单个任务难以完成的复杂流程编排与可视化。</p><p>Pipeline 是 Jenkins2.X 最核心的特性，帮助 Jenkins 实现从 CI 到 CD 与 DevOps 的转变</p><blockquote><p>什么是 Jenkins Pipeline?</p></blockquote><p>Jenkins Pipeline 是一组插件，让 Jenkins 可以实现持续交付管道的落地和实施。持续交付管道 (CD Pipeline) 是将软件从版本控制阶段到交付给用户或客户的完 整过程的自动化表现。软件的每一次更改 (提交到源代码管理系统) 都要经过一个复杂的过程才能被发布。</p><p>Pipeline 提供了一组可扩展的工具，通过 Pipeline Domain Specific Language(DSL) syntax 可以达到 Pipeline as Code 的目的</p><p>Pipeline as Code:Jenkinsfile 存储在项目的源代码库</p><blockquote><p>Jenkins Pipeline 核心概念</p></blockquote><p>Stage<br>– 阶段，一个 Pipeline 可以划分为若干个 Stage，每个 Stage 代表一组操作，例如: “Build”, “Test”, “Deploy” 。<br>– 注意，Stage 是一个逻辑分组的概念，可以跨多个 Node。 </p><p>Node<br>– 节点，一个 Node 就是一个 Jenkins 节点，或者是 Master，或者是 Agent，是执行 Step 的具体 运行环境。</p><p>Step<br>– 步骤，Step 是最基本的操作单元，小到创建一个目录，大到构建一个 Docker 镜像，由各类 Jenkins Plugin 提供，例如: sh ‘make’</p><blockquote><p>为什么要用 Pipeline?</p></blockquote><ul><li>代码: Pipeline 以代码的形式实现，通常被检入源代码控制，使团队能够编辑，审查和迭代其 CD 流程。</li><li>可持续性: Jenkins 重启或者中断后都不会影响 Pipeline Job。</li><li>停顿: Pipeline 可以选择停止并等待人工输入或批准，然后再继续 Pipeline 运行。</li><li>多功能: Pipeline 支持现实世界的复杂 CD 要求，包括 fork/join 子进程，循环和 并行执行工作的能力。</li><li>可扩展: Pipeline 插件支持其 DSL 的自定义扩展以及与其他插件集成的多个选项。</li></ul><blockquote><p>Pipeline 和 Freestyle 的区别</p></blockquote><p>Freestyle:<br>– 上游 / 下游 Job 调度，如 BuildJob -&gt;TestJob -&gt; DeployJob<br>– 在 DSL Job 里面调度多个子 Job(利用 Build Flow plugin)</p><p>Pipeline:<br>– 单个 Job 中完成所有的任务编排<br>– 全局视图</p><blockquote><p>Pipeline 会取代 Freestyle 么?</p></blockquote><ul><li>Pipeline 一定会取代 Build Flow 插件</li><li>会，当你希望做到 Pipeline as code 的时候</li><li>会，当你独立运行一组 Job 没有特殊价值或者意义的时候</li><li>会，当你可以从 Multibranch Pipeline 受益的时候</li><li>会，当你希望获取类似于 TravisCI 风格的工作流的时候</li></ul><h3 id="Jenkins-Pipeline-入门"><a href="#Jenkins-Pipeline-入门" class="headerlink" title="Jenkins Pipeline 入门"></a>Jenkins Pipeline 入门</h3><p>Pipeline 脚本是由 Groovy 语言实现<br>– 无需专门学习 Groovy</p><p>Pipeline 支持两种语法<br>– Declarative 声明式(在 Pipeline plugin 2.5 中引入)<br>– Scripted Pipeline 脚本式</p><p>如何创建基本的 Pipeline<br>– 直接在 Jenkins Web UI 网页界面中输入脚本<br>– 通过创建一个 Jenkinsfile 可以检入项目的源代码管理库</p><p>最佳实践<br>– 通常推荐在 Jenkins 中直接从源代码控制 (SCM) 中载入 Jenkinsfile Pipeline</p><h3 id="快速创建一个简单的-Pipeline"><a href="#快速创建一个简单的-Pipeline" class="headerlink" title="快速创建一个简单的 Pipeline"></a>快速创建一个简单的 Pipeline</h3><ol><li>新建 Job: Jenkins -&gt; 新建 -&gt; 输入 Job 名称: “My-first-pipeline-demo” -&gt; 选择 Pipeline -&gt; 点击 “OK”</li><li>配置: 在 Pipeline -&gt; Script 文本输入框中输入下列语句，点击 ”保存”</li><li>立即构建</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">    agent any</span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(<span class="string">'Build'</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">'Build'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(<span class="string">'Test'</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">'Test'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(<span class="string">'Deploy'</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">'Deploy'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Jenkins-忘记密码怎么办"><a href="#Jenkins-忘记密码怎么办" class="headerlink" title="Jenkins 忘记密码怎么办"></a>Jenkins 忘记密码怎么办</h2><p>如果权限设置错误，或者忘记密码，导致 admin 自己都无法登陆 Jenkins 怎么办?</p><ul><li>命令行停止 Jenkins;</li><li>先备份 $JENKINS_HOME 中的 config.xml;</li><li>用编辑器打开 $JENKINS_HOME 中的 config.xml;</li><li>将 &lt; useSecurity&gt;true 元素中的 true 改为 false;</li><li>将 &lt; authorizationStrategy &gt; 和 &lt; securityRealm &gt; 元素的内容删掉; </li><li>命令行启动 Jenkins。</li></ul><h2 id="Ansible-Jenkins-API-Token-使用技巧"><a href="#Ansible-Jenkins-API-Token-使用技巧" class="headerlink" title="Ansible Jenkins API Token 使用技巧"></a>Ansible Jenkins API Token 使用技巧</h2><p>Jenkins REST API 提供了 API token，使得可以在程序中使用 API token 进行认证（而不是使用你真实的密码）。</p><p>API token 可以在用户个人设置界面查看<br>到用户→用户 id→设置页面，在 API Token 区域点击 Show API token 按钮，便可查看 API token，同时还可以更改 API token<br>相应的 URL 是<br>http://&lt;JENKINS_URL&gt;/user/<userid>/configure</userid></p><p>Manage Jenkins jobs by using Jenkins REST API</p><p>jenkins_job_facts – Get facts about Jenkins jobs<br><a href="https://docs.ansible.com/ansible/latest/modules/jenkins_job_facts_module.html" target="_blank" rel="noopener">https://docs.ansible.com/ansible/latest/modules/jenkins_job_facts_module.html</a></p><p>jenkins_job – Manage jenkins jobs<br><a href="https://docs.ansible.com/ansible/latest/modules/jenkins_job_module.html" target="_blank" rel="noopener">https://docs.ansible.com/ansible/latest/modules/jenkins_job_module.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python-jenkins package</span></span><br><span class="line">pip install python-jenkins lxml</span><br><span class="line"></span><br><span class="line"><span class="comment"># jenkins_job_facts.yml</span></span><br><span class="line">---</span><br><span class="line">- hosts: all</span><br><span class="line">  gather_facts: no</span><br><span class="line"></span><br><span class="line">  tasks:</span><br><span class="line">    - name: Get host info</span><br><span class="line">      local_action:</span><br><span class="line">        module: jenkins_job_facts</span><br><span class="line">        url: https://xxx</span><br><span class="line">        user: xxx</span><br><span class="line">        token: xxx</span><br><span class="line">        glob: <span class="string">'*mh_kg*'</span></span><br><span class="line">      register: my_jenkins_job_facts</span><br><span class="line"></span><br><span class="line">    - debug:</span><br><span class="line">        msg: <span class="string">"&#123;&#123;my_jenkins_job_facts&#125;&#125;"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># shell awk</span></span><br><span class="line">cat reg | grep <span class="string">'"name"'</span> | awk -F <span class="string">'"'</span> <span class="string">'&#123;print $4&#125;'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># jenkins_job_delete.yml</span></span><br><span class="line">---</span><br><span class="line">- hosts: all</span><br><span class="line">  gather_facts: no</span><br><span class="line"></span><br><span class="line">  tasks:</span><br><span class="line">    - name: Delete <span class="built_in">jobs</span></span><br><span class="line">      local_action:</span><br><span class="line">        module: jenkins_job</span><br><span class="line">        url: xxx</span><br><span class="line">        user: xxx</span><br><span class="line">        token: xxx</span><br><span class="line">        name: <span class="string">"&#123;&#123; item &#125;&#125;"</span></span><br><span class="line">        state: absent</span><br><span class="line">      loop: </span><br><span class="line">        - gop_live___mh_kg_garena_auth_nginx_static_files</span><br><span class="line">        - gop_live___mh_kg_nginx_reload</span><br><span class="line">        - gop_live___mh_kg_nginx_update_config</span><br><span class="line">        - gop_live___mh_kg_restart_service</span><br><span class="line">        - gop_live___mh_kg_setup_server</span><br><span class="line">        - gop_live___mh_kg_stop_service</span><br><span class="line">        - gop_live_mh_kg_app_point</span><br><span class="line">        - gop_live_mh_kg_game_service</span><br><span class="line">        - gop_live_mh_kg_payment_center_backend</span><br><span class="line">        - gop_live_mh_kg_sso_website</span><br></pre></td></tr></table></figure><h2 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h2><blockquote><p>官方手册永远是你的最佳参考内容</p></blockquote><p>Jenkins 用户手册 - <a href="https://jenkins.io/zh/doc/" target="_blank" rel="noopener">https://jenkins.io/zh/doc/</a></p>]]></content>
    
    <summary type="html">
    
      Jenkins学习使用实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>腾达 AC18 刷梅林固件 (KoolShare) 和恢复原厂固件实践心得</title>
    <link href="https://wsgzao.github.io/post/ac18/"/>
    <id>https://wsgzao.github.io/post/ac18/</id>
    <published>2019-02-07T08:40:53.000Z</published>
    <updated>2019-02-07T07:34:30.388Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://a.zdmimg.com/201706/17/5944e5991f09d7003.png_f710.jpg" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>2016 年 9 月份买腾达 AC18 的时候是因为觉得 AC9 性能不够用，毕竟家里带宽已经上 200MB，当时考虑过小米路由但觉得和 NAS 搭配还不够成熟，也许现在或者下一个路由器会回归小米，本文主要和大家一起分享下 AC18 如何刷入梅林固件和恢复，推荐自己用的配置和插件，本来应该很早分享的但一直在验证稳定的刷机固件，希望这一切来的不会太迟。</p><blockquote><p>路由器刷固件后对我来说最直接的作用是科学上网和屏蔽广告，比如小米盒子广告就彻底屏蔽了</p></blockquote><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><p>2019 年 02 月 07 日 - 更新 ASUS Merlin 梅林固件 Koolshare 改版离线安装 Shadowsocks 教程<br>2018 年 04 月 01 日 - 增加无线信号设置的几点建议<br>2017 年 08 月 07 日 - 完善细节描述<br>2017 年 07 月 14 日 - 增加优化设置<br>2017 年 06 月 21 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/ac18/">https://wsgzao.github.io/post/ac18/</a></p><p><strong> 扩展阅读 </strong></p><p>AC18 1900M 11ac 千兆口别墅型双频无线路由器 - <a href="http://www.tenda.com.cn/product/AC18.html" target="_blank" rel="noopener">http://www.tenda.com.cn/product/AC18.html</a><br>Asuswrt-merlin 基本操作 - <a href="http://koolshare.cn/thread-3578-1-1.html" target="_blank" rel="noopener">http://koolshare.cn/thread-3578-1-1.html</a></p><h2 id="购买记录"><a href="#购买记录" class="headerlink" title="购买记录"></a>购买记录</h2><blockquote><p>我买的时候差不多也是 499，如果你在 618 拿到优惠券 400 多拿下也是可能的</p></blockquote><p><a href="https://item.jd.com/3137178.html" target="_blank" rel="noopener">https://item.jd.com/3137178.html</a></p><h2 id="什么是-merlin"><a href="#什么是-merlin" class="headerlink" title="什么是 merlin"></a>什么是 merlin</h2><p>首先 Asuswrt 是华硕公司为他的路由器所开发的固件。Asuswrt-merlin 是一个对 Asuswrt 固件二次开发进行各种改进和修正的项目。现在支持以下的路由型号：<br>RT-AC56U<br>RT-N66U<br>RT-AC66U<br>RT-AC68U<br>RT-AC68P<br>RT-AC87U<br>RT-AC3200<br>源码来源于 <a href="https://github.com/RMerl/asuswrt-merlin" target="_blank" rel="noopener">https://github.com/RMerl/asuswrt-merlin</a></p><blockquote><p>Asuswrt-merlin 的优势</p></blockquote><p>Merlin 固件拥有更多的功能，由于第三方不断维护代码，各种新功能也在不断增加。Merlin 固件的升级并不需要反复的操作过程，方法与官方固件的升级相同，有很好的硬件软件兼容性。继承了 Asuswrt 官方固件优秀的交互界面。Koolshare 论坛所分享的固件大多是基于 Merlin 代码再次改进，增加适合国内使用的功能。</p><h2 id="刷固件"><a href="#刷固件" class="headerlink" title="刷固件"></a>刷固件</h2><blockquote><p>如果你觉得官方固件足够稳定，功能都满足你的需要建议就不用折腾自己刷机啦</p></blockquote><p>这里分享两种刷机方法</p><h3 id="方法一（推荐）"><a href="#方法一（推荐）" class="headerlink" title="方法一（推荐）"></a>方法一（推荐）</h3><p><img src="http://am.zdmimg.com/201706/17/5944e93c8989a7325.gif_e600.jpg" alt=""></p><p>在原厂固件下 AC18_kf_V15.03.3.7(4031)AC18 特殊版中间固件，重启会自动更新 18 的 cfe，修正早期版本的 ac18 的 cfe，破除固件限制，然后在就可以在 ac18 原厂固件的系统升级页面来选择梅林升级了</p><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>按住路由后面的 reset 按钮，然后开机，持续大概 15 秒左右，看到路由器的大部分过之后，可以松开按钮，去电脑通过有线来刷机，打开 192.168.0.1，如下图，选择梅林固件，upload，等等长传完毕</p><p><img src="http://am.zdmimg.com/201706/17/5944e9ad9825c1058.png_e600.jpg" alt=""><br><img src="http://am.zdmimg.com/201706/17/5944e9ae5ce209143.png_e600.jpg" alt=""></p><p>刷完梅林之后路由会重启，需要进入梅林恢复出厂设置或捅菊花清空一次 nvram</p><p><img src="http://am.zdmimg.com/201706/17/5944e9af391118578.png_e600.jpg" alt=""></p><h2 id="固件和插件选择"><a href="#固件和插件选择" class="headerlink" title="固件和插件选择"></a>固件和插件选择</h2><blockquote><p>如果刷梅林目前推荐最新的 KoolShare 7.9.1 版本</p></blockquote><p><a href="http://koolshare.cn/forum-96-1.html" target="_blank" rel="noopener">http://koolshare.cn/forum-96-1.html</a></p><ol><li>第一次登陆梅林要清空 nvram 或出厂设置。然后进入 / 系统管理 / 选项里边的 / 系统设置 /</li></ol><p>将 format jffs 和 enable jssf custom script 两个选项选上 是，然后将下面的 enableSSH 选择 lan only ，保存提交配置，这样在重启之后就可以可以使用 webshell 和软件中心了</p><p><img src="http://am.zdmimg.com/201706/17/5944f28dc32c27837.png_e600.jpg" alt=""></p><ol start="2"><li>进入内置网络 / 内网址设置</li></ol><p>将路由器的 ip 地址设置成为 192.168.50.1，这个只是建议值，为了避免和光猫或上一级路由 IP 冲突，当然你也可以改成 192.168.xx.1 或你喜欢的非. 1.1 的地址就行，完成这项配置之后，选择重启路由</p><p><img src="http://am.zdmimg.com/201706/17/5944f28f390121205.png_e600.jpg" alt=""></p><ol start="3"><li>重启之后进入路由点 software center，更新到最新版本，并且安装 webshell</li></ol><p><img src="http://am.zdmimg.com/201706/17/5944f28ff304f7451.png_e600.jpg" alt=""></p><ol start="4"><li>推荐插件</li></ol><ul><li><p>koolproxy，路由器去广告插件的首选，占用资源低稳定</p></li><li><p>ss，科学上网利器你懂得，新版软件中心已经下架，建议手动离线安装</p></li></ul><ol start="5"><li>优化设置</li></ol><p>A： 5G 设置，在一般设置里边将频道带宽设置为 80Mhz，信道固定到 149 或 157（自动信道会出现有些信道无信号，从而不能搜到 5g 的 id）等等<br>然后进入专业设置，把地区改成 all area，可以让 5G 达到最佳效果</p><p>B：2.4G 设置</p><p>进入一般设置将频段带宽设置为 40mhz，然后进入专业设置，将降低 USB3.0 干扰 停用</p><p>因为 ac18 的屏蔽做的比华硕 68u 要好，这里可以停用，可以让 2.4g 的信号正常，如果 USB3.0 效果不行可以打开这个选项看看效果，这个功能看你看重哪个了，试一下找到最好的平衡点</p><h2 id="部分设备搜索不到-Wifi-信号"><a href="#部分设备搜索不到-Wifi-信号" class="headerlink" title="部分设备搜索不到 Wifi 信号"></a>部分设备搜索不到 Wifi 信号</h2><p>关于 2.4G: 有设备搜不到 2.4G 信号，此时请检查无线设置中的 2.4G 信号，信道设置在 13 可能会造成部分设备无法搜索到信号，通常建议使用 1 或 6 信道。此外，频道带宽也有可能影响信号的搜索，在不确定设备支持情况时请使用 20Mhz，保证最大兼容。注意，此时 2.4G 的连接速率会比 40Mhz 低一半。</p><p>关于 5G: 有支持 5G 的设备设备搜不到 5G 信号。部分用户购买的国际版手机可能工作在国内不支持的信道。遇到此类问题，请不要把信道设置为 36-64；一般情况下正常终端应该都会支持 149-165，您可以尝试将信道设置在此范围内然后再试。</p><h2 id="关于无线信号设置的几点建议"><a href="#关于无线信号设置的几点建议" class="headerlink" title="关于无线信号设置的几点建议"></a>关于无线信号设置的几点建议</h2><p>2.4G 通常作为无线覆盖主力，因此建议用 wifi 分析仪 或者 Wifi Analytics 之类的软件分析一下周围信道使用状况，尽量避免使用周围占用严重的信道。且建议用 20Mhz 频道带宽，尽量保证兼容性。</p><p>而 5G 作为高速连接使用的信号，建议使用 80Mhz 的频道带宽，增加速率，且 5G 信号中信道对传输速率相对影响较大，低频段信号穿墙能力好，但是速率仅略高于 2.4G（36 信道）因此，无法发挥 5G 信号本来的优势，153-157 信号一般速率都能达到 867Mbps 以上，有需要高速接入的，就必须把信道设定为 153 或 157 这样的高频信号。</p><h2 id="离线安装-ss-插件"><a href="#离线安装-ss-插件" class="headerlink" title="离线安装 ss 插件"></a>离线安装 ss 插件</h2><p>路由器：腾达 AC18<br>固件版本: 7.9.1<br>【华硕系列】【20180927】380.70_0-X7.9.1 固件发布 - <a href="http://koolshare.cn/thread-139322-1-1.html" target="_blank" rel="noopener">http://koolshare.cn/thread-139322-1-1.html</a><br>ASUS Merlin 梅林固件 Koolshare 改版离线安装 Shadowsocks 教程 - <a href="https://github.com/hq450/fancyss_history_package" target="_blank" rel="noopener">https://github.com/hq450/fancyss_history_package</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line">wget https://raw.githubusercontent.com/hq450/fancyss/master/fancyss_arm/shadowsocks.tar.gz</span><br><span class="line">tar -zxvf /tmp/shadowsocks.tar.gz</span><br><span class="line">chmod +x /tmp/shadowsocks/install.sh</span><br><span class="line">sh /tmp/shadowsocks/install.sh</span><br></pre></td></tr></table></figure><h2 id="恢复原厂固件"><a href="#恢复原厂固件" class="headerlink" title="恢复原厂固件"></a>恢复原厂固件</h2><p>参照刷机方法二执行即可，如果现有的固件足够稳定，就不要用强迫症来折腾自己啦，够用就好</p>]]></content>
    
    <summary type="html">
    
      路由器刷固件后对我来说最直接的作用是科学上网和屏蔽广告，比如小米盒子广告就彻底屏蔽了
    
    </summary>
    
      <category term="生活 | Life" scheme="https://wsgzao.github.io/categories/%E7%94%9F%E6%B4%BB-Life/"/>
    
    
  </entry>
  
  <entry>
    <title>使用 ssh config 作为 ssh 代理轻松管理内网服务器</title>
    <link href="https://wsgzao.github.io/post/ssh-config/"/>
    <id>https://wsgzao.github.io/post/ssh-config/</id>
    <published>2019-01-31T03:18:44.000Z</published>
    <updated>2019-02-01T08:06:37.742Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>企业内部大部分服务器都只有内网，一般可以使用 NAT 方式正向代理访问公网资源。对于 Linux 来说一般通过 ssh 登录服务器，在没有公网 IP 的情况下可以修改 ssh config 配置文件，利用一台可以接入内网并具有公网 IP 的服务器作为代理或者称为 Tunnel 跳板机来管理，可以灵活定制访问规则并优化 ssh 参数让管理更加轻松。</p><blockquote><p>使用 ssh config 作为 ssh 代理轻松管理内网服务器</p></blockquote><hr><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 01 月 31 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/ssh-config/">https://wsgzao.github.io/post/ssh-config/</a></p><p><strong> 扩展阅读 </strong></p><p>SSH CONFIG FILE -  <a href="https://www.ssh.com/ssh/config/" target="_blank" rel="noopener">https://www.ssh.com/ssh/config/</a></p><hr><h2 id="ssh-config-的配置文件来源"><a href="#ssh-config-的配置文件来源" class="headerlink" title="ssh_config 的配置文件来源"></a>ssh_config 的配置文件来源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">man ssh_config</span><br><span class="line"></span><br><span class="line">NAME</span><br><span class="line">     ssh_config -- OpenSSH SSH client configuration files</span><br><span class="line"></span><br><span class="line">DESCRIPTION</span><br><span class="line">     ssh(1) obtains configuration data from the following sources <span class="keyword">in</span> the following order:</span><br><span class="line"></span><br><span class="line">           1.   <span class="built_in">command</span>-line options</span><br><span class="line">           2.   user<span class="string">'s configuration file (~/.ssh/config)</span></span><br><span class="line"><span class="string">           3.   system-wide configuration file (/etc/ssh/ssh_config)</span></span><br></pre></td></tr></table></figure><p>ssh 程序可以从三个途径获取配置参数：</p><ol><li>命令行选型，比如 -F configfile</li><li>用户配置文件，放置在 ~/.ssh/config</li><li>系统配置文件，放置在 /etc/ssh/ssh_config（区别于 /etc/ssh/sshd_config）</li></ol><p>上面三个途径，前面的途径传入的参数可以覆盖后面的途径传入的参数（与 linux 里的大部分应用类似）。因为 / etc/ssh/ssh_config 会影响 ssh 全局的配置，因此如果想对多主机进行管理（不影响别人的情况下），可以考虑修改自己家目录下的~/.ssh/config 文件（~ 字符表示当前登录用户的家目录）。</p><h2 id="ssh-config-配置文件实例"><a href="#ssh-config-配置文件实例" class="headerlink" title="ssh_config 配置文件实例"></a>ssh_config 配置文件实例</h2><p>首先看一个配置文件的 demo，假设 8.8.8.8 是你可以直接登录的 Tunnel 公网跳板机，10.65.32.0 是需要管理的内网地址段，前提是 8.8.8.8 和内网服务器的防火墙策略均已配置正确，这里就不再赘述。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat ~/.ssh/config</span></span><br><span class="line"></span><br><span class="line">StrictHostKeyChecking no</span><br><span class="line">CheckHostIP no</span><br><span class="line"></span><br><span class="line">Host 10.65.32.*</span><br><span class="line">  HostName %h</span><br><span class="line">  ProxyCommand ssh bastion_GOP_SG_NC_MAIN -W %h:%p</span><br><span class="line">Host bastion_GOP_SG_NC_MAIN</span><br><span class="line">  HostName 8.8.8.8</span><br><span class="line">  port 22</span><br><span class="line">  User wangao</span><br><span class="line"></span><br><span class="line">Host 10.65.200.*</span><br><span class="line">  HostName %h</span><br><span class="line">  ProxyCommand ssh bastion_GOP_SG_MH_MAIN -W %h:%p</span><br><span class="line">Host bastion_GOP_SG_MH_MAIN</span><br><span class="line">  HostName 9.9.9.9</span><br><span class="line">  port 22</span><br><span class="line">  User wangao</span><br></pre></td></tr></table></figure><p>CheckHostIP no，禁用 known_hosts 检查<br>Directs ssh to additionally check the host IP address in the known_hosts file.</p><p>StrictHostKeyChecking no，跳过 known_hosts 写入<br>Specifies if ssh should never automatically add host keys to the ~/.ssh/known_hosts file, and refuses to connect to hosts whose host key has changed.</p><p>Host 字段<br>Host 字段配置了登录别名，这里需要注意的是，Host 是支持通配符的， * 代表 0～n 个非空白字符，? 代表一个非空白字符，! 表示例外通配</p><p>HostName 字段<br>指定远程主机名，可以直接使用 IP 地址。如果这个字段中包含 ‘%h’ ，则实际使用时会被命令行中的主机名替换</p><p>User 字段<br>指定登录用户名</p><p>IdentityFile 字段<br>指定密钥认证使用的私钥文件路径。默认为 ~/.ssh/id_rsa。这个字段可以指定多个密钥文件（以 , 分开），在连接的过程中会依次尝试这些密钥文件。和 HostName 字段一样，值也可以直接指定参数代替：</p><p>Port 字段<br>指定远程主机端口号，默认为 22 。</p><p>%h，远程主机名<br>%p，远程端口</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote><p>如果你还不了解 ssh 或者对 ssh 端口转发感兴趣，可以参考以下内容</p></blockquote><p>SSH 使用密钥登录并禁止口令登录实践 - <a href="https://wsgzao.github.io/post/ssh/">https://wsgzao.github.io/post/ssh/</a></p><p>玩转 SSH 端口转发 - <a href="https://blog.fundebug.com/2017/04/24/ssh-port-forwarding/" target="_blank" rel="noopener">https://blog.fundebug.com/2017/04/24/ssh-port-forwarding/</a></p>]]></content>
    
    <summary type="html">
    
      使用ssh config作为ssh代理轻松管理内网服务器
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>SSH 使用密钥登录并禁止口令登录实践</title>
    <link href="https://wsgzao.github.io/post/ssh/"/>
    <id>https://wsgzao.github.io/post/ssh/</id>
    <published>2019-01-31T02:18:44.000Z</published>
    <updated>2019-02-01T03:32:50.192Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://i.v2ex.co/zv9SM4PO.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>无论是个人的 VPS 还是企业允许公网访问的服务器，如果开放 22 端口的 SSH 密码登录验证方式，被众多黑客暴力猜解捅破菊花也可能是经常发生的惨剧。企业可以通过防火墙来做限制，普通用户也可能借助修改 22 端口和强化弱口令等方式防护，但目前相对安全和简单的方案则是让 SSH 使用密钥登录并禁止口令登录。</p><blockquote><p>ssh 密钥登录是相对安全的登录管理方式</p></blockquote><hr><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 01 月 31 日 - 更新 ssh 基础知识讲解和 ansible authorized_key 示例<br>2015 年 08 月 13 日 - 增加 Bash Shell 自动修改脚本<br>2015 年 07 月 07 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/ssh/">https://wsgzao.github.io/post/ssh/</a></p><p><strong> 扩展阅读 </strong></p><p>SSH 原理与运用 -  <a href="http://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html</a><br>Linode - <a href="https://www.linode.com/docs/networking/ssh/use-public-key-authentication-with-ssh" target="_blank" rel="noopener">https://www.linode.com/docs/networking/ssh/use-public-key-authentication-with-ssh</a></p><hr><h2 id="ssh-登录服务器的两种方式"><a href="#ssh-登录服务器的两种方式" class="headerlink" title="ssh 登录服务器的两种方式"></a>ssh 登录服务器的两种方式</h2><p>如果是一个比较喜欢折腾的人，在某个云平台购买了一台云主机，除了通过云平台提供的 web 页面上的命令行工具，其实也可以在本地电脑上面通过 ssh 进行登录。具体地又可以分成两种：</p><ol><li>ssh 用户名密码登录</li><li>ssh 证书（免密码）登录</li></ol><p>需要说明一下，后者的安全性高于前者，因此一般会默认不启用第一种登录方式，只允许第二种登录方式。</p><p>SSH 为 Secure Shell 的缩写，是建立在应用层基础上的安全协议，利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。ssh 分成服务端与客户端，其中服务端运行在被登录的机器上面，客户端运行在操作的机器上面。</p><h3 id="用户名密码登录"><a href="#用户名密码登录" class="headerlink" title="用户名密码登录"></a>用户名密码登录</h3><p>通常 openssh-server 默认允许用户名密码登录，但是不排除为了安全考虑云上的服务器上禁止开启 ssh 的这种登录方式，毕竟用户名加密码的方式很容易被爆力破解。如果大家理解其中的厉害关系，可以检查修改 /etc/ssh/sshd_config（sshd 的配置文件）中 PasswordAuthentication 这一项配置为 yes（一般默认是 yes ）。修改完配置重启 sshd 服务就可以使用用户名和密码登录了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -l 指定用户名为 wangao</span></span><br><span class="line"><span class="comment"># -p 指定端口为 2222，默认为 22</span></span><br><span class="line"><span class="comment"># 输入下面的命令后根据提示输入密码就可以登录到对应的服务器了 </span></span><br><span class="line">ssh -l wangao -p 2222 192.168.56.101</span><br></pre></td></tr></table></figure><h3 id="ssh-免密登录"><a href="#ssh-免密登录" class="headerlink" title="ssh 免密登录"></a>ssh 免密登录</h3><p>所谓免密登录，也就是说不需要人工再输入用户名和密码了，但这并不意味着没有了鉴权的动作，服务器毕竟是自己的，不能随便允许别人登录到上面去搞破坏。ssh 免密登录通过证书进行鉴权。</p><p>这里的证书分为公钥与私钥，我们可以简单地理解为：公钥 = 锁；私钥 = 钥匙。</p><p>流程基本是这样的：如果我们想要从 A 免密登录到 B，就需要把公钥（锁）放到 B 的特定位置，而 A 拥有私钥（钥匙）的完整副本。当 A 拿着私钥去访问 B 的时候，B 发现自己身上有一把锁（B 可能有很多公钥）可以被 A 的私钥打开，于是给 A 放行，A 就成功登录到 B 了。</p><blockquote><p>如何得到证书（公钥与私钥）<br>上面提到的证书可以通过两种方式获取得到。<br>第一种是向服务器管理员索取，一般索取得到的是私钥，这样就可以免密登录到任何存放了公钥的服务器了。<br>第二种是自己生成证书（比如使用 ssh-keygen），然后把公钥放到对应的服务器的特定位置，就可以免密登录到对应的服务器了。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过 ssh-keygen 可以生成需要的证书 </span></span><br><span class="line"><span class="comment"># 根据提示一路按 RETURN(ENTER) 即可 </span></span><br><span class="line"><span class="comment"># 默认情况下会生成 id_rsa 和 id_rsa.pub </span></span><br><span class="line"><span class="comment"># id_rsa 为私钥，id_rsa.pub 为公钥 </span></span><br><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><blockquote><p>公钥放置位置</p></blockquote><p>linux 系统允许多用户登录同一台服务器，一般情况下 /home 目录会有非常多的用户目录。可以把公钥放置在任何一个用户目录的 $HOME/.ssh/authorized_keys 文件中，比如 cat id_rsa.pub &gt;&gt; /home/wangao/.ssh/authorized_keys ，这样就可以使用私钥以 wangao 的名义登录对应的服务器了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -i 指定私钥，默认条件下使用 ~/.ssh/id_rsa</span></span><br><span class="line"><span class="comment"># -l 指定用户名 </span></span><br><span class="line"><span class="comment"># -p 指定端口，默认为 22</span></span><br><span class="line">ssh -i ~/.ssh/id_rsa -p 2222 -l wangao 192.168.56.101</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上面的命令等同于 </span></span><br><span class="line">ssh -p 2222 wangao@192.168.56.101</span><br></pre></td></tr></table></figure><h2 id="ssh-免密码登录一般流程"><a href="#ssh-免密码登录一般流程" class="headerlink" title="ssh 免密码登录一般流程"></a>ssh 免密码登录一般流程</h2><h3 id="生成-PublicKey"><a href="#生成-PublicKey" class="headerlink" title="生成 PublicKey"></a>生成 PublicKey</h3><blockquote><p>建议设置并牢记 passphrase 密码短语，以 Linux 生成为例</p></blockquote><p>Linux：ssh-keygen -t rsa<br>[私钥 (id_rsa) 与公钥 (id_rsa.pub)]<br>Windows：SecurCRT/Xshell/PuTTY<br>[SSH-2 RSA 2048]</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 生成 SSH 密钥对 </span></span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line"></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line"><span class="comment"># 建议直接回车使用默认路径 </span></span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/root/.ssh/id_rsa): </span><br><span class="line"><span class="comment"># 输入密码短语（留空则直接回车）</span></span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): </span><br><span class="line"><span class="comment"># 重复密码短语 </span></span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">aa:8b:61:13:38:ad:b5:49:ca:51:45:b9:77:e1:97:e1 root@localhost.localdomain</span><br><span class="line">The key<span class="string">'s randomart image is:</span></span><br><span class="line"><span class="string">+--[ RSA 2048]----+</span></span><br><span class="line"><span class="string">|    .o.          |</span></span><br><span class="line"><span class="string">|    ..   . .     |</span></span><br><span class="line"><span class="string">|   .  . . o o    |</span></span><br><span class="line"><span class="string">| o.  . . o E     |</span></span><br><span class="line"><span class="string">|o.=   . S .      |</span></span><br><span class="line"><span class="string">|.*.+   .         |</span></span><br><span class="line"><span class="string">|o.*   .          |</span></span><br><span class="line"><span class="string">| . + .           |</span></span><br><span class="line"><span class="string">|  . o.           |</span></span><br><span class="line"><span class="string">+-----------------+</span></span><br></pre></td></tr></table></figure><h3 id="复制密钥对"><a href="#复制密钥对" class="headerlink" title="复制密钥对"></a>复制密钥对</h3><blockquote><p>也可以手动在客户端建立目录和 authorized_keys，注意修改权限</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 复制公钥到无密码登录的服务器上, 22 端口改变可以使用下面的命令 </span></span><br><span class="line"><span class="comment">#ssh-copy-id -i ~/.ssh/id_rsa.pub "-p 10022 user@server"</span></span><br><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub root@192.168.15.241</span><br></pre></td></tr></table></figure><h3 id="修改-SSH-配置文件"><a href="#修改-SSH-配置文件" class="headerlink" title="修改 SSH 配置文件"></a>修改 SSH 配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑 sshd_config 文件 </span></span><br><span class="line">vi /etc/ssh/sshd_config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 禁用密码验证 </span></span><br><span class="line">PasswordAuthentication no</span><br><span class="line"><span class="comment"># 启用密钥验证 </span></span><br><span class="line">RSAAuthentication yes</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line"><span class="comment"># 指定公钥数据库文件 </span></span><br><span class="line">AuthorsizedKeysFile .ssh/authorized_keys</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">"s/^PasswordAuthentication.*/PasswordAuthentication no/g"</span> /etc/ssh/sshd_config</span><br><span class="line">sed -i <span class="string">"s/^#RSAAuthentication.*/RSAAuthentication yes/g"</span> /etc/ssh/sshd_config</span><br><span class="line">sed -i <span class="string">"s/^#PubkeyAuthentication.*/PubkeyAuthentication yes/g"</span> /etc/ssh/sshd_config</span><br><span class="line">sed -i <span class="string">"s/^#AuthorizedKeysFile.*/AuthorizedKeysFile .ssh\/authorized_keys/g"</span> /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><blockquote><p>重启 SSH 服务前建议多保留一个会话以防不测</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># RHEL/CentOS 系统 </span></span><br><span class="line">service sshd restart</span><br><span class="line"><span class="comment"># Ubuntu 系统 </span></span><br><span class="line">service ssh restart</span><br><span class="line"><span class="comment"># Debian 系统 </span></span><br><span class="line">/etc/init.d/ssh restart</span><br></pre></td></tr></table></figure><h3 id="手动增加管理用户"><a href="#手动增加管理用户" class="headerlink" title="手动增加管理用户"></a>手动增加管理用户</h3><blockquote><p>可以在 == 后加入用户注释标识方便管理</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'ssh-rsa XXXX'</span> &gt;&gt;/root/.ssh/authorized_keys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复查 </span></span><br><span class="line">cat /root/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><h2 id="使用-Ansible-添加-ssh-信任关系"><a href="#使用-Ansible-添加-ssh-信任关系" class="headerlink" title="使用 Ansible 添加 ssh 信任关系"></a>使用 Ansible 添加 ssh 信任关系</h2><blockquote><p>使用 ansible authorized_key module 即可</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">- hosts: all</span><br><span class="line">  remote_user: root</span><br><span class="line">  gather_facts: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  tasks:</span><br><span class="line">    - name: authadd root</span><br><span class="line">      authorized_key:</span><br><span class="line">        user: root</span><br><span class="line">        state: present</span><br><span class="line">        key: <span class="string">"&#123;&#123; lookup('file','/root/.ssh/id_rsa.pub') &#125;&#125;"</span></span><br><span class="line">        path: /root/.ssh/authorized_keys</span><br><span class="line">        manage_dir: no</span><br><span class="line">      tags:</span><br><span class="line">        - root</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      ssh密钥登录是相对安全的登录管理方式
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>macOS Mojave 升级后开机卡在进度条和唤醒时黑屏的解决方法</title>
    <link href="https://wsgzao.github.io/post/macos/"/>
    <id>https://wsgzao.github.io/post/macos/</id>
    <published>2019-01-30T04:43:14.000Z</published>
    <updated>2019-01-30T03:15:59.878Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://wx3.sinaimg.cn/large/7207510dgy1fwskwveum6g20jg0b5hdz.gif" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>刚刚从 macOS High Sierra 手贱升级到 macOS Mojave (version 10.14)，各种字体发虚，Kernel Panic(六国语言重启)，系统卡顿，耗电快等问题接踵而至。本来寄希望于今天升级 macOS Mojave (version 10.14.1)可以解决部分稳定性和兼容性问题，但是 MacBook 居然开机卡在进度条，然后我等了一上午都没有完成，差点以为要悲剧的重装系统丢失数据了。所以很有必要给大伙提个醒，无论是 Windows 还是 macOS 在新版本推送的早期都不要点击更新，抑制住你体内的洪荒之力和强迫症，不要手贱，不要手贱，不要手贱。</p><blockquote><p>拒绝重装！教你如何拯救开机失败的 Mac 电脑</p></blockquote><hr><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><p>2019 年 01 月 30 日 - 更新解决唤醒时黑屏只看见鼠标的问题<br>2018 年 11 月 01 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/macos/">https://wsgzao.github.io/post/macos/</a></p><p><strong> 扩展阅读 </strong></p><p>Upgrade to macOS Mojave - <a href="https://www.apple.com/macos/how-to-upgrade/" target="_blank" rel="noopener">https://www.apple.com/macos/how-to-upgrade/</a><br>如何升级到 macOS Mojave - <a href="https://support.apple.com/zh-cn/HT201475" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT201475</a><br>如何通过 macOS 恢复功能重新安装 macOS - <a href="https://support.apple.com/zh-cn/HT204904" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT204904</a><br>如何创建可引导的 macOS 安装器 - <a href="https://support.apple.com/zh-cn/HT201372" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT201372</a><br>使用 “时间机器” 备份您的 Mac - <a href="https://support.apple.com/zh-cn/HT201250" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT201250</a></p><hr><h2 id="macOS-history"><a href="#macOS-history" class="headerlink" title="macOS history"></a>macOS history</h2><blockquote><p>第一次体验苹果虚拟机和黑苹果记得还是 Tiger 和 Leopard 的时候</p></blockquote><table><thead><tr><th>Version</th><th>Codename</th><th>﻿Most recent version</th></tr></thead><tbody><tr><td>Mac OS X 10.0</td><td>Cheetah</td><td>﻿10.0.4 (June 22, 2001)</td></tr><tr><td>Mac OS X 10.1</td><td>Puma</td><td>10.1.5 (June 6, 2002)</td></tr><tr><td>Mac OS X 10.2</td><td>Jaguar</td><td>10.2.8 (October 3, 2003)</td></tr><tr><td>Mac OS X 10.3</td><td>Panther</td><td>10.3.9 (April 15, 2005)</td></tr><tr><td>Mac OS X 10.4</td><td>Tiger</td><td>10.4.11 (November 14, 2007)</td></tr><tr><td>Mac OS X 10.5</td><td>Leopard</td><td>10.5.8 (August 5, 2009)</td></tr><tr><td>Mac OS X 10.6</td><td>Snow Leopard</td><td>10.6.8 v1.1 (July 25, 2011)</td></tr><tr><td>Mac OS X 10.7</td><td>Lion</td><td>10.7.5 (September 19, 2012)</td></tr><tr><td>OS X 10.8</td><td>Mountain Lion</td><td>10.8.5 (12F45) (October 3, 2013)</td></tr><tr><td>OS X 10.9</td><td>Mavericks</td><td>10.9.5 (13F1112) (September 18, 2014)[170]</td></tr><tr><td>OS X 10.10</td><td>Yosemite</td><td>10.10.5 (14F27) (August 13, 2015)</td></tr><tr><td>OS X 10.11</td><td>El Capitan</td><td>10.11.6 (15G31) (July 18, 2016)</td></tr><tr><td>macOS 10.12</td><td>Sierra</td><td>10.12.6 (16G29) (July 19, 2017)</td></tr><tr><td>macOS 10.13</td><td>High Sierra</td><td>10.13.6 (17G65) (July 9, 2018)</td></tr><tr><td>macOS 10.14</td><td>Mojave</td><td>10.14 (18A391) (September 24, 2018)</td></tr></tbody></table><h2 id="网络上常见的拯救方法"><a href="#网络上常见的拯救方法" class="headerlink" title="网络上常见的拯救方法"></a>网络上常见的拯救方法</h2><blockquote><p>你可以尝试进行，不过大部分情况下是无效的</p></blockquote><h3 id="重置-SMC"><a href="#重置-SMC" class="headerlink" title="重置 SMC"></a>重置 SMC</h3><p>先关机，然后断开电源，拔掉所有 USB 的连接，然后同时按住键盘左下角的 Shift，Control，Option 和开机键 15 秒。全过程 Mac 不会开机。15 秒后松手插上电源开机。</p><p>如何重置 Mac 上的系统管理控制器 (SMC) - <a href="https://support.apple.com/zh-cn/HT201295" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT201295</a></p><h3 id="重置-NVRAM"><a href="#重置-NVRAM" class="headerlink" title="重置 NVRAM"></a>重置 NVRAM</h3><p>将 Mac 关机，然后开机并立即同时按住以下四个按键：Option、Command、P 和 R。您可以在大约 20 秒后松开这些按键，在此期间您的 Mac 可能看似在重新启动。</p><p>重置 Mac 上的 NVRAM 或 PRAM - <a href="https://support.apple.com/zh-cn/HT204063" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT204063</a></p><h3 id="重装系统"><a href="#重装系统" class="headerlink" title="重装系统"></a>重装系统</h3><p>如果以上都不能解决你的问题，且系统是最新的，硬件是没问题的，那么重装系统吧。哈哈，重装系统总是这么简单霸气的解决一些问题。</p><p>前提：</p><ol><li>保证你能连到 wifi 或者有线，因为重装系统需要连接远程服务器</li><li>保证有足够的电源，最好是附件有插板可以充电的情况下重装系统，这个过程还是比较久的，50 分钟左右。</li></ol><p>步骤如下：</p><ol><li>开机按住 Command (⌘)-R</li><li>出现的四个选项的界面选择第二个重装系统(Reinstall macOS)</li><li>等待重装系统完成即可</li></ol><p>如何通过 macOS 恢复功能重新安装 macOS - <a href="https://support.apple.com/zh-cn/HT204904" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT204904</a></p><h3 id="TimeMachine-恢复"><a href="#TimeMachine-恢复" class="headerlink" title="TimeMachine 恢复"></a>TimeMachine 恢复</h3><blockquote><p>TimeMachine 数据恢复的成本太高，需要先 Reinstall macOS 然后使用 TimeMacthine 恢复，再重新配置软件，不到万不得已之时不推荐</p></blockquote><ol><li>制作 U 盘启动</li><li>TimeMachine 恢复</li></ol><p>如何创建可引导的 macOS 安装器 - <a href="https://support.apple.com/zh-cn/HT201372" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT201372</a></p><p>使用 “时间机器” 备份您的 Mac - <a href="https://support.apple.com/zh-cn/HT201250" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT201250</a></p><h2 id="Mac-的启动组合键"><a href="#Mac-的启动组合键" class="headerlink" title="Mac 的启动组合键"></a>Mac 的启动组合键</h2><p>若要使用这些组合键中的任何一个，请在按下电源按钮以开启 Mac 后或在 Mac 开始重新启动后，立即按住相应按键。请一直按住，直至电脑出现对应的行为。</p><p>Command (⌘)-R：从内建的 macOS 恢复系统启动。或者，您也可以使用 Option-Command-R 或 Shift-Option-Command-R 以通过互联网从 macOS 恢复功能启动。macOS 恢复功能可以安装不同版本的 macOS，具体取决于您在电脑启动时使用的组合键。如果您的 Mac 使用了固件密码，系统将要求您输入这个密码。</p><p>Option (⌥)：启动进入“启动管理器”，您可以从中选取其他启动磁盘或宗卷（若可用）。如果您的 Mac 使用了固件密码，系统将要求您输入这个密码。</p><p>Option-Command-P-R：重置 NVRAM 或 PRAM。如果您的 Mac 使用了固件密码，它会忽略这个组合键或从 macOS 恢复功能启动。</p><p>Shift (⇧)：以安全模式启动。</p><p>D：从内建的 Apple Hardware Test 或 Apple Diagnostics 实用工具启动，具体取决于您的 Mac 机型。或者，您也可以使用 Option-D 通过互联网从这个实用工具启动。</p><p>N：从兼容的 NetBoot 服务器启动（若可用）。要使用 NetBoot 服务器上默认的引导映像，则请按住 Option-N。配备 Apple T2 芯片的电脑不支持这个启动键。</p><p>Command-S：以单用户模式启动。这个组合键要求使用 macOS High Sierra 或更早版本。</p><p>T：以目标磁盘模式启动。</p><p>Command-V：以详细模式启动。</p><p>Mac 的启动组合键 - <a href="https://support.apple.com/zh-cn/HT201255" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT201255</a></p><h2 id="有效的解决方法"><a href="#有效的解决方法" class="headerlink" title="有效的解决方法"></a>有效的解决方法</h2><blockquote><p>如果你遇到和我类似的问题，不妨尝试寻找下具体的错误日志，然后向 Google 或者咨询苹果客服求助</p></blockquote><ol><li>command + v 进入代码界面，等出现不停的输出 Too many corpses being created 这段代码的时候，说明是缓存太多造成的</li><li>command + R 进入 macOS 使用工具页面，左上角找到终端工具</li><li>输入以下代码，重命名数据库缓存就行了</li><li>然后再重新启动电脑，耐心等待一会儿就可以重新进入桌面</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /Volumes/Macintosh\ HD/var/db/caches/opendirectory/</span><br><span class="line">mv ./mbr_cache ./mbr_cache-old</span><br></pre></td></tr></table></figure><h2 id="解决唤醒时黑屏只看见鼠标的问题"><a href="#解决唤醒时黑屏只看见鼠标的问题" class="headerlink" title="解决唤醒时黑屏只看见鼠标的问题"></a>解决唤醒时黑屏只看见鼠标的问题</h2><p>先关机，然后开机快速同时点击 Command + S 按键进入 single-user 单用户模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/sbin/fsck -fy</span><br><span class="line">/sbin/mount -uw /</span><br><span class="line">rm -f /Library/Preferences/com.apple.loginwindow.plist</span><br><span class="line">rm -f /var/db/.AppleUpgrade</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h2 id="不着急的解决方案"><a href="#不着急的解决方案" class="headerlink" title="不着急的解决方案"></a>不着急的解决方案</h2><p>联系 Apple 支持 - <a href="https://getsupport.apple.com/" target="_blank" rel="noopener">https://getsupport.apple.com/</a></p>]]></content>
    
    <summary type="html">
    
      拒绝重装！教你如何拯救开机失败的Mac电脑
    
    </summary>
    
      <category term="软件 | Soft" scheme="https://wsgzao.github.io/categories/%E8%BD%AF%E4%BB%B6-Soft/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux kernel 内核升级和降级的方法实践</title>
    <link href="https://wsgzao.github.io/post/linux-kernel-update/"/>
    <id>https://wsgzao.github.io/post/linux-kernel-update/</id>
    <published>2019-01-27T06:59:49.000Z</published>
    <updated>2019-01-28T08:37:10.063Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>相信现在很多公有云包括企业内部已经开始使用 Linux 内核热补丁 Livepatch，没人喜欢重启机器但现实是还得再等等。通常升级内核可能有多种原因，频率最高的比如修复安全漏洞，然而我们也会遇到需要降级内核的情况，比如向下兼容或者升级后产生新的严重 Bug 需要回退。本文主要以 CentOS 为例介绍内核的升级和降级方案，虽然官方一直坚持使用旧内核 3.10 版本，但这也是追求极致稳定的权衡结果，有高版本内核需求比如 4.10 以上我们可以手动升级也可以更换 Ubuntu 等其它操作系统，对线上生产环境始终保持一颗敬畏之心。</p><blockquote><p>Linux kernel 内核升级和降级的方法实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 01 月 27 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/linux-kernel-update/">https://wsgzao.github.io/post/linux-kernel-update/</a></p><p><strong> 扩展阅读 </strong></p><p>kernel - <a href="https://www.kernel.org/" target="_blank" rel="noopener">https://www.kernel.org/</a></p><hr><h2 id="Linux-内核简介"><a href="#Linux-内核简介" class="headerlink" title="Linux 内核简介"></a>Linux 内核简介</h2><p>Linux 内核是一个整体的类 Unix 计算机操作系统内核。通常我们使用的 Linux 发行版，如 Red Hat、Debian、SUSE 等，这些都称为 Linux 的分发版。一个典型的分发版，是由 Linux 内核，以及支持的许多由 GNU 项目提供的应用程序、GNU 组件，C 标准库，CLI shell，X windows 等组成的一个完整操作系统。我们应该要知道的是，Linux 的定义仅仅是 Linux 内核，所有的”Linux” 发行版实际上是以 Linux 为内核的 GNU 系统的版本。不同的 Linux 内核版本都有其生命周期，Linux 内核组织或 Linux 发行版厂商只在该日期提供错误或漏洞修复，我们可以从从内核的版本号区分辨别，比如版本 3.16.43，该数字 3.16 表示一个长期版本，43 则表示错误修订之后再发行的具体版本号，当然我这里描述的只是提供一个参考价值，更细致的版本还有可能是 3.16.43-1 这种。值得我们关注的是，任何内核版本错误修复后的再发布版本都应该是我们考虑升级使用的内核版本。</p><h3 id="Linux-内核版本"><a href="#Linux-内核版本" class="headerlink" title="Linux 内核版本"></a>Linux 内核版本</h3><p>Linux 内核版本分为主线、稳定和长期版本。所有内核版本都可以在内核开发官方网站 <a href="https://www.kernel.org" target="_blank" rel="noopener">https://www.kernel.org</a> 上获取，目前我们看到最新的稳定内核版本为 4.20.5。</p><p>主线版本代表整个 Linux 内核的一个树干，新的主线版本每 2-3 个月发布一次，所有的新功能及特性都将会包含主线版本中。稳定内核则是在主线版本中，被认为是” 稳定的” 得出。稳定内核的任何错误修复都将从主线树中返回，也就是主线内核出现的任何错误 (包括之前的任何旧版本内核的错误和 BUG) 在得到修复之后才会被指定为稳定内核，所以在通常情况下，稳定内核既有内核新功能，同时 BUG 也是最少的内核版本。稳定内核的更新发布依赖于主线内核 (直到下一个主线内核可用)，稳定的内核更新是根据需要发布的，通常是每 3 个月。而对于长期内核版本，通常提供几个” 长期维护” 内核版本，用于较早的内核树错误修复返回的目的。这些内核只应用重要的错误修复，通常不会有非常频繁的更新。</p><p>主线、稳定和长期都是活动内核版本，由 Linus Torvalds 及 Linux 内核组织维护和释放。 而我们平时所使用的 Linux 发行版的内核都为分发内核，许多 Linux 发行版都提供自己的” 长期维护” 内核版本，这些内核可能是也可能不是基于内核开发人员维护的内核。因此分发版本的内核版本由发行版的厂商决定并有自己的维护周期，通常由分发版更新时一起发布。</p><h3 id="安装-升级新内核的目的"><a href="#安装-升级新内核的目的" class="headerlink" title="安装 / 升级新内核的目的"></a>安装 / 升级新内核的目的</h3><ul><li>许多出于对安全的考虑，如避免以前版本中发现的漏洞</li><li>更充分地认识内核，了解内核的各个内核模块和功能</li><li>更好的利用 / 体验新内核的的新功能和特性</li></ul><h3 id="安装-升级的方法和建议"><a href="#安装-升级的方法和建议" class="headerlink" title="安装 / 升级的方法和建议"></a>安装 / 升级的方法和建议</h3><ol><li>对于 CentOS/RHEL 系统，尽量使用 yum 方式或 RPM 包安装 / 升级内核，需要注意的是红帽的 Red Hat Linux 服务需要订阅。</li><li>使用安装新内核而不是直接升级内核，安装新内核不会覆盖旧内核，而升级会导致新内核直接替换旧内核，可能会导致系统无法启动，安装也可以让我们在升级后有回滚的选择。</li><li>一般地，对于大多数 Linux 分发版，使用 yum/dnf 和分发版布官方的存储库来升级内核，这种方式只能升级到该分发版的存储库提供的最新版本，而不是 Linux 内核组织发布的最新内核。</li><li>如果想迅速并且安全地使用最新内核，对于 CentOS/RHEL 系统并不支持 yum 的方式直接安装或升级。那么此时我们可以使用 ELRepo(第三方存储库) 进行内核安装升级。</li><li>下载新内核的源码包进行编译安装，这种方式有助于我们更细致地学习内核底层知识，但在生产环境中不推荐编译安装。</li><li>尽量使用最新的 Linux 发行版，新的 Liunx 发行版包含该发行版维护的新内核，如果有必要，那么请使用如 yum upgrade 或者 yum update 来更新你的系统。对于 Ubuntu、Debian 等发行版，使用 apt-get update 方式来更新。</li></ol><h3 id="内核软件包介绍"><a href="#内核软件包介绍" class="headerlink" title="内核软件包介绍"></a>内核软件包介绍</h3><p>kernel<br>Linux 内核软件包，包含单、多核和多处理器系统的内核，是任何 Linux 操作系统的核心，单处理器的系统仅需安装内核包。内核处理操作系统的基本功能: 内存分配、进程分配、设备输入和输出等</p><p>kernel-devel<br>包含提供足够的针对内核软件包构建模块的内核头文件和 makefile 文件</p><p>kernel-headers<br>包含指定 Linux 内核、用户空间库文件和程序之间指定接口的 C 头文件。头文件定义了构建大多数标准程序所需的结构和常量，也是重建 glibc 软件包所必需的</p><p>kernel-doc<br>包含来自内核源代码的文档文件。各种关于 Linux 内核和设备以及驱动程序的信息都记录在这些文件当中</p><p>kernel-firmware<br>包含对于某些设备及其操作的固件信息文件</p><p>kernel-debug<br>包含许多对于内核 debug 诊断和调试的启用选项，只有当我们需要尝试收集额外的内核错误信息时才应该安装它。它是以牺牲性能为代价</p><p>kernel-debug-devel<br>包含内核 debug 诊断和调试的启用选项，以牺牲性能为代价</p><h2 id="在-CentOS-上安装-升级内核"><a href="#在-CentOS-上安装-升级内核" class="headerlink" title="在 CentOS 上安装 / 升级内核"></a>在 CentOS 上安装 / 升级内核</h2><p>Linux 内核升级通常有两种方式</p><ol><li>下载新版内核到服务器上，进行编译安装，之后删除老内核, 优点是：可完全控制编译项, 缺点是：慢，且容易失败；</li><li>采用 yum 方式安装, 优点是：快捷方便，成功率高。</li></ol><p>我这里采用第二种方式来安装, 采用 yum 安装最多也就三五分钟的事, 万一失败还能补救。</p><p>Linux OS version: CentOS Linux release 7.5.1804 (Core)<br>Linux kernel 升级原因: CPU 性能优化<br>Linux kernel 当前版本: 3.10.0-862.el7.x86_64<br>Linux kernel 目标版本: 3.10.0-862.14.4.el7.x86_64</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看当前操作系统版本 </span></span><br><span class="line">cat /etc/redhat-release</span><br><span class="line">CentOS Linux release 7.5.1804 (Core)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前内核 </span></span><br><span class="line">uname -r</span><br><span class="line">3.10.0-862.el7.x86_64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 yum 可升级的内核版本 </span></span><br><span class="line">yum list kernel --showduplicates</span><br><span class="line"></span><br><span class="line">Installed Packages</span><br><span class="line">kernel.x86_64                                                          3.10.0-862.el7                                                                @anaconda</span><br><span class="line">kernel.x86_64                                                          3.10.0-862.11.6.el7                                                           @updates</span><br><span class="line">Available Packages</span><br><span class="line">kernel.x86_64                                                          3.10.0-862.el7                                                                base</span><br><span class="line">kernel.x86_64                                                          3.10.0-862.2.3.el7                                                            updates</span><br><span class="line">kernel.x86_64                                                          3.10.0-862.3.2.el7                                                            updates</span><br><span class="line">kernel.x86_64                                                          3.10.0-862.3.3.el7                                                            updates</span><br><span class="line">kernel.x86_64                                                          3.10.0-862.6.3.el7                                                            updates</span><br><span class="line">kernel.x86_64                                                          3.10.0-862.9.1.el7                                                            updates</span><br><span class="line">kernel.x86_64                                                          3.10.0-862.11.6.el7                                                           updates</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果 yum list 中有需要的版本可以直接执行 update 升级，但现在的问题是没有 </span></span><br><span class="line">yum update kernel-3.10.0-862.14.4.el7.x86_64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以通过 Google 搜索所需 kernel 版本，下载后离线安装升级，建议使用 -i 保留原来的内核方便版本回退 </span></span><br><span class="line">ftp://ftp.riken.jp/Linux/cern/centos/7/updates/x86_64/repoview/kernel.html</span><br><span class="line">wget ftp://ftp.riken.jp/Linux/cern/centos/7/updates/x86_64/Packages/kernel-3.10.0-862.14.4.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装完成之后重启会自动修改启动项切换至新内核 </span></span><br><span class="line">rpm -ivh kernel-3.10.0-862.14.4.el7.x86_64.rpm</span><br><span class="line">init 6</span><br></pre></td></tr></table></figure><h2 id="在-CentOS-上降级内核"><a href="#在-CentOS-上降级内核" class="headerlink" title="在 CentOS 上降级内核"></a>在 CentOS 上降级内核</h2><blockquote><p>和之前 Kernel 升级的原因一样，降级也是因为 CPU 性能优化，建议各位仔细评估线上环境所需的版本</p></blockquote><p>Linux OS version: CentOS Linux release 7.6.1810 (Core)<br>Linux kernel 降级原因: CPU 性能优化<br>Linux kernel 当前版本: 3.10.0-957.1.3.el7.x86_64<br>Linux kernel 目标版本: 3.10.0-862.6.3.el7.x86_64</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看当前操作系统版本 </span></span><br><span class="line">cat /etc/redhat-release</span><br><span class="line">CentOS Linux release 7.6.1810 (Core)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前内核 </span></span><br><span class="line">uname -r</span><br><span class="line">3.10.0-957.1.3.el7.x86_64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载制定版本内核覆盖安装 </span></span><br><span class="line">wget ftp://ftp.riken.jp/Linux/cern/centos/7/updates/x86_64/Packages/kernel-3.10.0-862.6.3.el7.x86_64.rpm</span><br><span class="line">rpm -ivh kernel-3.10.0-862.6.3.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 禁止 yum 自动升级 kernel（可选）</span></span><br><span class="line">vim /etc/yum.conf </span><br><span class="line">exclude=kernel*</span><br></pre></td></tr></table></figure><h2 id="Kernel-Change-Log"><a href="#Kernel-Change-Log" class="headerlink" title="Kernel Change Log"></a>Kernel Change Log</h2><blockquote><p>最后给大家分享下官方的 Kernel Change Log，方便各位了解自己目前所用的版本是否合理</p></blockquote><p>The kernel package contains the Linux kernel (vmlinuz), the core of any Linux operating system. The kernel handles the basic functions of the operating system: memory allocation, process allocation, device input and output, etc.</p><p>Architecture: x86_64</p><h3 id="Version-3-10-0-957-el7-系列"><a href="#Version-3-10-0-957-el7-系列" class="headerlink" title="Version: 3.10.0-957.el7[系列]"></a>Version: 3.10.0-957.el7[系列]</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">2018-11-15 Jan Stancek &lt;jstancek@redhat.com&gt; [3.10.0-957.1.3.el7]</span><br><span class="line">- [x86] Mark Intel Cascade Lake supported (Steve Best) [1650213 1639980]</span><br><span class="line"></span><br><span class="line">2018-11-01 Jan Stancek &lt;jstancek@redhat.com&gt; [3.10.0-957.1.1.el7]</span><br><span class="line">- [x86] boot: Fix kexec booting failure <span class="keyword">in</span> the SEV bit detection code (Kairui Song) [1644990 1628828] </span><br><span class="line">- [net] 8021q: create device with all possible features <span class="keyword">in</span> wanted_features (Davide Caratti) [1644675 1640645] </span><br><span class="line">- [mm] memcontrol: fix high scheduling latency <span class="built_in">source</span> <span class="keyword">in</span> mem_cgroup_reparent_charges (Andrea Arcangeli) [1644673 1632898] </span><br><span class="line">- [kernel] cpuset: use trialcs-&gt;mems_allowed as a temp variable (Aristeu Rozanski) [1644236 1613248] </span><br><span class="line">- [kernel] cpuset: fix a warning when clearing configured masks <span class="keyword">in</span> old hierarchy (Aristeu Rozanski) [1644236 1613248] </span><br><span class="line">- [kernel] cpuset: initialize effective masks when clone_children is enabled (Aristeu Rozanski) [1644236 1613248] </span><br><span class="line">- [x86] efi: Only load initrd above 4g on second try (Lenny Szubowicz) [1643359 1608955] </span><br><span class="line">- [x86] efi: Support initrd loaded above 4G (Lenny Szubowicz) [1643359 1608955] </span><br><span class="line">- [x86] efi: Generalize handle_ramdisks() and rename to handle_cmdline_files() (Lenny Szubowicz) [1643359 1608955] </span><br><span class="line">- [kernel] <span class="built_in">sched</span>/fair: Fix throttle_list starvation with low CFS quota (Phil Auld) [1640675 1601153] </span><br><span class="line">- [target] scsi: iscsi: Use bin2hex instead of a re-implementation (Maurizio Lombardi) [1634711 1627034] &#123;CVE-2018-14633&#125; </span><br><span class="line">- [target] scsi: iscsi: Use hex2bin instead of a re-implementation (Maurizio Lombardi) [1634711 1627034] &#123;CVE-2018-14633&#125;</span><br><span class="line"></span><br><span class="line">2018-11-01 Jan Stancek &lt;jstancek@redhat.com&gt; [3.10.0-957.1.2.el7]</span><br><span class="line">- [net] rtnetlink: give a user socket to get_target_net() (Jiri Benc) [1639635 1630694] &#123;CVE-2018-14646&#125; </span><br><span class="line">- [net] Add variants of capable <span class="keyword">for</span> use on on sockets (Jiri Benc) [1639635 1630694] &#123;CVE-2018-14646&#125;</span><br><span class="line"></span><br><span class="line">2018-10-04 Bruno E. O. Meneguele &lt;bmeneg@redhat.com&gt; [3.10.0-957.el7]</span><br><span class="line">- [mm] mlock: avoid increase mm-&gt;locked_vm on mlock() when already mlock2(, MLOCK_ONFAULT) (Rafael Aquini) [1633059]</span><br><span class="line"></span><br><span class="line">2018-10-03 Bruno E. O. Meneguele &lt;bmeneg@redhat.com&gt; [3.10.0-955.el7]</span><br><span class="line">- [netdrv] net/mlx5e: IPoIB, Set the netdevice sw mtu <span class="keyword">in</span> ipoib enhanced flow (Alaa Hleihel) [1633652] </span><br><span class="line">- [netdrv] net/mlx5e: Fix traffic between VF and representor (Alaa Hleihel) [1633652] </span><br><span class="line">- [mm] vmscan: <span class="keyword">do</span> not loop on too_many_isolated <span class="keyword">for</span> ever (Waiman Long) [1632050]</span><br><span class="line"></span><br><span class="line">2018-10-03 Bruno E. O. Meneguele &lt;bmeneg@redhat.com&gt; [3.10.0-956.el7]</span><br><span class="line">- [block] blk-mq: fix hctx debugfs entry related race between update hw queues and cpu hotplug (Ming Lei) [1619988] </span><br><span class="line">- [nvme] nvme-pci: unquiesce dead controller queues (Ming Lei) [1632424]</span><br><span class="line"></span><br><span class="line">2018-09-24 Bruno E. O. Meneguele &lt;bmeneg@redhat.com&gt; [3.10.0-954.el7]</span><br><span class="line">- [fs] <span class="built_in">exec</span>: Limit arg stack to at most 75 of _STK_LIM (Yauheni Kaliuta) [1625991] &#123;CVE-2018-14634&#125; </span><br><span class="line">- [fs] <span class="built_in">exec</span>: account <span class="keyword">for</span> argv/envp pointers (Yauheni Kaliuta) [1625991] &#123;CVE-2018-14634&#125; </span><br><span class="line">- [kernel] revert <span class="string">"sched/topology: Introduce NUMA identity node sched domain"</span> (Gustavo Duarte) [1620031] </span><br><span class="line">- [powerpc] revert <span class="string">"powernv: Add a virtual irqchip for opal events"</span> (Gustavo Duarte) [1617966] </span><br><span class="line">- [powerpc] revert <span class="string">"powernv: Reorder OPAL subsystem initialisation"</span> (Gustavo Duarte) [1617966] </span><br><span class="line">- [char] revert <span class="string">"ipmi/powernv: Convert to irq event interface"</span> (Gustavo Duarte) [1617966] </span><br><span class="line">- [tty] revert <span class="string">"hvc: Convert to using interrupts instead of opal events"</span> (Gustavo Duarte) [1617966] </span><br><span class="line">- [powerpc] revert <span class="string">"powernv/eeh: Update the EEH code to use the opal irq domain"</span> (Gustavo Duarte) [1617966] </span><br><span class="line">- [powerpc] revert <span class="string">"powernv/opal: Convert opal message events to opal irq domain"</span> (Gustavo Duarte) [1617966] </span><br><span class="line">- [powerpc] revert <span class="string">"powernv/elog: Convert elog to opal irq domain"</span> (Gustavo Duarte) [1617966] </span><br><span class="line">- [powerpc] revert <span class="string">"powernv/opal-dump: Convert to irq domain"</span> (Gustavo Duarte) [1617966] </span><br><span class="line">- [powerpc] revert <span class="string">"opal: Remove events notifier"</span> (Gustavo Duarte) [1617966] </span><br><span class="line">- [powerpc] revert <span class="string">"powernv: Increase opal-irqchip initcall priority"</span> (Gustavo Duarte) [1617966] </span><br><span class="line">- [powerpc] revert <span class="string">"opal-irqchip: Fix double endian conversion"</span> (Gustavo Duarte) [1617966] </span><br><span class="line">- [powerpc] revert <span class="string">"opal-irqchip: Fix deadlock introduced by"</span>Fix double endian conversion<span class="string">""</span> (Gustavo Duarte) [1617966] </span><br><span class="line">- [sound] alsa: hda/realtek - two more lenovo models need fixup of MIC_LOCATION (Jaroslav Kysela) [1611958] </span><br><span class="line">- [sound] alsa: hda/realtek - Fix the problem of two front mics on more machines (Jaroslav Kysela) [1611958] </span><br><span class="line">- [sound] alsa: hda/realtek - Enable mic-mute hotkey <span class="keyword">for</span> several Lenovo AIOs (Jaroslav Kysela) [1611958]</span><br><span class="line"></span><br><span class="line">2018-09-21 Bruno E. O. Meneguele &lt;bmeneg@redhat.com&gt; [3.10.0-953.el7]</span><br><span class="line">- [cdrom] information leak <span class="keyword">in</span> cdrom_ioctl_media_changed() (Sanskriti Sharma) [1578207] &#123;CVE-2018-10940&#125; </span><br><span class="line">- [mm] mlock: remove lru_add_drain_all() (Oleksandr Natalenko) [1624765] </span><br><span class="line">- [block] blk-mq: fix race between updating nr_hw_queues and switching io <span class="built_in">sched</span> (Ming Lei) [1619988] </span><br><span class="line">- [block] blk-mq: avoid to map CPU into stale hw queue (Ming Lei) [1619988] </span><br><span class="line">- [block] blk-mq: fix sysfs inflight counter (Ming Lei) [1548261] </span><br><span class="line">- [block] blk-mq: count allocated but not started requests <span class="keyword">in</span> iostats inflight (Ming Lei) [1548261] </span><br><span class="line">- [block] fix a crash caused by wrong API (Ming Lei) [1548261] </span><br><span class="line">- [block] blk-mq: <span class="built_in">enable</span> checking two part inflight counts at the same time (Ming Lei) [1548261] </span><br><span class="line">- [block] blk-mq: provide internal <span class="keyword">in</span>-flight variant (Ming Lei) [1548261] </span><br><span class="line">- [block] make part_in_flight() take an array of two ints (Ming Lei) [1548261] </span><br><span class="line">- [block] pass <span class="keyword">in</span> queue to inflight accounting (Ming Lei) [1548261] </span><br><span class="line">- [x86] Mark Intel Cascade Lake supported (Steve Best) [1584343]</span><br><span class="line"></span><br><span class="line">2018-09-18 Bruno E. O. Meneguele &lt;bmeneg@redhat.com&gt; [3.10.0-952.el7]</span><br><span class="line">- [netdrv] mlx5e: IPoIB, Use priv stats <span class="keyword">in</span> completion rx flow (Alaa Hleihel) [1618609] </span><br><span class="line">- [netdrv] mlx5e: IPoIB, Add ndo stats support <span class="keyword">for</span> IPoIB child devices (Alaa Hleihel) [1618609] </span><br><span class="line">- [netdrv] mlx5e: IPoIB, Add ndo stats support <span class="keyword">for</span> IPoIB netdevices (Alaa Hleihel) [1618609] </span><br><span class="line">- [netdrv] mlx5e: IPoIB, Initialize max_opened_tc <span class="keyword">in</span> mlx5i_init flow (Alaa Hleihel) [1618609] </span><br><span class="line">- [netdrv] mlx5e: Present SW stats when state is not opened (Alaa Hleihel) [1618609] </span><br><span class="line">- [netdrv] mlx5e: Avoid reset netdev stats on configuration changes (Alaa Hleihel) [1618609] </span><br><span class="line">- [netdrv] mlx5e: Use bool as <span class="built_in">return</span> <span class="built_in">type</span> <span class="keyword">for</span> mlx5e_xdp_handle (Alaa Hleihel) [1618609] </span><br><span class="line">- [netdrv] net: aquantia: memory corruption on jumbo frames (Igor Russkikh) [1628238] </span><br><span class="line">- [kernel] revert <span class="string">"platform/uv: Add adjustable set memory block size function"</span> (Baoquan He) [1625143] </span><br><span class="line">- [x86] revert <span class="string">"mm: probe memory block size for generic x86 64bit"</span> (Baoquan He) [1625143] </span><br><span class="line">- [x86] revert <span class="string">"mm: Use 2GB memory block size on large-memory x86-64 systems"</span> (Baoquan He) [1625143] </span><br><span class="line">- [x86] revert <span class="string">"mm: Streamline and restore probe_memory_block_size()"</span> (Baoquan He) [1625143] </span><br><span class="line">- [x86] revert <span class="string">"mm/memory_hotplug: determine block size based on the end of boot memory"</span> (Baoquan He) [1625143] </span><br><span class="line">- [mm] revert <span class="string">"memory_hotplug: do not fail offlining too early"</span> (Baoquan He) [1625143] </span><br><span class="line">- [mm] revert <span class="string">"memory_hotplug: remove timeout from __offline_memory"</span> (Baoquan He) [1625143] </span><br><span class="line">- [kernel] revert <span class="string">"x86/platform/uv: Add adjustable set memory block size function"</span> (Baoquan He) [1625143]</span><br><span class="line"></span><br><span class="line">2018-09-17 Bruno E. O. Meneguele &lt;bmeneg@redhat.com&gt; [3.10.0-951.el7]</span><br><span class="line">- [fs] fanotify: fix logic of events on child (Miklos Szeredi) [1597738] </span><br><span class="line">- [fs] cifs: add a check <span class="keyword">for</span> session expiry (Leif Sahlberg) [1626358] </span><br><span class="line">- [fs] xfs: completely <span class="built_in">disable</span> per-inode DAX behavior (Eric Sandeen) [1623150] </span><br><span class="line">- [fs] fs: get_rock_ridge_filename(): handle malformed NM entries (Bill O<span class="string">'Donnell) [1340778] &#123;CVE-2016-4913&#125; </span></span><br><span class="line"><span class="string">- [md] fix '</span>allow faster resync only on non-rotational media<span class="string">' underneath dm (Nigel Croxon) [1561162] </span></span><br><span class="line"><span class="string">- [md] Revert "allow faster resync only on non-rotational media" (Nigel Croxon) [1561162] </span></span><br><span class="line"><span class="string">- [mm] madvise: fix madvise() infinite loop under special circumstances (Rafael Aquini) [1552982] &#123;CVE-2017-18208&#125; </span></span><br><span class="line"><span class="string">- [infiniband] srpt: Support HCAs with more than two ports (Don Dutile) [1616192] </span></span><br><span class="line"><span class="string">- [infiniband] overflow.h: Add allocation size calculation helpers (Don Dutile) [1616192] </span></span><br><span class="line"><span class="string">- [net] ip_tunnel: clean the GSO bits properly (Flavio Leitner) [1607907] </span></span><br><span class="line"><span class="string">- [kernel] revert cpuset: fix a warning when clearing configured masks in old hierarchy (Aristeu Rozanski) [1626943] </span></span><br><span class="line"><span class="string">- [s390] sclp: Change SCLP console default buffer-full behavior (Hendrik Brueckner) [1625350] </span></span><br><span class="line"><span class="string">- [x86] kvm: Take out __exit annotation in vmx_exit() (Waiman Long) [1626560] </span></span><br><span class="line"><span class="string">- [x86] mark coffeelake-s 8+2 as supported (David Arcari) [1575457] </span></span><br><span class="line"><span class="string">- [x86] kvm: vmx: fixes for vmentry_l1d_flush module parameter (Marcelo Tosatti) [1619602] </span></span><br><span class="line"><span class="string">- [x86] speculation: Use ARCH_CAPABILITIES to skip L1D flush on vmentry (Marcelo Tosatti) [1619602]</span></span><br></pre></td></tr></table></figure><h3 id="Version-3-10-0-862-el7-系列"><a href="#Version-3-10-0-862-el7-系列" class="headerlink" title="Version: 3.10.0-862.el7[系列]"></a>Version: 3.10.0-862.el7[系列]</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br></pre></td><td class="code"><pre><span class="line">2018-09-21 Rado Vrbovsky &lt;rvrbovsk@redhat.com&gt; [3.10.0-862.14.4.el7]</span><br><span class="line">- [scsi] Revert: lpfc: Fix port initialization failure (Radomir Vrbovsky) [1605235 1584377] </span><br><span class="line">- [scsi] Revert: qla2xxx: Fix NULL pointer access <span class="keyword">for</span> fcport structure (Radomir Vrbovsky) [1597546 1547714]</span><br><span class="line"></span><br><span class="line">2018-09-13 Rado Vrbovsky &lt;rvrbovsk@redhat.com&gt; [3.10.0-862.14.3.el7]</span><br><span class="line">- [fs] <span class="built_in">exec</span>: Limit arg stack to at most 75 of _STK_LIM (Yauheni Kaliuta) [1625980 1625991] &#123;CVE-2018-14634&#125; </span><br><span class="line">- [fs] <span class="built_in">exec</span>: account <span class="keyword">for</span> argv/envp pointers (Yauheni Kaliuta) [1625980 1625991] &#123;CVE-2018-14634&#125;</span><br><span class="line"></span><br><span class="line">2018-09-10 Jan Stancek &lt;jstancek@redhat.com&gt; [3.10.0-862.14.2.el7]</span><br><span class="line">- [uio] fix possible circular locking dependency (Xiubo Li) [1608677 1560418] </span><br><span class="line">- [scsi] tcmu: Don<span class="string">'t pass KERN_ERR to pr_err (Xiubo Li) [1608677 1560418] </span></span><br><span class="line"><span class="string">- [scsi] tcmu: add module wide block/reset_netlink support (Xiubo Li) [1608677 1560418] </span></span><br><span class="line"><span class="string">- [scsi] tcmu: simplify nl interface (Xiubo Li) [1608677 1560418] </span></span><br><span class="line"><span class="string">- [scsi] tcmu: track nl commands (Xiubo Li) [1608677 1560418] </span></span><br><span class="line"><span class="string">- [scsi] tcmu: delete unused __wait (Xiubo Li) [1608677 1560418] </span></span><br><span class="line"><span class="string">- [uio] fix crash after the device is unregistered (Xiubo Li) [1608677 1560418] </span></span><br><span class="line"><span class="string">- [uio] change to use the mutex lock instead of the spin lock (Xiubo Li) [1608677 1560418] </span></span><br><span class="line"><span class="string">- [uio] Prevent device destruction while fds are open (Xiubo Li) [1608677 1560418] </span></span><br><span class="line"><span class="string">- [uio] Reduce return paths from uio_write() (Xiubo Li) [1608677 1560418] </span></span><br><span class="line"><span class="string">- [uio] fix incorrect memory leak cleanup (Xiubo Li) [1608677 1560418] </span></span><br><span class="line"><span class="string">- [uio] add missing error codes (Xiubo Li) [1608677 1560418] </span></span><br><span class="line"><span class="string">- [uio] fix false positive __might_sleep warning splat (Xiubo Li) [1608677 1560418] </span></span><br><span class="line"><span class="string">- [uio] Destroy uio_idr on module exit (Xiubo Li) [1608677 1560418] </span></span><br><span class="line"><span class="string">- [uio] don'</span>t free irq that was not requested (Xiubo Li) [1608677 1560418] </span><br><span class="line">- [uio] support memory sizes larger than 32 bits (Xiubo Li) [1608677 1560418] </span><br><span class="line">- [uio] we cannot mmap unaligned page contents (Xiubo Li) [1608677 1560418] </span><br><span class="line">- [uio] Pass pointers to virt_to_page(), not integers (Xiubo Li) [1608677 1560418] </span><br><span class="line">- [uio] fix memory leak (Xiubo Li) [1608677 1560418] </span><br><span class="line">- [uio] Request/free irq separate from dev lifecycle (Xiubo Li) [1608677 1560418] </span><br><span class="line">- [uio] Simplify uio error path by using devres <span class="built_in">functions</span> (Xiubo Li) [1608677 1560418]</span><br><span class="line"></span><br><span class="line">2018-08-22 Rado Vrbovsky &lt;rvrbovsk@redhat.com&gt; [3.10.0-862.14.1.el7]</span><br><span class="line">- [x86] microcode: Allow late microcode loading with SMT disabled (Josh Poimboeuf) [1619622 1614515] </span><br><span class="line">- [infiniband] core: Fix nospec regression (Josh Poimboeuf) [1619624 1616346] </span><br><span class="line">- [x86] microcode/amd: Do not load when running on a hypervisor (Vitaly Kuznetsov) [1618390 1607899]</span><br><span class="line"></span><br><span class="line">2018-08-18 Rado Vrbovsky &lt;rvrbovsk@redhat.com&gt; [3.10.0-862.13.1.el7]</span><br><span class="line">- [infiniband] ib/ipoib: Fix race condition <span class="keyword">in</span> neigh creation (Don Dutile) [1616164 1520300] </span><br><span class="line">- [gpu] qxl: hook monitors_config updates into crtc, not encoder (Gerd Hoffmann) [1614349 1544322] </span><br><span class="line">- [gpu] qxl: move qxl_send_monitors_config() (Gerd Hoffmann) [1614349 1544322] </span><br><span class="line">- [gpu] qxl: remove qxl_io_log() (Gerd Hoffmann) [1614349 1544322] </span><br><span class="line">- [kernel] locking: Introduce smp_mb__after_spinlock() (Steve Best) [1613814 1496574] </span><br><span class="line">- [scsi] ibmvfc: Avoid unnecessary port relogin (Steve Best) [1613202 1605080] </span><br><span class="line">- [powerpc] stf-barrier: update (rfi_)enabled_flush_types as <span class="keyword">in</span> upstream (Gustavo Duarte) [1612353 1585297] </span><br><span class="line">- [powerpc] stf-barrier: update debugfs as <span class="keyword">in</span> upstream (Gustavo Duarte) [1612353 1585297] </span><br><span class="line">- [powerpc] stf-barrier: update handle_ssbd() as <span class="keyword">in</span> upstream (Gustavo Duarte) [1612353 1585297] </span><br><span class="line">- [powerpc] stf-barrier: update stf_barrier_enable() as <span class="keyword">in</span> upstream (Gustavo Duarte) [1612353 1585297] </span><br><span class="line">- [powerpc] stf-barrier: add cpu_show_spec_store_bypass() as <span class="keyword">in</span> upstream (Gustavo Duarte) [1612353 1585297] </span><br><span class="line">- [powerpc] stf-barrier: add comment as <span class="keyword">in</span> upstream (Gustavo Duarte) [1612353 1585297] </span><br><span class="line">- [powerpc] stf-barrier: move code from setup_64.c to security.c as <span class="keyword">in</span> upstream (Gustavo Duarte) [1612353 1585297] </span><br><span class="line">- [powerpc] stf-barrier: move code from setup.h to security_features.h as <span class="keyword">in</span> upstream (Gustavo Duarte) [1612353 1585297] </span><br><span class="line">- [powerpc] stf-barrier: update fallback routine as <span class="keyword">in</span> upstream (Gustavo Duarte) [1612353 1585297] </span><br><span class="line">- [powerpc] stf-barrier: update entry barrier slot as <span class="keyword">in</span> upstream (Gustavo Duarte) [1612353 1585297] </span><br><span class="line">- [nvmet-fc] move tech preview warning to nvmet_fc_register_targetport call (Ewan Milne) [1610381 1608947] </span><br><span class="line">- [nvme-fc] move tech preview warning to nvme_fc_register_localport call (Ewan Milne) [1610381 1608947] </span><br><span class="line">- [block] blk-throttle: check stats_cpu before reading it from sysfs (Ming Lei) [1608228 1567748] </span><br><span class="line">- [powerpc] signals: Discard transaction state from signal frames (Steve Best) [1608227 1586153] </span><br><span class="line">- [ipc] shm.c: add split <span class="keyword">function</span> to shm_vm_ops (Desnes Augusto Nunes <span class="keyword">do</span> Rosario) [1608225 1586152] </span><br><span class="line">- [scsi] lpfc: Fix port initialization failure (Dick Kennedy) [1605235 1584377] </span><br><span class="line">- [vmbus] fix the missed signaling <span class="keyword">in</span> hv_signal_on_read() (Vitaly Kuznetsov) [1605089 1591976] </span><br><span class="line">- [infiniband] ib/ipoib: Fix <span class="keyword">for</span> potential no-carrier state (Donald Dutile) [1601935 1548474] </span><br><span class="line">- [vmwgfx] refuse to hibernate <span class="keyword">if</span> we have any resources. (v2) (Dave Airlie) [1601516 1595136] </span><br><span class="line">- [netdrv] sfc: stop the TX queue before pushing new buffers (Xin Long) [1601353 1445576] </span><br><span class="line">- [lib] rhashtable: Fix rhlist duplicates insertion (Xin Long) [1601009 1559106] </span><br><span class="line">- [kernel] hrtimer: Allow concurrent hrtimer_start() <span class="keyword">for</span> self restarting timers (Oleksandr Natalenko) [1600911 1574387] </span><br><span class="line">- [iommu] amd: Add NULL sanity check <span class="keyword">for</span> struct irq_2_irte.ir_data (Suravee Suthikulpanit) [1600661 1542697] </span><br><span class="line">- [hid] wacom: Correct logical maximum Y <span class="keyword">for</span> 2nd-gen Intuos Pro large (Benjamin Tissoires) [1600660 1591499] </span><br><span class="line">- [md] avoid NULL dereference to queue pointer (Ming Lei) [1600056 1581845] </span><br><span class="line">- [scsi] qla2xxx: Fix NULL pointer access <span class="keyword">for</span> fcport structure (Himanshu Madhani) [1597546 1547714] </span><br><span class="line">- [scsi] csiostor: Add a soft dep on cxgb4 driver (Arjun Vynipadath) [1597529 1584003] </span><br><span class="line">- [mm] initialize pages on demand during boot (Masayoshi Mizuma) [1588366 1496330] </span><br><span class="line">- [mm] split deferred_init_range into initializing and freeing parts (Masayoshi Mizuma) [1588366 1496330] </span><br><span class="line">- [kernel] cpu/hotplug: Fix <span class="string">'online'</span> sysfs entry with <span class="string">'nosmt'</span> (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span><br><span class="line">- [kernel] cpu/hotplug: Enable <span class="string">'nosmt'</span> as late as possible (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span><br><span class="line">- [net] ipv6: fix nospec-related regression <span class="keyword">in</span> ipv6_addr_prefix() (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3693&#125; </span><br><span class="line">- [net] tcp: add tcp_ooo_try_coalesce() helper (Paolo Abeni) [1611368 1611369] &#123;CVE-2018-5390&#125; </span><br><span class="line">- [net] tcp: call tcp_drop() from tcp_data_queue_ofo() (Paolo Abeni) [1611368 1611369] &#123;CVE-2018-5390&#125; </span><br><span class="line">- [net] tcp: detect malicious patterns <span class="keyword">in</span> tcp_collapse_ofo_queue() (Paolo Abeni) [1611368 1611369] &#123;CVE-2018-5390&#125; </span><br><span class="line">- [net] tcp: avoid collapses <span class="keyword">in</span> tcp_prune_queue() <span class="keyword">if</span> possible (Paolo Abeni) [1611368 1611369] &#123;CVE-2018-5390&#125; </span><br><span class="line">- [net] tcp: free batches of packets <span class="keyword">in</span> tcp_prune_ofo_queue() (Paolo Abeni) [1611368 1611369] &#123;CVE-2018-5390&#125; </span><br><span class="line">- [net] add rb_to_skb() and other rb tree helpers (Paolo Abeni) [1611368 1611369] &#123;CVE-2018-5390&#125; </span><br><span class="line">- [net] tcp: fix a stale ooo_last_skb after a replace (Paolo Abeni) [1611368 1611369] &#123;CVE-2018-5390&#125; </span><br><span class="line">- [net] tcp: use an RB tree <span class="keyword">for</span> ooo receive queue (Paolo Abeni) [1611368 1611369] &#123;CVE-2018-5390&#125; </span><br><span class="line">- [net] tcp: refine tcp_prune_ofo_queue() to not drop all packets (Paolo Abeni) [1611368 1611369] &#123;CVE-2018-5390&#125; </span><br><span class="line">- [net] tcp: increment sk_drops <span class="keyword">for</span> dropped rx packets (Paolo Abeni) [1611368 1611369] &#123;CVE-2018-5390&#125; </span><br><span class="line">- [x86] x86/syscall: Fix regression when using the last syscall (pkey_free) (Lauro Ramos Venancio) [1589033 1589035] &#123;CVE-2018-3693&#125; </span><br><span class="line">- [kernel] cpu: hotplug: detect SMT disabled by BIOS (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span><br><span class="line">- [documentation] l1tf: Fix typos (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span><br><span class="line">- [x86] kvm: Remove extra newline <span class="keyword">in</span> vmentry_l1d_flush sysfs file (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span><br><span class="line">- [x86] kvm: vmx: Initialize the vmx_l1d_flush_pages<span class="string">'content (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] speculation: l1tf: Unbreak !__HAVE_ARCH_PFN_MODIFY_ALLOWED architectures (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [documentation] Add section about CPU vulnerabilities (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] bugs, kvm: introduce boot-time control of L1TF mitigations (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [kernel] cpu: hotplug: Set CPU_SMT_NOT_SUPPORTED early (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [kernel] cpu: hotplug: Expose SMT control init function (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] kvm: Allow runtime control of L1D flush (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] kvm: Serialize L1D flush parameter setter (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] kvm: Add static key for flush always (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] kvm: Move l1tf setup function (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] l1tf: Handle EPT disabled state proper (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] kvm: Drop L1TF MSR list approach (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] litf: Introduce vmx status variable (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] bugs: Make cpu_show_common() static (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] bugs: Concentrate bug reporting into a separate function (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [kernel] cpu: hotplug: Online siblings when SMT control is turned on (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] kvm: vmx: Use MSR save list for IA32_FLUSH_CMD if required (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] kvm: vmx: Extend add_atomic_switch_msr() to allow VMENTER only MSRs (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] kvm: vmx: Separate the VMX AUTOLOAD guest/host number accounting (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] kvm: vmx: Add find_msr() helper function (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] kvm: vmx: Split the VMX MSR LOAD structures to have an host/guest numbers (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] kvm: mitigation for L1 cache terminal fault vulnerabilities, part 3 (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] kvm: Warn user if KVM is loaded SMT and L1TF CPU bug being present (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [kernel] cpu: hotplug: Boot HT siblings at least once, part 2 (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] speculation/l1tf: fix typo in l1tf mitigation string (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] l1tf: protect _PAGE_FILE PTEs against speculation (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] kvm: mitigation for L1 cache terminal fault vulnerabilities, part 2 (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [kernel] cpu/hotplug: Boot HT siblings at least once (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- Revert"x86/apic: Ignore secondary threads if nosmt=force"(Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] speculation/l1tf: Fix up pte-&gt;pfn conversion for PAE (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] speculation/l1tf: Protect PAE swap entries against L1TF (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] CPU/AMD: Move TOPOEXT reenablement before reading smp_num_siblings (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] speculation/l1tf: Extend 64bit swap file size limit (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] cpu/AMD: Remove the pointless detect_ht() call (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] bugs: Move the l1tf function and define pr_fmt properly (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [kernel] cpu/hotplug: Provide knobs to control SMT, part 2 (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] topology: Provide topology_smt_supported() (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] smp: Provide topology_is_primary_thread(), part 2 (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] apic: Ignore secondary threads if nosmt=force (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] cpu/AMD: Evaluate smp_num_siblings early (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] CPU/AMD: Do not check CPUID max ext level before parsing SMP info (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] cpu/intel: Evaluate smp_num_siblings early (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] cpu/topology: Provide detect_extended_topology_early() (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] cpu/common: Provide detect_ht_early() (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] cpu: Remove the pointless CPU printout (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [kernel] cpu/hotplug: Provide knobs to control SMT (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [kernel] cpu/hotplug: Split do_cpu_down() (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] smp: Provide topology_is_primary_thread() (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] CPU: Modify detect_extended_topology() to return result (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] l1tf: fix build for CONFIG_NUMA_BALANCING=n (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] l1tf: sync with latest L1TF patches (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] l1tf: protect _PAGE_NUMA PTEs and PMDs against speculation (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [mm] l1tf: Disallow non privileged high MMIO PROT_NONE mappings (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] l1tf: Report if too much memory for L1TF workaround (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] l1tf: Limit swap file size to MAX_PA/2 (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] l1tf: Add sysfs reporting for l1tf (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] l1tf: Make sure the first page is always reserved (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] l1tf: Protect PROT_NONE PTEs against speculation (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] l1tf: Protect swap entries against L1TF (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] l1tf: Increase 32bit PAE __PHYSICAL_PAGE_MASK (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] mm: Fix swap entry comment and macro (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] spec_ctrl: sync with upstream cpu_set_bug_bits() (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] add support for L1D flush MSR (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125; </span></span><br><span class="line"><span class="string">- [x86] kvm: mitigation for L1 cache terminal fault vulnerabilities (Josh Poimboeuf) [1593383 1593384] &#123;CVE-2018-3620&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2018-08-01 Jan Stancek &lt;jstancek@redhat.com&gt; [3.10.0-862.12.1.el7]</span></span><br><span class="line"><span class="string">- [fs] CIFS: Fix NULL pointer deref on SMB2_tcon() failure (Leif Sahlberg) [1609159 1591092] </span></span><br><span class="line"><span class="string">- [net] multicast: do not restore deleted record source filter mode to new one (Hangbin Liu) [1610380 1586321] </span></span><br><span class="line"><span class="string">- [net] multicast: remove useless parameter for group add (Hangbin Liu) [1610380 1586321] </span></span><br><span class="line"><span class="string">- [net] ipv6/mcast: init as INCLUDE when join SSM INCLUDE group (Hangbin Liu) [1610380 1586321] </span></span><br><span class="line"><span class="string">- [net] ipv4/igmp: init group mode as INCLUDE when join source group (Hangbin Liu) [1610380 1586321] </span></span><br><span class="line"><span class="string">- [net] ipv6: mcast: fix unsolicited report interval after receiving querys (Hangbin Liu) [1610380 1586321] </span></span><br><span class="line"><span class="string">- [net] ipv6: refactor ipv6_dev_mc_inc() (Hangbin Liu) [1610380 1586321]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2018-07-20 Rado Vrbovsky &lt;rvrbovsk@redhat.com&gt; [3.10.0-862.11.1.el7]</span></span><br><span class="line"><span class="string">- [tcmu] allow userspace to reset ring (Xiubo Li) [1599669 1562587] </span></span><br><span class="line"><span class="string">- [tcmu] remove commands_lock (Xiubo Li) [1599669 1562587] </span></span><br><span class="line"><span class="string">- [tcmu] move expired command completion to unmap thread (Xiubo Li) [1599669 1562587] </span></span><br><span class="line"><span class="string">- [tcmu] add cmd timeout handling wq (Xiubo Li) [1599669 1562587] </span></span><br><span class="line"><span class="string">- [tcmu] don'</span>t block submitting context <span class="keyword">for</span> block waits (Xiubo Li) [1599669 1562587] </span><br><span class="line">- [tcmu] fix double se_cmd completion (Xiubo Li) [1599669 1562587] </span><br><span class="line">- [tcmu] replace spin lock with mutex (Xiubo Li) [1599669 1562587] </span><br><span class="line">- [target] add SAM_STAT_BUSY sense reason (Xiubo Li) [1599669 1562587] </span><br><span class="line">- [target] core: add device action configfs files (Xiubo Li) [1599669 1562587] </span><br><span class="line">- [target] Avoid mappedlun symlink creation during lun shutdown (Xiubo Li) [1599656 1585081] </span><br><span class="line">- [spectre] update Spectre v1 mitigation string (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [spectre] fix hiddev nospec issues (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [x86] syscall: clarify clobbered registers <span class="keyword">in</span> entry code (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [powerpc] add missing barrier_nospec() <span class="keyword">in</span> __get_user64_nocheck() (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [spectre] fix gadgets found by smatch scanner (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [alsa] rme9652: Hardening <span class="keyword">for</span> potential Spectre v1 (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [alsa] hdspm: Hardening <span class="keyword">for</span> potential Spectre v1 (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [alsa] asihpi: Hardening <span class="keyword">for</span> potential Spectre v1 (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [alsa] opl3: Hardening <span class="keyword">for</span> potential Spectre v1 (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [alsa] hda: Hardening <span class="keyword">for</span> potential Spectre v1 (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [alsa] seq: oss: Hardening <span class="keyword">for</span> potential Spectre v1 (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [alsa] seq: oss: Fix unbalanced use lock <span class="keyword">for</span> synth MIDI device (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [net] atm: Fix potential Spectre v1 (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [kernel] time: Protect posix clock array access against speculation (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [kernel] sys.c: fix potential Spectre v1 issue (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [<span class="built_in">sched</span>] autogroup: Fix possible Spectre-v1 indexing <span class="keyword">for</span> sched_prio_to_weight[] (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [perf] core: Fix possible Spectre-v1 indexing <span class="keyword">for</span> -&gt;aux_pages[] (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [sysvipc] sem: mitigate semnum index against spectre v1 (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [alsa] control: Hardening <span class="keyword">for</span> potential Spectre v1 (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [usbip] vhci_sysfs: fix potential Spectre v1 (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [media] dvb_ca_en50221: prevent using slot_info <span class="keyword">for</span> Spectre attacs (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [media] dvb_ca_en50221: sanity check slot number from userspace (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [atm] zatm: Fix potential Spectre v1 (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [x86] kvm: Update spectre-v1 mitigation (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [x86] kvm: Add memory barrier on vmcs field lookup (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [x86] perf/msr: Fix possible Spectre-v1 indexing <span class="keyword">in</span> the MSR driver (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [x86] perf: Fix possible Spectre-v1 indexing <span class="keyword">for</span> x86_pmu::event_map() (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [x86] perf: Fix possible Spectre-v1 indexing <span class="keyword">for</span> hw_perf_event cache_* (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [net] nl80211: Sanitize array index <span class="keyword">in</span> parse_txq_params (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [include] vfs, fdtable: Prevent bounds-check bypass via speculative execution (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [x86] syscall: Sanitize syscall table de-references under speculation (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [powerpc] Use barrier_nospec <span class="keyword">in</span> copy_from_user() (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [include] nospec: Introduce barrier_nospec <span class="keyword">for</span> other arches (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [x86] Introduce barrier_nospec (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [x86] spectre_v1: Disable compiler optimizations over array_index_mask_nospec() (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [x86] Implement array_index_mask_nospec (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [documentation] Document array_index_nospec (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [include] nospec: Include dependency (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [include] nospec: Allow index argument to have const-qualified <span class="built_in">type</span> (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [include] nospec: Kill array_index_nospec_mask_check() (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [include] nospec: Move array_index_nospec() parameter checking into separate macro (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [include] array_index_nospec: Sanitize speculative array de-references (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [x86] get_user: Use pointer masking to <span class="built_in">limit</span> speculation (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [x86] uaccess: Use __uaccess_begin_nospec() and uaccess_try_nospec (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [x86] Introduce __uaccess_begin_nospec() and uaccess_try_nospec (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [x86] usercopy: Replace open coded stac/clac with __uaccess_&#123;begin, end&#125; (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [x86] reorganize SMAP handling <span class="keyword">in</span> user space accesses (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [x86] uaccess: Tell the compiler that uaccess is unlikely to fault (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125; </span><br><span class="line">- [x86] uaccess: fix sparse errors (Josh Poimboeuf) [1589033 1589035] &#123;CVE-2018-3690&#125;</span><br><span class="line"></span><br><span class="line">2018-07-04 Rado Vrbovsky &lt;rvrbovsk@redhat.com&gt; [3.10.0-862.10.1.el7]</span><br><span class="line">- [x86] add _TIF_UPROBE to _TIF_DO_NOTIFY_MASK (Oleg Nesterov) [1595155 1579521] </span><br><span class="line">- [x86] spec_ctrl: Always clear SPEC_CTRL MSRs when disabling IBRS (Radomir Vrbovsky) [1586150 1574730] </span><br><span class="line">- [sound] alsa: hda/realtek - Add headset mode support <span class="keyword">for</span> Dell laptop (Jaroslav Kysela) [1588946 1528587] </span><br><span class="line">- [sound] alsa: hda/realtek - Support headset mode <span class="keyword">for</span> ALC215/ALC285/ALC289 (Jaroslav Kysela) [1593586 1535427] </span><br><span class="line">- [mm] compaction: release zone irqlock <span class="keyword">in</span> isolate_freepages_block (Andrea Arcangeli) [1596283 1582793] </span><br><span class="line">- [mm] compaction: change the timing to check to drop the spinlock (Andrea Arcangeli) [1596283 1582793] </span><br><span class="line">- [fs] dcache.c: add cond_resched() <span class="keyword">in</span> shrink_dentry_list() (Aaron Tomlin) [1596184 1584693] </span><br><span class="line">- [misc] vmware balloon: Treat init like reset (Cathy Avery) [1595601 1540110] </span><br><span class="line">- [netdrv] qede: Fix ref-cnt usage count (Chad Dupuis) [1594700 1574847] </span><br><span class="line">- [x86] kvm: fix LAPIC timer drift when guest uses periodic mode (<span class="string">"Dr. David Alan Gilbert"</span>) [1594292 1584775] </span><br><span class="line">- [x86] kvm: remove APIC Timer periodic/oneshot spikes (<span class="string">"Dr. David Alan Gilbert"</span>) [1594292 1584775] </span><br><span class="line">- [netdrv] mlx4_en: Increase number of default RX rings (Erez Alfasi) [1594127 1520295] </span><br><span class="line">- [netdrv] mlx4_en: Limit the number of RX rings (Erez Alfasi) [1594127 1520295] </span><br><span class="line">- [netdrv] mlx4_en: Limit the number of TX rings (Erez Alfasi) [1594127 1520295] </span><br><span class="line">- [fs] ceph: don<span class="string">'t set read_ahead_kb to 0 by default (Ilya Dryomov) [1590825 1579539] </span></span><br><span class="line"><span class="string">- [scsi] qla2xxx: Remove stale debug value for login_retry flag (Himanshu Madhani) [1588937 1578880] </span></span><br><span class="line"><span class="string">- [x86] topology: Update the'</span>cpu cores<span class="string">'field in /proc/cpuinfo correctly across CPU hotplug operations (Prarit Bhargava) [1588563 1582023] </span></span><br><span class="line"><span class="string">- [acpi] osi: Add OEM _OSI strings to disable NVidia RTD3 (Jaroslav Kysela) [1584685 1581391] </span></span><br><span class="line"><span class="string">- [hv] vmbus: Fix a rescind issue (Eduardo Otubo) [1582124 1518498] </span></span><br><span class="line"><span class="string">- [linux] libata: enable host-wide tags (Ewan Milne) [1581728 1491014] </span></span><br><span class="line"><span class="string">- [ata] libata: remove ATA_FLAG_LOWTAG (Ewan Milne) [1581728 1491014] </span></span><br><span class="line"><span class="string">- [ata] Add a new flag to destinguish sas controller (Ewan Milne) [1581728 1491014] </span></span><br><span class="line"><span class="string">- [ata] libata: make sata_sil24 use fifo tag allocator (Ewan Milne) [1581728 1491014] </span></span><br><span class="line"><span class="string">- [ata] libata: move sas ata tag allocation to libata-scsi.c (Ewan Milne) [1581728 1491014] </span></span><br><span class="line"><span class="string">- [ata] libata: use blk taging (Ewan Milne) [1581728 1491014] </span></span><br><span class="line"><span class="string">- [nvme] rdma: Use mr pool (David Milburn) [1581347 1547273] </span></span><br><span class="line"><span class="string">- [nvme] rdma: Check remotely invalidated rkey matches our expected rkey (David Milburn) [1581347 1547273] </span></span><br><span class="line"><span class="string">- [nvme] rdma: wait for local invalidation before completing a request (David Milburn) [1581347 1547273] </span></span><br><span class="line"><span class="string">- [nvme] rdma: don'</span>t complete requests before a send work request has completed (David Milburn) [1581347 1547273] </span><br><span class="line">- [nvme] rdma: don<span class="string">'t suppress send completions (David Milburn) [1581347 1547273] </span></span><br><span class="line"><span class="string">- [x86] kvm: Fix loss of pending INIT due to race (Radim Krcmar) [1580467 1569473] </span></span><br><span class="line"><span class="string">- [mm] mempolicy: fix use after free when calling get_mempolicy (Augusto Caringi) [1576759 1576755] &#123;CVE-2018-10675&#125; </span></span><br><span class="line"><span class="string">- [sound] alsa: seq: Fix racy pool initializations (Jaroslav Kysela) [1550171 1593586 1550169 1535427] &#123;CVE-2018-7566&#125; </span></span><br><span class="line"><span class="string">- [crypto] algif_skcipher: Load TX SG list after waiting (Bruno Eduardo de Oliveira Meneguele) [1541870 1541875] &#123;CVE-2017-13215&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2018-06-27 Frantisek Hrbata &lt;fhrbata@hrbata.com&gt; [3.10.0-862.9.1.el7]</span></span><br><span class="line"><span class="string">- [iscsi-target] Fix iscsi_np reset hung task during parallel delete (Maurizio Lombardi) [1583593 1579217]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2018-06-15 Rado Vrbovsky &lt;rvrbovsk@redhat.com&gt; [3.10.0-862.8.1.el7]</span></span><br><span class="line"><span class="string">- [x86] always enable eager FPU by default on non-AMD processors (Paolo Bonzini) [1589051 1589048] &#123;CVE-2018-3665&#125; </span></span><br><span class="line"><span class="string">- [net] nf_reset: also clear nfctinfo bits (Florian Westphal) [1588458 1572983] </span></span><br><span class="line"><span class="string">- [x86] bugs: Switch the selection of mitigation from CPU vendor to CPU features (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] bugs: Add AMD'</span>s SPEC_CTRL MSR usage (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span><br><span class="line">- [x86] bugs: Add AMD<span class="string">'s variant of SSB_NO (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] spec_ctrl: Fix VM guest SSBD problems (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] spec_ctrl: Eliminate TIF_SSBD checks in IBRS on/off functions (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] spec_ctrl: Disable SSBD update from scheduler if not user settable (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] spec_ctrl: Make ssbd_enabled writtable (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] spec_ctrl: Remove thread_info check in __wrmsr_on_cpu() (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] spec_ctrl: Write per-thread SSBD state to spec_ctrl_pcp (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] spec_ctrl: Add a read-only ssbd_enabled debugfs file (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] bugs/intel: Set proper CPU features and setup RDS (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] kvm: vmx: Emulate MSR_IA32_ARCH_CAPABILITIES (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] kvm: svm: Implement VIRT_SPEC_CTRL support for SSBD (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] speculation, KVM: Implement support for VIRT_SPEC_CTRL/LS_CFG (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] bugs: Rework spec_ctrl base and mask logic (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] spec_ctrl: Rework SPEC_CTRL update after late microcode loading (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] spec_ctrl: Make sync_all_cpus_ibrs() write spec_ctrl_pcp value (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] bugs: Unify x86_spec_ctrl_&#123;set_guest, restore_host&#125; (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] speculation: Rework speculative_store_bypass_update() (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] speculation: Add virtualized speculative store bypass disable support (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] bugs, KVM: Extend speculation control for VIRT_SPEC_CTRL (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] KVM: Rename KVM SPEC_CTRL MSR functions to match upstream (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] speculation: Handle HT correctly on AMD (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] cpufeatures: Add FEATURE_ZEN (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] cpufeatures: Disentangle SSBD enumeration (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] cpufeatures: Disentangle MSR_SPEC_CTRL enumeration from IBRS (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] speculation: Use synthetic bits for IBRS/IBPB/STIBP (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [documentation] spec_ctrl: Do some minor cleanups (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] speculation: Make"seccomp"the default mode for Speculative Store Bypass (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] seccomp: Move speculation migitation control to arch code (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [kernel] seccomp: Add filter flag to opt-out of SSB mitigation (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [kernel] seccomp: Use PR_SPEC_FORCE_DISABLE (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] prctl: Add force disable speculation (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] spectre_v2: No mitigation if CPU not affected and no command override (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] pti: Do not enable PTI on CPUs which are not vulnerable to Meltdown (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] bug: Add X86_BUG_CPU_MELTDOWN and X86_BUG_SPECTRE_V[12] (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] pti: Rename CONFIG_KAISER to CONFIG_PAGE_TABLE_ISOLATION (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] spec_ctrl: Sync up naming of SPEC_CTRL MSR bits with upstream (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125; </span></span><br><span class="line"><span class="string">- [x86] spec_ctrl: Sync up SSBD changes with upstream (Waiman Long) [1584323 1584569] &#123;CVE-2018-3639&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Linux kernel内核升级和降级的方法实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Grafana 安装部署</title>
    <link href="https://wsgzao.github.io/post/grafana/"/>
    <id>https://wsgzao.github.io/post/grafana/</id>
    <published>2019-01-25T06:59:49.000Z</published>
    <updated>2019-01-25T07:54:22.213Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Grafana 是一个开源的数据分析和监控平台，它是一个开箱即用的可视化工具，具有功能齐全的度量仪表盘和图形编辑器，有灵活丰富的图形化选项，可以混合多种风格，支持多个数据源特点。Grafana + Zabbix 的组合方式，主要是通过插件的形式，将 Zabbix 接入到 Grafana 中，使其可以借助 Grafana 的 portal 进行统一的监控和管理。</p><blockquote><p>The open platform for beautiful analytics and monitoring</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 01 月 25 日 - 更新 Grafana Zabbix API Error 解决办法<br>2018 年 10 月 24 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/grafana/">https://wsgzao.github.io/post/grafana/</a></p><p><strong> 扩展阅读 </strong></p><p>Grafana - <a href="https://grafana.com/" target="_blank" rel="noopener">https://grafana.com/</a></p><hr><h2 id="Grafana-入门"><a href="#Grafana-入门" class="headerlink" title="Grafana 入门"></a>Grafana 入门</h2><p>观看 10 分钟的初学者指南，以建立仪表板，以快速介绍设置仪表板和面板。<br><a href="https://www.youtube.com/watch?v=sKNZMtoSHN4&amp;index=7&amp;list=PLDGkOdUX1Ujo3wHw9-z5Vo12YLqXRjzg2" target="_blank" rel="noopener">https://www.youtube.com/watch?v=sKNZMtoSHN4&amp;index=7&amp;list=PLDGkOdUX1Ujo3wHw9-z5Vo12YLqXRjzg2</a></p><p>阅读基本概念文档，以获得 Grafana 概念的速成关键课程<br><a href="http://docs.grafana.org/guides/basic_concepts/" target="_blank" rel="noopener">http://docs.grafana.org/guides/basic_concepts/</a></p><h2 id="Grafana-安装"><a href="#Grafana-安装" class="headerlink" title="Grafana 安装"></a>Grafana 安装</h2><blockquote><p>No matter where your data is, or what kind of database it lives in, you can bring it together with Grafana. Beautifully.</p></blockquote><p><a href="http://docs.grafana.org/installation/" target="_blank" rel="noopener">http://docs.grafana.org/installation/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install grafana</span></span><br><span class="line">cat &gt; /etc/yum.repos.d/grafana.repo &lt;&lt; <span class="string">'EOF'</span></span><br><span class="line">[grafana]</span><br><span class="line">name=grafana</span><br><span class="line">baseurl=https://packagecloud.io/grafana/stable/el/7/<span class="variable">$basearch</span></span><br><span class="line">gpgkey=https://packagecloud.io/gpg.key https://grafanarel.s3.amazonaws.com/RPM-GPG-KEY-grafana</span><br><span class="line">enabled=0</span><br><span class="line">gpgcheck=1</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># yum install grafana</span></span><br><span class="line">yum --enablerepo=grafana -y install grafana initscripts fontconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># change anything if you need</span></span><br><span class="line">vi /etc/grafana/grafana.ini</span><br><span class="line"> </span><br><span class="line"> 30 [server]</span><br><span class="line"> 31 <span class="comment"># Protocol (http, https, socket)</span></span><br><span class="line"> 32 ;protocol = http</span><br><span class="line"> 33</span><br><span class="line"> 34 <span class="comment"># The ip address to bind to, empty will bind to all interfaces</span></span><br><span class="line"> 35 ;http_addr =</span><br><span class="line"> 36</span><br><span class="line"> 37 <span class="comment"># The http port  to use</span></span><br><span class="line"> 38 ;http_port = 3000</span><br><span class="line"> 39</span><br><span class="line"> 40 <span class="comment"># The public facing domain name used to access grafana from a browser</span></span><br><span class="line"> 41 ;domain = localhost</span><br><span class="line"></span><br><span class="line"><span class="comment"># start and enable grafana</span></span><br><span class="line">sudo systemctl start grafana-server</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> grafana-server</span><br><span class="line">sudo systemctl status grafana-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># test</span></span><br><span class="line">http://&lt;ip&gt;:3000</span><br><span class="line">admin/admin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加数据源 </span></span><br><span class="line"> 安装很简单，之后需要配置数据源比如 InfluxDB/Zabbix API 等才能发挥真正的作用</span><br></pre></td></tr></table></figure><h3 id="grafana-zabbix"><a href="#grafana-zabbix" class="headerlink" title="grafana-zabbix"></a>grafana-zabbix</h3><p><a href="https://grafana.com/plugins/alexanderzobnin-zabbix-app" target="_blank" rel="noopener">https://grafana.com/plugins/alexanderzobnin-zabbix-app</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 zabbix 插件（grafana-zabbix）</span></span><br><span class="line">grafana-cli plugins install alexanderzobnin-zabbix-app</span><br><span class="line">systemctl restart grafana-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启用插件 </span></span><br><span class="line"> 进入 Plugins 界面，选择 “Zabbix” </span><br><span class="line">开始面板（左上角图标） -&gt; Plugins -&gt; Apps -&gt; Zabbix </span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 zabbix 数据源 </span></span><br><span class="line"> 进入 “添加数据源” 界面 </span><br><span class="line">开始面板（左上角图标） -&gt; Data Sources -&gt; Add data <span class="built_in">source</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 Zabbix 数据源 </span></span><br><span class="line">配置完后，保存退出，配置的内容如下： </span><br><span class="line">重要参数有： </span><br><span class="line">Type: Zabbix </span><br><span class="line">Url: http://192.168.56.103/zabbix/api_jsonrpc.php </span><br><span class="line">Access: direct </span><br><span class="line">(Zabbix API details) </span><br><span class="line">Username: Admin（默认） </span><br><span class="line">Password: zabbix（默认）</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证 </span></span><br><span class="line"> 之后，我们从 开始面板 -&gt; Zabbix 中，便可看到 Zabbix 相关的监控数据。</span><br></pre></td></tr></table></figure><h3 id="Grafana-Zabbix-API-Error"><a href="#Grafana-Zabbix-API-Error" class="headerlink" title="Grafana Zabbix API Error"></a>Grafana Zabbix API Error</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果在 Grafana Dashboard 看到 Zabbix API Error 建议查看 Zabbix front 如 Apache 或者 Nginx 的错误日志定位问题</span></span><br><span class="line">tail -f /var/<span class="built_in">log</span>/httpd/error_log</span><br><span class="line"></span><br><span class="line">PHP Fatal error:  Allowed memory size of 134217728 bytes exhausted (tried to allocate 72 bytes) <span class="keyword">in</span> /usr/share/zabbix/include/func.inc.php on line 1423</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发现超过 php 的 memory_limit=128M</span></span><br><span class="line">vim /etc/php.ini</span><br><span class="line">vim /etc/httpd/conf.d/zabbix.conf</span><br><span class="line"></span><br><span class="line">memory_limit = 512M</span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加 info.php 查看变量是否生效</span></span><br><span class="line">vim /usr/share/zabbix/info.php</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">  phpinfo();</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">http://&lt;your-zabbix-server/info.php</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启 httpd 生效</span></span><br><span class="line">service httpd restart</span><br></pre></td></tr></table></figure><h2 id="InfluxDB"><a href="#InfluxDB" class="headerlink" title="InfluxDB"></a>InfluxDB</h2><p>InfluxDB 里存储的数据被称为时间序列数据, InfluxDB 存储方式跟传统关系型数据库不同的是：传统关系型数据库通过数据库 + 表 + 字段组织数据，InfluxDB 通过指标、标签、字段组织数据，时间戳是默认的索引列，标签跟字段其实就相当于关系型数据库中的字段，只不过标签会被索引，而字段不会。</p><p>Grafana 默认支持的数据源：Graphite，InfluxDB，OpenTSDB，Prometheus，Elasticsearch，CloudWatch<br>Grafana 支持同时绑定多套数据源，根据自己需求管理即可，这里以 InfluxDB 为例。</p><p><a href="https://portal.influxdata.com/downloads" target="_blank" rel="noopener">https://portal.influxdata.com/downloads</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install influxdb</span></span><br><span class="line">cat &gt; /etc/yum.repos.d/influxdb.repo &lt;&lt; <span class="string">'EOF'</span></span><br><span class="line">[influxdb]</span><br><span class="line">name = InfluxDB Repository - RHEL \<span class="variable">$releasever</span></span><br><span class="line">baseurl = https://repos.influxdata.com/rhel/\<span class="variable">$releasever</span>/\<span class="variable">$basearch</span>/stable</span><br><span class="line">enabled = 1</span><br><span class="line">gpgcheck = 1</span><br><span class="line">gpgkey = https://repos.influxdata.com/influxdb.key</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># yum install influxdb</span></span><br><span class="line">yum install -y influxdb</span><br><span class="line"></span><br><span class="line"><span class="comment"># start and enable influxdb</span></span><br><span class="line">sudo systemctl start influxdb</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> influxdb</span><br><span class="line">sudo systemctl status influxdb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过 influx 命令进入 cli 命令行</span></span><br><span class="line">influx</span><br><span class="line">Connected to http://localhost:8086 version 1.4.2</span><br><span class="line">InfluxDB shell version: 1.4.2</span><br><span class="line">&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看用户</span></span><br><span class="line">SHOW USERS</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建用户</span></span><br><span class="line">CREATE USER influx WITH PASSWORD <span class="string">'influx'</span> WITH ALL PRIVILEGES</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看用户</span></span><br><span class="line">SHOW USERS</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建数据库</span></span><br><span class="line">CREATE DATABASE <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看数据库</span></span><br><span class="line">SHOW DATABASES</span><br><span class="line"></span><br><span class="line"><span class="comment"># Using 数据库</span></span><br><span class="line">USE <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 插入数据</span></span><br><span class="line">INSERT cpu,host=192.168.1.1 load=0.1,usage=0.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询所有数据</span></span><br><span class="line">SELECT * FROM <span class="string">"cpu"</span></span><br><span class="line">SELECT <span class="string">"host"</span>,<span class="string">"load"</span>,<span class="string">"usage"</span> FROM <span class="string">"cpu"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据条件查询</span></span><br><span class="line">SELECT <span class="string">"host"</span>,<span class="string">"load"</span>,<span class="string">"usage"</span> FROM <span class="string">"cpu"</span> WHERE <span class="string">"host"</span> = <span class="string">'192.168.1.1'</span></span><br><span class="line">SELECT <span class="string">"host"</span>,<span class="string">"load"</span>,<span class="string">"usage"</span> FROM <span class="string">"cpu"</span> WHERE <span class="string">"usage"</span> &gt; 0.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建数据库</span></span><br><span class="line">CREATE DATABASE <span class="string">"db_name"</span></span><br><span class="line"><span class="comment"># 显示所有数据库</span></span><br><span class="line">SHOW DATABASES</span><br><span class="line"><span class="comment"># 删除数据库</span></span><br><span class="line">DROP DATABASE <span class="string">"db_name"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用数据库</span></span><br><span class="line">USE mydb</span><br><span class="line"><span class="comment"># 显示该数据库中的表</span></span><br><span class="line">SHOW MEASUREMENTS</span><br><span class="line"><span class="comment"># 删除表</span></span><br><span class="line">DROP MEASUREMENT <span class="string">"t_name"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建数据库 API</span></span><br><span class="line">curl -i -XPOST http://localhost:8086/query --data-urlencode <span class="string">"q=CREATE DATABASE test"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入数据 API</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入单条</span></span><br><span class="line">curl -i -XPOST http://localhost:8086/write?db=<span class="built_in">test</span> --data-binary <span class="string">"cpu,host=192.168.1.3 load=0.1,usage=0.33"</span></span><br><span class="line">curl -i -XPOST http://localhost:8086/write?db=<span class="built_in">test</span> --data-binary <span class="string">"cpu,host=192.168.1.3 load=0.1,usage=0.33 6666666666666666666"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入多条</span></span><br><span class="line">curl -i -XPOST http://localhost:8086/write?db=<span class="built_in">test</span> --data-binary <span class="string">"cpu,host=192.168.1.2 load=0.1,usage=0.22 1666666666666666661 </span></span><br><span class="line"><span class="string">cpu,host=192.168.1.3 load=0.1,usage=0.33 1666666666666666661 </span></span><br><span class="line"><span class="string">cpu,host=192.168.1.2 load=0.2,usage=0.22 1666666666666666662 </span></span><br><span class="line"><span class="string">cpu,host=192.168.1.3 load=0.2,usage=0.33 1666666666666666662"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询数据 API</span></span><br><span class="line">curl -G http://localhost:8086/query?db=<span class="built_in">test</span> --data-urlencode <span class="string">"q=SELECT * FROM  \"cpu\""</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      The open platform for beautiful analytics and monitoring
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>使用 parted 解决大于 2T 的磁盘分区</title>
    <link href="https://wsgzao.github.io/post/parted/"/>
    <id>https://wsgzao.github.io/post/parted/</id>
    <published>2019-01-24T06:59:49.000Z</published>
    <updated>2019-01-25T02:37:57.556Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在 Linux 中，为磁盘分区通常使用 fdisk 和 parted 命令。通常情况下，使用 fdisk 可以满足日常的使用，但是它仅仅支持 2 TB 以下磁盘的分区，超出 2 TB 部分无法识别。而随着科技的进步，大容量硬盘已经步入我们的生活，10 TB 的 HDD 和 30 TB 的 SSD 也已面世，无论是家用还是商用领域 SSD 的容量和价格都更加充满吸引力。仅仅能识别 2 TB 的 fdisk 很明显无法满足需求了，于是乎 parted &amp; GPT 磁盘成为了绝佳的搭配。本文主要介绍使用 parted 为 MBR 以及 GPT 磁盘分区的方法，也算是作为备忘。</p><blockquote><p>使用 parted 解决大于 2T 的磁盘分区</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 01 月 24 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/parted/">https://wsgzao.github.io/post/parted/</a></p><p><strong> 扩展阅读 </strong></p><p>Parted - <a href="https://www.gnu.org/software/parted/manual/" target="_blank" rel="noopener">https://www.gnu.org/software/parted/manual/</a></p><hr><h2 id="磁盘分区信息存储的两种形式"><a href="#磁盘分区信息存储的两种形式" class="headerlink" title="磁盘分区信息存储的两种形式"></a>磁盘分区信息存储的两种形式</h2><p>常见磁盘分区存储形式类型有两种：MBR(MSDOS) 和 GPT</p><h3 id="什么是-MBR"><a href="#什么是-MBR" class="headerlink" title="什么是 MBR"></a>什么是 MBR</h3><p>MBR(Master Boot Record，主引导记录）。<br>MBR 是存在于驱动器最开始部分的一个特殊的启动扇区，一般叫它 0 扇区。它由 446B 的启动加载器（Windows 和 Linux 的不同），64B 的分区表，和 2B 用来存放区域的有效性标识 55AA，共 512B。</p><blockquote><p>MBR 分区最大只支持 2T</p></blockquote><p>分区表每 16B 标识一个分区，包括分区的活动状态标志、文件系统标识、起止柱面号、磁头号、扇区号、隐含扇区数目 (4 个字节)、分区总扇区数目(4 个字节) 等信息。<br>分区总扇区数目决定了这一分区的大小，一个扇区一般 512B，所以 4 个字节，32 位所能表示的最大扇区数为 2 的 32 次方，也就决定了一个分区的大小最大为 2T（ 2*<em>32 </em> 512 / 1024 / 1024 / 1024 /1024）。</p><blockquote><p>MBR 只支持最多 4 个主分区</p></blockquote><p>16B 标识一个分区，64B 就一共只能有 4 个分区，所以主分区最多只能有 4 个。一块磁盘如果要分多于 4 个分区，必须要分一个扩展分区，然后在扩展分区中再去划分逻辑分区。</p><h3 id="什么是-GPT"><a href="#什么是-GPT" class="headerlink" title="什么是 GPT"></a>什么是 GPT</h3><p>GPT(GUID Partition Table)，这是最近几年逐渐流行起来的一种分区形式，如果要将使用 GPT 分区格式的磁盘作为系统盘，需要 UEFI BIOS 的支持，它才可以引导系统启动。UEFI 一种称为 Unified Extensible Firmware Interface(统一的可扩展的固件接口，它最终是为了取代 BIOS，目前市面上的 BIOS 大多已支持 UEFI。GPT 也是为了最终取代 MBR 的。<br>GPT 相比 MBR 的优点：</p><ul><li>分区容量可以大于 2T</li><li>可以支持无限个主分区</li><li>更为健壮。MBR 中分区信息和启动信息保存在一起而且只有一份，GPT 在整个磁盘上保存多份这个信息，并为它们提供 CRC 检验，当有数据损坏时，它能够进行恢复。</li></ul><h2 id="小于-2T-的分区的管理"><a href="#小于-2T-的分区的管理" class="headerlink" title="小于 2T 的分区的管理"></a>小于 2T 的分区的管理</h2><p>因为传统的 MBR 分区，支持的最大分区为 2T，也可以一定程度上等同于磁盘大小，必定 2T 以上的硬盘不是非常普及。在 CentOS 中可以使用 fdisk 指令进行管理。详细过程不在赘述。</p><p>LVM 逻辑卷管理配置小结 - <a href="https://wsgzao.github.io/post/lvm/">https://wsgzao.github.io/post/lvm/</a></p><h2 id="超过-2T-的分区的管理"><a href="#超过-2T-的分区的管理" class="headerlink" title="超过 2T 的分区的管理"></a>超过 2T 的分区的管理</h2><p>当 CentOS 中识别到有磁盘容量超过 2T 时，如果试图使用 fdisk 指令对其分区会有相应的警告提示，大致如下：</p><pre><code>WARNING: GPT (GUID Partition Table) detected on &apos;/dev/sdb&apos;! The util fdisk doesn&apos;t support GPT. Use GNU Parted.</code></pre><p>明确提示需要使用 parted 进行管理，如果系统中没有这一指令，使用 <code>yum install -y parted</code> 进行安装即可。</p><p>查看磁盘的分区情况 <code>parted -l</code> 会打印出系统识别到的所有磁盘的分区情况</p><p>指定分区类型 <code>parted /dev/sdb</code> 先进入那块超过 2T 的磁盘的管理界面中。<br><code>mklabel gpt</code> parted 指令支持的分区类型选项：{aix|amiga|bsd|dvh|gpt|loop|mac|msdos|pc98|sun}，这里需要选择 gpt，msdos 即为传统的 MBR 分区方式。</p><p>创建分区<br><code>mkpart {primary|extended|logical| [fs-type] start end</code> GPT 分区没有主分区数的限制，这里一般选择 primary 这一类型。GPT 支持的 fs-type 没有 fdisk 那么多，它支持的有：ext2、ext3、ext4、fat16、fat32、NTFSReiserFS、JFS、XFS、UFS、HFS、swap 这些文件系统格式。</p><h2 id="使用-parted"><a href="#使用-parted" class="headerlink" title="使用 parted"></a>使用 parted</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 lsblk,fdisk,df 等命令查看当前分区信息 </span></span><br><span class="line">lsblk</span><br><span class="line">fdisk -l</span><br><span class="line">df -TH</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 /dev/sdb1 为例</span></span><br><span class="line">parted /dev/sdb1</span><br><span class="line">parted (GNU parted) 3.1</span><br><span class="line">Welcome to GNU Parted! Type <span class="string">'help'</span> to view a list of commands.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 help 查看帮助</span></span><br><span class="line">(parted) <span class="built_in">help</span></span><br><span class="line">  check NUMBER                             <span class="keyword">do</span> a simple check on the file system</span><br><span class="line">  cp [FROM-DEVICE] FROM-NUMBER TO-NUMBER   copy file system to another partition</span><br><span class="line">  <span class="built_in">help</span> [COMMAND]                           prints general <span class="built_in">help</span>, or <span class="built_in">help</span> on COMMAND</span><br><span class="line">  mklabel,mktable LABEL-TYPE               create a new disklabel (partition table)</span><br><span class="line">  mkfs NUMBER FS-TYPE                      make a FS-TYPE file system on partititon NUMBER</span><br><span class="line">  mkpart PART-TYPE [FS-TYPE] START END     make a partition</span><br><span class="line">  mkpartfs PART-TYPE FS-TYPE START END     make a partition with a file system</span><br><span class="line">  move NUMBER START END                    move partition NUMBER</span><br><span class="line">  name NUMBER NAME                         name partition NUMBER as NAME</span><br><span class="line">  <span class="built_in">print</span> [free|NUMBER|all]                  display the partition table, a partition, or all devices</span><br><span class="line">  quit                                     <span class="built_in">exit</span> program</span><br><span class="line">  rescue START END                         rescue a lost partition near START and END</span><br><span class="line">  resize NUMBER START END                  resize partition NUMBER and its file system</span><br><span class="line">  rm NUMBER                                delete partition NUMBER</span><br><span class="line">  select DEVICE                            choose the device to edit</span><br><span class="line">  <span class="built_in">set</span> NUMBER FLAG STATE                    change the FLAG on partition NUMBER</span><br><span class="line">  toggle [NUMBER [FLAG]]                   toggle the state of FLAG on partition NUMBER</span><br><span class="line">  unit UNIT                                <span class="built_in">set</span> the default unit to UNIT</span><br><span class="line">  version                                  displays the current version of GNU Parted and copyright information</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立磁盘标签</span></span><br><span class="line">(parted) mklabel GPT</span><br><span class="line"><span class="comment"># 如果没有任何分区，它查看磁盘可用空间，当分区后，它会打印出分区情况</span></span><br><span class="line">(parted) <span class="built_in">print</span></span><br><span class="line"><span class="comment"># 创建主分区，n 为要分的分区占整个磁盘的百分比</span></span><br><span class="line">(parted) mkpart primary 0% 100%</span><br><span class="line"><span class="comment">#  分区完后，直接 quit 即可，不像 fdisk 分区的时候，还需要保存一下，这个不用</span></span><br><span class="line">(parted) quit</span><br><span class="line"></span><br><span class="line"><span class="comment"># 让内核知道添加新分区</span></span><br><span class="line">partprobe</span><br><span class="line"></span><br><span class="line"><span class="comment"># 格式化</span></span><br><span class="line">mkfs.ext4 /dev/sdb1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂载分区</span></span><br><span class="line">mkdir /data</span><br><span class="line">mount /dev/sdb1 /data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置开机自动挂载磁盘</span></span><br><span class="line">vim /etc/fstab</span><br><span class="line">/dev/sdb1    /data    ext4    defaults    0    0</span><br><span class="line"></span><br><span class="line"><span class="comment"># fdisk 命令无法使用可以用 parted</span></span><br><span class="line">fdisk -l</span><br><span class="line">parted -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># parted 有 2 种模式，使用命令行模式方便自动化</span></span><br><span class="line"> 命令行模式: parted [option] device [<span class="built_in">command</span>]</span><br><span class="line">交互模式: parted [option] device</span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p>怎样用 parted 管理硬盘分区 - <a href="https://linux.cn/article-9536-1.html" target="_blank" rel="noopener">https://linux.cn/article-9536-1.html</a></p><p>初始化 Linux 数据盘（parted） - <a href="https://support.huaweicloud.com/qs-ecs/zh-cn_topic_0085634798.html" target="_blank" rel="noopener">https://support.huaweicloud.com/qs-ecs/zh-cn_topic_0085634798.html</a></p><p>Partitioning Disks with parted - <a href="https://access.redhat.com/sites/default/files/attachments/parted_0.pdf" target="_blank" rel="noopener">https://access.redhat.com/sites/default/files/attachments/parted_0.pdf</a></p>]]></content>
    
    <summary type="html">
    
      使用parted解决大于2T的磁盘分区
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>如何使用 MTR 诊断网络问题</title>
    <link href="https://wsgzao.github.io/post/mtr/"/>
    <id>https://wsgzao.github.io/post/mtr/</id>
    <published>2019-01-22T06:59:49.000Z</published>
    <updated>2019-01-23T09:18:36.164Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>MTR 是一款强大的网络诊断工具，网络管理员使用 MTR 可以诊断和隔离网络问题，并且为上游 ISP 提供有用的网络状态报告。MTR 是传统 traceroute 命令的进化版，并且可以提供强大的数据样本，因为他集合了 traceroute 和 ping 这两个命令的精华。本文带您深入了解 MTR ，从数据如何生成，到如果正确理解报告样本并得出相应的结论。</p><blockquote><p>使用 MTR 诊断网络问题</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 01 月 22 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/mtr/">https://wsgzao.github.io/post/mtr/</a></p><p><strong> 扩展阅读 </strong></p><p>MTR - <a href="http://www.bitwizard.nl/mtr/" target="_blank" rel="noopener">http://www.bitwizard.nl/mtr/</a><br>Diagnosing Network Issues with MTR - <a href="https://www.linode.com/docs/networking/diagnostics/diagnosing-network-issues-with-mtr/" target="_blank" rel="noopener">https://www.linode.com/docs/networking/diagnostics/diagnosing-network-issues-with-mtr/</a></p><hr><h2 id="网络诊断相关的背景知识"><a href="#网络诊断相关的背景知识" class="headerlink" title="网络诊断相关的背景知识"></a>网络诊断相关的背景知识</h2><p>Networking diagnostic tools including ping, traceroute, and mtr use Internet Control Message Protocol (ICMP) packets to test contention and traffic between two points on the Internet. When a user pings a host on the Internet, a series of ICMP packets are sent to the host, which responds by sending packets in return. The user’s client is then able to compute the round trip time between two points on the Internet.</p><p>In contrast, tools such as traceroute and MTR send ICMP packets with incrementally increasing TTLs in order to view the route or series of hops that the packet makes between the origin and its destination. The TTL, or time to live, controls how many hops a packet will make before “dying” and returning to the host. By sending a series of packets and causing them to return after one hop, then two, then three, MTR is able to assemble the route that traffic takes between hosts on the Internet.</p><p>Rather than provide a simple outline of the route that traffic takes across the Internet, MTR collects additional information regarding the state, connection, and responsiveness of the intermediate hosts. Because of this additional information, MTR can provide a complete overview of the connection between two hosts on the Internet. The following sections outline how to install the MTR software and how to interpret the results provided by this tool.</p><p>网络诊断工具 例如 ping traceroute mtr 都使用的 “ICMP” 包来测试 Internet 两点之间的网络连接状况。当用户使用 ping 命令 ping 网络上的主机后， ICMP 包将会发送到目的主机，然后在目的主机返回响应。这样，就可以得知本机到目的主机 ICMP 包传输所使用的往返时间。</p><p>相对于其他命令仅仅收集传输路径或响应时间，MTR 工具会收集更多的信息，比如 连接状态，连接可用性，以及传输路径中主机的响应性。由于这些额外的信息，我们建议您尽可能完整的展现 Internet 两个主机之间的网络连接信息。接下来我们讲述如何安装 MTR 软件，以及如何看懂这款软件的输出结果。</p><p>Diagnostics and Testing - <a href="https://www.linode.com/docs/networking/diagnostics/" target="_blank" rel="noopener">https://www.linode.com/docs/networking/diagnostics/</a></p><h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h2><p>ICMP(Internet Control Message Protocol)<br>IP 协议族的一员，主要用于网络设备间发送错误指示信息, 一般不用于传输数据，常见部署在用户端网络程序中，诸如 traceroute 或 ping 等程序</p><p>TTL(Time To Live)<br>此处的 Time 表示的是次数，而不是时间，表达的是一个包在结束之前还能经过的跳数</p><p>Hop<br>跳数: 网络中两个端路径上的节点，路由器的数目</p><p>ISP(Internet Service Provider)<br>互联网服务提供商</p><h2 id="ping"><a href="#ping" class="headerlink" title="ping"></a>ping</h2><p>ping send ICMP ECHO_REQUEST to network hosts</p><p>ICMP 是（Internet Control Message Protocol）Internet 控制报文协议。它是 TCP/IP 协议族的一个子协议，用于在 IP 主机、路由器之间传递控制消息。控制消息是指网络通不通、主机是否可达、路由是否可用等网络本身的消息。这些控制消息虽然并不传输用户数据，但是对于用户数据的传递起着重要的作用。</p><p>使用 ping 检查连通性有六个步骤：</p><ol><li>使用 ifconfig 观察本地网络设置是否正确；</li><li>ping 127.0.0.1，127.0.0.1 回送地址 Ping 回送地址是为了检查本地的 TCP/IP 协议有没有设置好；</li><li>ping 本机 IP 地址，这样是为了检查本机的 IP 地址是否设置有误；</li><li>ping 本网网关或本网 IP 地址，这样的是为了检查硬件设备是否有问题，也可以检查本机与本地网络连接是否正常；(在非局域网中这一步骤可以忽略)</li><li>ping 本地 DNS 地址，这样做是为了检查 DNS 是否能够将 IP 正确解析。注: /etc/resolv.conf 文件，”nameserver 8.8.8.8” 指定了 dns 服务器的地址，如果启用了 NetworkManager 要注意网卡重启或服务器重启配置被覆盖的问题；</li><li>ping 远程 IP 地址，这主要是检查本网或本机与外部的连接是否正常。</li></ol><h2 id="安装-MTR"><a href="#安装-MTR" class="headerlink" title="安装 MTR"></a>安装 MTR</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">yum install mtr</span><br><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">apt-get install mtr</span><br><span class="line"><span class="comment"># macOS</span></span><br><span class="line">brew install mtr</span><br><span class="line"><span class="comment"># Windows</span></span><br><span class="line">BestTrace - https://www.ipip.net/product/client.html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line"> mtr [options] hostname</span><br><span class="line"></span><br><span class="line"> -F, --filename FILE        <span class="built_in">read</span> hostname(s) from a file</span><br><span class="line"> -4                         use IPv4 only</span><br><span class="line"> -6                         use IPv6 only</span><br><span class="line"> -u, --udp                  use UDP instead of ICMP <span class="built_in">echo</span></span><br><span class="line"> -T, --tcp                  use TCP instead of ICMP <span class="built_in">echo</span></span><br><span class="line"> -a, --address ADDRESS      <span class="built_in">bind</span> the outgoing socket to ADDRESS</span><br><span class="line"> -f, --first-ttl NUMBER     <span class="built_in">set</span> what TTL to start</span><br><span class="line"> -m, --max-ttl NUMBER       maximum number of hops</span><br><span class="line"> -U, --max-unknown NUMBER   maximum unknown host</span><br><span class="line"> -P, --port PORT            target port number <span class="keyword">for</span> TCP, SCTP, or UDP</span><br><span class="line"> -L, --localport LOCALPORT  <span class="built_in">source</span> port number <span class="keyword">for</span> UDP</span><br><span class="line"> -s, --psize PACKETSIZE     <span class="built_in">set</span> the packet size used <span class="keyword">for</span> probing</span><br><span class="line"> -B, --bitpattern NUMBER    <span class="built_in">set</span> bit pattern to use <span class="keyword">in</span> payload</span><br><span class="line"> -i, --interval SECONDS     ICMP <span class="built_in">echo</span> request interval</span><br><span class="line"> -G, --gracetime SECONDS    number of seconds to <span class="built_in">wait</span> <span class="keyword">for</span> responses</span><br><span class="line"> -Q, --tos NUMBER           <span class="built_in">type</span> of service field <span class="keyword">in</span> IP header</span><br><span class="line"> -e, --mpls                 display information from ICMP extensions</span><br><span class="line"> -Z, --timeout SECONDS      seconds to keep probe sockets open</span><br><span class="line"> -r, --report               output using report mode</span><br><span class="line"> -w, --report-wide          output wide report</span><br><span class="line"> -c, --report-cycles COUNT  <span class="built_in">set</span> the number of pings sent</span><br><span class="line"> -j, --json                 output json</span><br><span class="line"> -x, --xml                  output xml</span><br><span class="line"> -C, --csv                  output comma separated values</span><br><span class="line"> -l, --raw                  output raw format</span><br><span class="line"> -p, --split                split output</span><br><span class="line"> -t, --curses               use curses terminal interface</span><br><span class="line">     --displaymode MODE     select initial display mode</span><br><span class="line"> -n, --no-dns               <span class="keyword">do</span> not resove host names</span><br><span class="line"> -b, --show-ips             show IP numbers and host names</span><br><span class="line"> -o, --order FIELDS         select output fields</span><br><span class="line"> -y, --ipinfo NUMBER        select IP information <span class="keyword">in</span> output</span><br><span class="line"> -z, --aslookup             display AS number</span><br><span class="line"> -h, --<span class="built_in">help</span>                 display this <span class="built_in">help</span> and <span class="built_in">exit</span></span><br><span class="line"> -v, --version              output version information and <span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h2 id="如何读懂-MTR-报告"><a href="#如何读懂-MTR-报告" class="headerlink" title="如何读懂 MTR 报告"></a>如何读懂 MTR 报告</h2><p>因为 MTR 报告包括了丰富的信息，新手第一次阅读有点困难。下面是我本地到 google.com 的测试报告</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@sg-gop-10-65-200-186 wangao]<span class="comment"># mtr -r google.com</span></span><br><span class="line">Start: Wed Jan 23 16:00:30 2019</span><br><span class="line">HOST: sg-gop-10-65-200-186        Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1.|-- 10.65.200.20               0.0%    10    0.3   0.3   0.3   0.5   0.0</span><br><span class="line">  2.|-- ns9.webhostsg.com          0.0%    10    1.0   0.9   0.9   1.0   0.0</span><br><span class="line">  3.|-- 192.168.3.33               0.0%    10    0.9   0.9   0.8   0.9   0.0</span><br><span class="line">  4.|-- vlan242-s4rsm.starhub.net  0.0%    10    1.6   1.8   1.6   1.9   0.0</span><br><span class="line">  5.|-- ancoretl02.starhub.net.sg  0.0%    10    2.0   2.0   1.9   2.1   0.0</span><br><span class="line">  6.|-- anutli12.starhub.net.sg    0.0%    10    1.9   2.1   1.9   3.1   0.3</span><br><span class="line">  7.|-- 72.14.194.0                0.0%    10    2.5   2.7   2.4   4.3   0.5</span><br><span class="line">  8.|-- 74.125.242.35              0.0%    10    2.5   2.5   2.4   2.7   0.0</span><br><span class="line">  9.|-- 216.239.49.74              0.0%    10    3.4   4.4   3.3  12.0   2.6</span><br><span class="line"> 10.|-- 74.125.252.254             0.0%    10    3.7   3.7   3.5   3.9   0.0</span><br><span class="line"> 11.|-- 108.170.233.49             0.0%    10    4.4   4.2   4.0   4.7   0.0</span><br><span class="line"> 12.|-- ???                       100.0    10    0.0   0.0   0.0   0.0   0.0</span><br></pre></td></tr></table></figure><p>返回结果各列数据说明：</p><p>第一列: 显示的是 IP 地址或本机域名，这点和 traceroute 很像</p><p>第二列: Loss% 到达此节点的数据包丢包率，显示的每个对应 IP 的丢包率。</p><p>第三列: Snt:100 设置发送数据包的数量，默认值是 10 通过参数 -c 来自定义数量。</p><p>第四列: Last 显示的最近一次的返回时延</p><p>第五列: Avg 平均值这个应该是发送 ping 包的平均时延</p><p>第六列: Best 最好或者说时延最低的</p><p>第七列: Wrst 最差或者说时延最大的</p><p>第八列: StDev 是标准偏差</p><p>使用 mtr –report google.com 命令来输出这篇报告。使用 report 选项可以给 google.com 主机发送 10 个 ICMP 包，然后输出报告。如果我们不使用 –report 参数， mtr 会不断的动态运行。在动态模式下， mtr 的输出结果表述每个主机的往返时间。大多数情况下，使用 –report 参数就可以提供足够的数据了。</p><p>在命令下面，就是 MTR 产生的输出报告 。在通常情况下， MTR 需要几秒钟的时间来输出报告，但是偶尔可能需要更长的时间。MTR 报告是由一系列跳数组成的（在上述例子中是 12 跳）。“跳” 意味着节点，或路由器，数据包通过它们才能到达目的主机。在上面例子中，数据包经过本地网络的 “内层” 和 “外层”，然后再到一系列的域名主机。主机的域名是通过反向 DNS 查找确定的。如果您想忽略 DNS 查找，您可以使用 –no-dns 参数，使用 –no-dns 参数后，报告结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@sg-gop-10-65-200-186 wangao]<span class="comment"># mtr -rn google.com</span></span><br><span class="line">Start: Wed Jan 23 16:01:02 2019</span><br><span class="line">HOST: sg-gop-10-65-200-186        Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1.|-- 10.65.200.20               0.0%    10    0.2   0.3   0.2   0.3   0.0</span><br><span class="line">  2.|-- 203.117.178.28             0.0%    10    0.8   0.9   0.8   1.1   0.0</span><br><span class="line">  3.|-- 192.168.3.33               0.0%    10    0.8   0.8   0.7   0.9   0.0</span><br><span class="line">  4.|-- 203.117.6.21               0.0%    10    1.8   1.8   1.6   1.9   0.0</span><br><span class="line">  5.|-- 203.118.15.177             0.0%    10    1.8   1.9   1.8   2.1   0.0</span><br><span class="line">  6.|-- 203.118.12.10              0.0%    10    1.9   1.9   1.8   2.1   0.0</span><br><span class="line">  7.|-- 72.14.194.0                0.0%    10    2.4   2.5   2.4   2.7   0.0</span><br><span class="line">  8.|-- 74.125.242.35              0.0%    10    2.6   4.7   2.5  12.6   3.8</span><br><span class="line">  9.|-- 216.239.49.74              0.0%    10    3.5   3.5   3.3   4.0   0.0</span><br><span class="line"> 10.|-- 74.125.252.254             0.0%    10    3.7   4.1   3.7   6.6   0.8</span><br><span class="line"> 11.|-- 108.170.233.49             0.0%    10    4.3   4.4   4.2   4.7   0.0</span><br><span class="line"> 12.|-- ???                       100.0    10    0.0   0.0   0.0   0.0   0.0</span><br></pre></td></tr></table></figure><p>当我们研究 MTR 报告时候，最好找出每一跳的任何问题。除了可以查看两个服务器之间的路径之外，MTR 在它的七列数据中提供了很多有价值的数据统计报告。 Loss% 列展示了数据包在每一跳的丢失率。 Snt 列记录的多少个数据包被送出。 使用 –report 参数默认会送出 10 个数据包。如果使用 –report-cycles=[number-of-packets] 选项，MTR 就会按照 [number-of-packets] 指定的数量发出 ICMP 数据包。</p><p>Last, Avg, Best 和 Wrst 列都标识数据包往返的时间，使用的是毫秒（ ms ）单位表示。 Last 表示最后一个数据包所用的时间， Avg 表示评价时间， Best 和 Wrst 表示最小和最大时间。在大多数情况下，平均时间（ Avg）列需要我们特别注意。</p><p>最后一列 StDev 提供了数据包在每个主机的标准偏差。如果标准偏差越高，说明数据包在这个节点的延时越不相同。标准偏差会让您了解到平均延时是否是真的延时时间的中心点，或者测量数据受到某些问题的干扰。</p><p>例如，如果标准偏差很大，说明数据包的延迟是不确定的。一些数据包延迟很小（例如：25ms），另一些数据包延迟很大（例如：350ms）。当 10 个数据包全部发出后，得到的平均延迟可能是正常的，但是平均延迟是不能很好的反应实际情况的。如果标准偏差很高，使用最好和最坏的延迟来确定平均延迟是一个较好的方案。</p><p>在大多数情况下，您可以把 MTR 的输出分成三大块。根据配置，第二或第三跳一般都是您的本地 ISP，倒数第二或第三跳一般为您目的主机的 ISP。中间的节点是数据包经过的路由器。</p><h2 id="分析-MTR-报告"><a href="#分析-MTR-报告" class="headerlink" title="分析 MTR 报告"></a>分析 MTR 报告</h2><p>核心的两个参数:</p><ul><li>loss 丢包率</li><li>latency 延迟</li></ul><h3 id="确定丢包率"><a href="#确定丢包率" class="headerlink" title="确定丢包率"></a>确定丢包率</h3><p>当分析 MTR 的输出时，您需要注意两点： loss 和 latency。首先，让我们讨论一下 loss。如果您在任何一跳上看到 loss 的百分比，这就说明这一跳上可能有问题了。当然，很多服务提供商人为限制 ICMP 发送的速率，这也会导致此问题。那么如何才能指定是人为的限制 ICMP 传输还是确定有丢包的现象？我们需要查看下一跳。如果下一跳没有丢包现象，说明上一条是人为限制的。如下示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:~<span class="comment"># mtr --report www.google.com</span></span><br><span class="line">HOST: example               Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">1. 63.247.74.43                  0.0%    10    0.3   0.6   0.3   1.2   0.3</span><br><span class="line">2. 63.247.64.157                50.0%    10    0.4   1.0   0.4   6.1   1.8</span><br><span class="line">3. 209.51.130.213                0.0%    10    0.8   2.7   0.8  19.0   5.7</span><br><span class="line">4. aix.pr1.atl.google.com        0.0%    10    6.7   6.8   6.7   6.9   0.1</span><br><span class="line">5. 72.14.233.56                  0.0%    10    7.2   8.3   7.1  16.4   2.9</span><br><span class="line">6. 209.85.254.247                0.0%    10   39.1  39.4  39.1  39.7   0.2</span><br><span class="line">7. 64.233.174.46                 0.0%    10   39.6  40.4  39.4  46.9   2.3</span><br><span class="line">8. gw-in-f147.1e100.net          0.0%    10   39.6  40.5  39.5  46.7   2.2</span><br></pre></td></tr></table></figure><p>在此例中，第二跳发生了丢包现象，但是接下来几条都没任何丢包现象，说明第二跳的丢包是人为限制的。如果在接下来的几条中都有丢包，那就可能是第二跳有问题了。请记住，ICMP 包的速率限制和丢失可能会同时发生。如果发生包的丢失情况，我们要用最低百分比来衡量时间情况。为什么这么说呢？请看如下示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:~<span class="comment"># mtr --report www.google.com</span></span><br><span class="line">HOST: localhost                   Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">1. 63.247.74.43                   0.0%    10    0.3   0.6   0.3   1.2   0.3</span><br><span class="line">2. 63.247.64.157                  0.0%    10    0.4   1.0   0.4   6.1   1.8</span><br><span class="line">3. 209.51.130.213                60.0%    10    0.8   2.7   0.8  19.0   5.7</span><br><span class="line">4. aix.pr1.atl.google.com        60.0%    10    6.7   6.8   6.7   6.9   0.1</span><br><span class="line">5. 72.14.233.56                  50.0%   10    7.2   8.3   7.1  16.4   2.9</span><br><span class="line">6. 209.85.254.247                40.0%   10   39.1  39.4  39.1  39.7   0.2</span><br><span class="line">7. 64.233.174.46                 40.0%   10   39.6  40.4  39.4  46.9   2.3</span><br><span class="line">8. gw-in-f147.1e100.net          40.0%   10   39.6  40.5  39.5  46.7   2.2</span><br></pre></td></tr></table></figure><p>在这个例子中，您可以看打 第 3 跳和第 4 跳都有 60% 的丢包率，从接下来的几跳都有丢包现象，所以不像是人为限制 ICMP 速率的原因。但是最后几跳都是 40% 的丢包率，我们可以猜测到 60% 的丢包率除了网络糟糕的原因之前还有人为限制 ICMP。所以，当我们看到不同的丢包率时，通常要以最后几跳为准。</p><p>还有很多时候问题是在数据包返回途中发生的。数据包可以成功的到达目的主机，但是返回过程中遇到 “困难” 了。所以，当问题发生后，我们通常需要收集反方向的 MTR 报告。</p><p>此外，互联网设施的维护或短暂的网络拥挤可能会带来短暂的丢包率，当出现短暂的 10% 丢包率时候，不必担心，应用层的程序会弥补这点损失。</p><h3 id="读懂网络延迟"><a href="#读懂网络延迟" class="headerlink" title="读懂网络延迟"></a>读懂网络延迟</h3><p>除了可以通过 MTR 报告看到丢包率，我们还可以看到本地到目的主机之间的延时。因为不同的物理位置，延迟通常随着跳数的增加而增加。所以，延迟通常取决于节点之间的物理距离和线路质量。</p><p>例如，在同样的传输距离下，dial-up 连接比 cable modem 连接有更大的延迟。如下示例中显示 MTR 报告：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:~<span class="comment"># mtr --report www.google.com</span></span><br><span class="line">HOST: localhost                   Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">1. 63.247.74.43                  0.0%    10    0.3   0.6   0.3   1.2   0.3</span><br><span class="line">2. 63.247.64.157                 0.0%    10    0.4   1.0   0.4   6.1   1.8</span><br><span class="line">3. 209.51.130.213                0.0%    10    0.8   2.7   0.8  19.0   5.7</span><br><span class="line">4. aix.pr1.atl.google.com        0.0%    10  388.0 360.4 342.1 396.7   0.2</span><br><span class="line">5. 72.14.233.56                  0.0%    10  390.6 360.4 342.1 396.7   0.2</span><br><span class="line">6. 209.85.254.247                0.0%    10  391.6 360.4 342.1 396.7   0.4</span><br><span class="line">7. 64.233.174.46                 0.0%    10  391.8 360.4 342.1 396.7   2.1</span><br><span class="line">8. gw-in-f147.1e100.net          0.0%    10  392.0 360.4 342.1 396.7   1.2</span><br></pre></td></tr></table></figure><p>在这份报告中，从第三跳到第四跳的延迟猛增，直接导致了后面的延迟也很大。这可能是因为第四跳的路由器配置不当，或者线路很拥堵的原因。</p><p>然而，高延迟并不一定意味着当前路由器有问题。这份报告虽然看到第四跳有点问题，但是数据仍然可以正常达到目的主机并且返回给主机。延迟很大的原因也有可能是在返回过程中引发的。我这份报告我们看不到返回的路径，返回的路径可能是完全不同的线路，所以我们一般要进行双向测试了。</p><p>ICMP 速率限制也可能会增加延迟，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:~<span class="comment"># mtr --report www.google.com</span></span><br><span class="line">HOST: localhost                   Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1. 63.247.74.43                  0.0%    10    0.3   0.6   0.3   1.2   0.3</span><br><span class="line">  2. 63.247.64.157                 0.0%    10    0.4   1.0   0.4   6.1   1.8</span><br><span class="line">  3. 209.51.130.213                0.0%    10    0.8   2.7   0.8  19.0   5.7</span><br><span class="line">  4. aix.pr1.atl.google.com        0.0%    10    6.7   6.8   6.7   6.9   0.1</span><br><span class="line">  5. 72.14.233.56                  0.0%    10  254.2 250.3 230.1 263.4   2.9</span><br><span class="line">  6. 209.85.254.247                0.0%    10   39.1  39.4  39.1  39.7   0.2</span><br><span class="line">  7. 64.233.174.46                 0.0%    10   39.6  40.4  39.4  46.9   2.3</span><br><span class="line">  8. gw-in-f147.1e100.net          0.0%    10   39.6  40.5  39.5  46.7   2.2</span><br></pre></td></tr></table></figure><p>乍一看，第 4 跳和第 5 跳直接的延迟很大。但是第 5 跳之后，延迟又恢复正常了。最后的延迟差不多为 40ms。像这种情况，是不影响实际情况的。因为可能仅仅是第 5 跳设备限制了 ICMP 传输速率的原因。所以我们一般要用最后一跳的实际延迟为准。</p><h2 id="常见的-MTR-报告类型"><a href="#常见的-MTR-报告类型" class="headerlink" title="常见的 MTR 报告类型"></a>常见的 MTR 报告类型</h2><p>很多网络问题十分麻烦，并且需要上级网络提供商来帮助。然而，这里有很多常见的 MTR 报告所描述的网络问题。如果您正在经历一些网络问题，并且想诊断出原因，可以参考如下示例：</p><h3 id="目的主机网络配置不当"><a href="#目的主机网络配置不当" class="headerlink" title="目的主机网络配置不当"></a>目的主机网络配置不当</h3><p>在下面这个例子中，数据包在目的地出现了 100% 的丢包。乍一看是数据包没有到达，其实未必，很有可能是路由器或主机配置不当。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@meiriyitie.com:~<span class="comment"># mtr --report www.google.com</span></span><br><span class="line">HOST: localhost                   Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1. 63.247.74.43                  0.0%    10    0.3   0.6   0.3   1.2   0.3</span><br><span class="line">  2. 63.247.64.157                 0.0%    10    0.4   1.0   0.4   6.1   1.8</span><br><span class="line">  3. 209.51.130.213                0.0%    10    0.8   2.7   0.8  19.0   5.7</span><br><span class="line">  4. aix.pr1.atl.google.com        0.0%    10    6.7   6.8   6.7   6.9   0.1</span><br><span class="line">  5. 72.14.233.56                  0.0%    10    7.2   8.3   7.1  16.4   2.9</span><br><span class="line">  6. 209.85.254.247                0.0%    10   39.1  39.4  39.1  39.7   0.2</span><br><span class="line">  7. 64.233.174.46                 0.0%    10   39.6  40.4  39.4  46.9   2.3</span><br><span class="line">  8. gw-in-f147.1e100.net         100.0    10    0.0   0.0   0.0   0.0   0.0</span><br></pre></td></tr></table></figure><p>MTR 报告数据包没有到达目的主机是因为目的主机没有发送任何应答。这可能是目的主机防火墙的原因，例如： iptables 配置丢掉 ICMP 包所致。</p><h3 id="家庭或办公室路由器的原因"><a href="#家庭或办公室路由器的原因" class="headerlink" title="家庭或办公室路由器的原因"></a>家庭或办公室路由器的原因</h3><p>有时候家庭路由器的原因导致 MTR 报告看起来有点误导。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">% mtr --no-dns --report google.com</span><br><span class="line">HOST: deleuze                     Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1. 192.168.1.1                   0.0%    10    2.2   2.2   2.0   2.7   0.2</span><br><span class="line">  2. ???                          100.0    10    8.6  11.0   8.4  17.8   3.0</span><br><span class="line">  3. 68.86.210.126                 0.0%    10    9.1  12.1   8.5  24.3   5.2</span><br><span class="line">  4. 68.86.208.22                  0.0%    10   12.2  15.1  11.7  23.4   4.4</span><br><span class="line">  5. 68.85.192.86                  0.0%    10   17.2  14.8  13.2  17.2   1.3</span><br><span class="line">  6. 68.86.90.25                   0.0%    10   14.2  16.4  14.2  20.3   1.9</span><br><span class="line">  7. 68.86.86.194                  0.0%    10   17.6  16.8  15.5  18.1   0.9</span><br><span class="line">  8. 75.149.230.194                0.0%    10   15.0  20.1  15.0  33.8   5.6</span><br><span class="line">  9. 72.14.238.232                 0.0%    10   15.6  18.7  14.1  32.8   5.9</span><br><span class="line"> 10. 209.85.241.148                0.0%    10   16.3  16.9  14.7  21.2   2.2</span><br><span class="line"> 11. 66.249.91.104                 0.0%    10   22.2  18.6  14.2  36.0   6.5</span><br></pre></td></tr></table></figure><p>不要为 100% 的丢包率所吓到，这并不表明这里有问题。你可以看打在接下来几跳是没有任何丢包的。</p><h3 id="运营商的路由器没有正确配置"><a href="#运营商的路由器没有正确配置" class="headerlink" title="运营商的路由器没有正确配置"></a>运营商的路由器没有正确配置</h3><p>有时候您的运营商的路由器配置原因，导致 ICMP 包永远不能到达目的地，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@meiriyitie.com:~<span class="comment"># mtr --report www.google.com</span></span><br><span class="line">HOST: localhost                   Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1. 63.247.74.43                  0.0%    10    0.3   0.6   0.3   1.2   0.3</span><br><span class="line">  2. 63.247.64.157                 0.0%    10    0.4   1.0   0.4   6.1   1.8</span><br><span class="line">  3. 209.51.130.213                0.0%    10    0.8   2.7   0.8  19.0   5.7</span><br><span class="line">  4. aix.pr1.atl.google.com        0.0%    10    6.7   6.8   6.7   6.9   0.1</span><br><span class="line">  5. ???                           0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line">  6. ???                           0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line">  7. ???                           0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line">  8. ???                           0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line">  9. ???                           0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line"> 10. ???                           0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br></pre></td></tr></table></figure><p>当没有额外的路由信息时，将会显示问号（???），下面例子也一样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@meiriyitie.com:~<span class="comment"># mtr --report www.google.com</span></span><br><span class="line">HOST: localhost                   Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">   1. 63.247.74.43                 0.0%    10    0.3   0.6   0.3   1.2   0.3</span><br><span class="line">   2. 63.247.64.157                0.0%    10    0.4   1.0   0.4   6.1   1.8</span><br><span class="line">   3. 209.51.130.213               0.0%    10    0.8   2.7   0.8  19.0   5.7</span><br><span class="line">   4. aix.pr1.atl.google.com       0.0%    10    6.7   6.8   6.7   6.9   0.1</span><br><span class="line">   5. 172.16.29.45                 0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line">   6. ???                          0.0%    10    0.0   0.0   0.0   0.0   0.0 </span><br><span class="line">   7. ???                          0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line">   8. ???                          0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line">   9. ???                          0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line">  10. ???                          0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br></pre></td></tr></table></figure><p>有时候，一个错误配置的路由器，将会在一个环路中不断发送数据包，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">root@meiriyitie.com:~<span class="comment"># mtr --report www.google.com</span></span><br><span class="line">HOST: localhost                   Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1. 63.247.74.43                  0.0%    10    0.3   0.6   0.3   1.2   0.3</span><br><span class="line">  2. 63.247.64.157                 0.0%    10    0.4   1.0   0.4   6.1   1.8</span><br><span class="line">  3. 209.51.130.213                0.0%    10    0.8   2.7   0.8  19.0   5.7</span><br><span class="line">  4. aix.pr1.atl.google.com        0.0%    10    6.7   6.8   6.7   6.9   0.1</span><br><span class="line">  5. 12.34.56.79                   0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line">  6. 12.34.56.78                   0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line">  7. 12.34.56.79                   0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line">  8. 12.34.56.78                   0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line">  9. 12.34.56.79                   0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line"> 10. 12.34.56.78                   0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line"> 11. 12.34.56.79                   0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line"> 12. ???                           0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line"> 13. ???                           0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line"> 14. ???                           0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br></pre></td></tr></table></figure><p>通过报告可以看打第 4 跳的路由器没有正确配置。如果这种状况发生了，您可以连接当地的网络管理员或 ISP 解决问题。</p><h3 id="ICMP-速率限制"><a href="#ICMP-速率限制" class="headerlink" title="ICMP 速率限制"></a>ICMP 速率限制</h3><p>ICMP 速率限制可引起数据包的丢失。如果数据包在这一跳有丢失，但是下面几条都正常，我们可以判断是 ICMP 速率限制的原因。如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@meiriyitie.com:~<span class="comment"># mtr --report www.google.com</span></span><br><span class="line"> HOST: localhost                   Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">   1. 63.247.74.43                  0.0%    10    0.3   0.6   0.3   1.2   0.3</span><br><span class="line">   2. 63.247.64.157                 0.0%    10    0.4   1.0   0.4   6.1   1.8</span><br><span class="line">   3. 209.51.130.213                0.0%    10    0.8   2.7   0.8  19.0   5.7</span><br><span class="line">   4. aix.pr1.atl.google.com        0.0%    10    6.7   6.8   6.7   6.9   0.1</span><br><span class="line">   5. 72.14.233.56                 60.0%    10   27.2  25.3  23.1  26.4   2.9</span><br><span class="line">   6. 209.85.254.247                0.0%    10   39.1  39.4  39.1  39.7   0.2</span><br><span class="line">   7. 64.233.174.46                 0.0%    10   39.6  40.4  39.4  46.9   2.3</span><br><span class="line">   8. gw-in-f147.1e100.net          0.0%    10   39.6  40.5  39.5  46.7   2.2</span><br></pre></td></tr></table></figure><p>这种状况是没关系的。ICMP 速率限制是一种常见的手段，这样可以减少网络数据的负载，让更重要的流量先通过。</p><h3 id="超时"><a href="#超时" class="headerlink" title="超时"></a>超时</h3><p>在很多种情况下会发生超时现象。例如：很多路由器可能会直接丢弃 ICMP 包，这时就会导致超时（???）。另外，也有可能在数据返回的路上出现了问题。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@meiriyitie.com:~<span class="comment"># mtr --report www.google.com</span></span><br><span class="line">HOST: localhost                   Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1. 63.247.74.43                  0.0%    10    0.3   0.6   0.3   1.2   0.3</span><br><span class="line">  2. 63.247.64.157                 0.0%    10    0.4   1.0   0.4   6.1   1.8</span><br><span class="line">  3. 209.51.130.213                0.0%    10    0.8   2.7   0.8  19.0   5.7</span><br><span class="line">  4. aix.pr1.atl.google.com        0.0%    10    6.7   6.8   6.7   6.9   0.1</span><br><span class="line">  5. ???                           0.0%    10    7.2   8.3   7.1  16.4   2.9</span><br><span class="line">  6. ???                           0.0%    10   39.1  39.4  39.1  39.7   0.2</span><br><span class="line">  7. 64.233.174.46                 0.0%    10   39.6  40.4  39.4  46.9   2.3</span><br><span class="line">  8. gw-in-f147.1e100.net          0.0%    10   39.6  40.5  39.5  46.7   2.2</span><br></pre></td></tr></table></figure><p>超时不一定是数据包被丢失。如上例，数据包还是安全的到达目的地并且返回。中间节点的超时可能是路由器配置丢弃 ICMP 包，或者 QoS 设置引起的原因，这个是没关系的。</p><h2 id="MTR-使用小结"><a href="#MTR-使用小结" class="headerlink" title="MTR 使用小结"></a>MTR 使用小结</h2><ol><li>mtr 的功能是检查在目的地址有丢包的情况下，查出具体在哪一跳丢包，然后反馈给机房，机房再反馈给运营商；</li><li>看 mtr 的截图，先看最后的目的地址是否有丢包，若最后一跳没有丢包，说明线路 ok，若最后一跳有丢包，往下看；</li><li>再看在路由情况，第一次丢包发生在哪一跳，对应的查这一跳的丢包情况即可；</li><li>如果有条件建议双向测试抓取 mtr 返回结果，对比路由是否对等；</li><li>整理邮件发送机房联系本地网络服务商 ISP 或者云主机服务商请求技术支持。</li></ol>]]></content>
    
    <summary type="html">
    
      使用 MTR 诊断网络问题
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>泰国普吉岛和甲米的旅游经历分享</title>
    <link href="https://wsgzao.github.io/post/thailand/"/>
    <id>https://wsgzao.github.io/post/thailand/</id>
    <published>2019-01-20T06:59:49.000Z</published>
    <updated>2019-01-21T12:16:21.631Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>2017 年和 2018 年末分别去了泰国的普吉岛和甲米旅游，说实话泰国普吉岛的蜜月旅行也是我的第一次出国经历，当然没想到的是一年后我已经从上海飞到了新加坡，如果你对新加坡的工作和生活感兴趣可以搜索《从国内跳槽至新加坡工作的经验分享》。这篇文章算是对泰国之旅的补交作业吧，大部分以文字描述为主不做剧透，不吹不黑列举和点评自己购买的第三方服务体验感受，想去泰国旅游的朋友可以参考下。</p><blockquote><p>泰国普吉岛和甲米的旅游经历分享</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 01 月 20 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/thailand/">https://wsgzao.github.io/post/thailand/</a></p><p><strong> 扩展阅读 </strong></p><p>泰国国家旅游局 - <a href="http://amazingthailand.org.cn/" target="_blank" rel="noopener">http://amazingthailand.org.cn/</a></p><hr><h2 id="普吉岛-Phuket"><a href="#普吉岛-Phuket" class="headerlink" title="普吉岛. Phuket"></a>普吉岛. Phuket</h2><p>时间: 20171206-20171212<br>行程: 半自由行<br>签证: 普通旅游签，爱游蜜月套餐<br>通信: Happy 卡，爱游蜜月套餐<br>人数: 2<br>天数: 7 天 5 晚<br>机票: 上海至泰国普吉岛直飞往返，吉祥航空，爱游蜜月套餐<br>酒店: 卡里玛水疗度假村 3 晚 + 卡塔塔尼海滩度假村 2 晚，爱游蜜月套餐</p><p>提前预定项目: 价格为 1 人单价</p><ul><li>爱游泰国旅游普吉岛自由行 7 天 5 星蜜月春节机票飞猪，￥8699.00</li><li>浦发龙腾出行礼宾车机场接送机</li><li>浪花朵朵旅行 普吉岛王权免税店一日游骑大象自助餐泰国 KingPower，￥9.79</li><li>浪花朵朵旅行泰国普吉岛素可 Sukko Spa 90 分钟蜜月套餐 泰式按摩，￥492.37</li><li>浪花朵朵旅行普吉岛一日游大小皇帝岛浮潜海钓泰国旅游女神号游艇，￥592.23</li><li>浪花朵朵旅行普吉岛绿洲 SPA 水疗馆 The Oasis Spa 泰国绿洲 泰式按摩，￥463.69</li></ul><p>当地购买项目: 行程比较紧凑，去了班赞海鲜市场也没有购买欲望</p><p>小结:</p><ol><li>首次出国就是蜜月旅行，在选择地点时也受到《欢乐颂》安迪最后选择去普吉岛，出于稳妥的考虑选择了半自由行 + 当地游的方式，缺点自然是花钱买省心。如果你往下看第二次去甲米的行程基本就是自由行 + 当地游，费用大幅减少而时间成本其实也没有增加很多</li><li>这次普吉岛只安排 1 天出海行程，我没有选择斯米兰因为不考虑深潜。结合下面甲米 2 次出海经历，我这里推荐大家尽可能选择靠谱的精致小团，在长时间坐游艇和游玩项目过程中体验会提升不少</li><li>普吉岛的整体商业化程度高体现在吃喝玩乐各个方面，而普吉岛 SPA 的 2 次体验都非常棒，尤其是最后一天绿洲 SPA 是目前我所接触过最舒服的一次双人 SPA，连洗澡都贴心的配置了 2 个花洒，安静且私密性极好，价格也没有很贵，非常值得二刷</li><li>虽然酒店是爱游搭配的，但是我现在可以理解 7 天行程住 2 种不同酒店的意义，高中搭配会带来新鲜的感受，成本上也会节约不少，就是中间牺牲更换酒店的时间有一点折腾</li><li>普吉岛的项目由于安排的有些紧凑导致没有太多睡到自然醒的休闲时间，毕竟出国一次也不容易想着到处多转转长长见识。如果条件允许推荐大家采用自由行 + 当地游的组合，出发前签证等重要材料一定要准备充分，不要辜负自己宝贵的假期哈</li></ol><h2 id="甲米-Krabi"><a href="#甲米-Krabi" class="headerlink" title="甲米. Krabi"></a>甲米. Krabi</h2><p>时间: 20181204-20181209<br>行程: 自由行<br>签证: 落地签，免费<br>通信: 华为天际通<br>人数: 2<br>天数: 6 天 5 晚<br>机票: 酷航 TR686 新加坡 - 甲米, TR689 甲米 - 新加坡, ￥1192.00, 飞猪<br>酒店: Sugar Marina CLIFFHANGER 池景高级房, ￥1992.25, 飞猪</p><p>提前预定项目: 价格为 1 人单价</p><ul><li>浪花朵朵旅行泰国甲米接送机接机送机机场接送服务中文可急单，￥245.69</li><li>浪花朵朵 甲米翡翠池一日游温泉瀑布虎窟寺 ATV 皮划艇骑大象半日游，￥340.92</li><li>浪花朵朵泰国曼谷 lets relax spa 普吉岛清迈芭提雅甲米泰式按摩，￥299.52</li><li>浪花朵朵旅行 甲米一日游皮皮岛 pp 岛竹子岛四岛兰塔岛 快艇浮潜，￥329.57</li><li>浪花朵朵 洛克岛一日游兰塔 Rok 哈岛 游艇浮潜水 泰国甲米旅游中文，￥494.35</li></ul><p>当地购买项目: 记不清楚价格，仅列举自己推荐的店</p><ul><li>奥南按摩角中心</li><li>Jungle Kitchen</li><li>Ton Ma Yom Thai Food Restaurant</li><li>Kodam Kitchen</li></ul><p>小结:</p><ol><li>如果我可以重新选择会去掉翡翠池，lets relax spa，2 天的出海。翡翠池和九寨沟相比就是小巫见大巫，关于出海我不喜欢深潜，所以浮潜的效果会差好多，而且非常容易晒伤皮肤，需要很早出发然后长时间航行，对于不喜欢坐船的小伙伴来说是挺难受的。</li><li>体验过奥南按摩角中心基本就不会再考虑其它按摩馆了，技师年龄加手法都很成熟，整过过程没有过多的闲聊和休息，做足了时长。</li><li>由于时间和路程原因没有体验甲米镇的夜市，奥南夜市很一般，还是推荐大家多体验我上面写的 3 家餐厅，对食物如果没有忌口可以从热门推荐菜开始尝试。</li><li>落地签需要稍微多花一些填表时间，不过我们没有被要求重新现场拍照，省去了 2000 泰铢签证费用还是很划算的。</li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>2 次泰国旅游经历可以为将来更远的旅行打下扎实的基础</p></blockquote><ol><li>通过 2 次的泰国旅行，深潜和浮潜游可能都不是我的菜，美食和 SPA 的体验都非常棒</li><li>除了机票和酒店，推荐提前预定接送机，出海和 SPA 等项目，虽然一定比当地预定贵一丢丢，但节约了时间成本，辅助你规划行程，不过千万不要把行程安排的过于紧凑哈</li><li>旅行攻略除了国内的美团点评和小红书等以外，推荐 TripAdvisor，俗称猫头鹰</li><li>东南亚移动支付越来越普及，真的可以期待未来走出国门也无需带钱包那一刻到来</li><li>无论选择去哪里旅游切记人身安全才是第一位的，祝大家旅途愉快哈</li></ol>]]></content>
    
    <summary type="html">
    
      泰国普吉岛和甲米的旅游经历分享
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>CPU 优化建议使用 cpupower 设置 CPU Performance 模式</title>
    <link href="https://wsgzao.github.io/post/cpupower/"/>
    <id>https://wsgzao.github.io/post/cpupower/</id>
    <published>2019-01-18T06:59:49.000Z</published>
    <updated>2019-01-21T11:22:07.404Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>CPU 动态节能技术用于降低服务器功耗，通过选择系统空闲状态不同的电源管理策 略，可以实现不同程度降低服务器功耗，更低的功耗策略意味着 CPU 唤醒更慢对性能 影响更大。对于对时延和性能要求高的应用，建议关闭 CPU 的动态调节功能，禁止 CPU 休眠，并把 CPU 频率固定到最高。通常建议在服务器 BIOS 中修改电源管理为 Performance，如果发现 CPU 模式为 conservative 或者 powersave，可以使用 cpupower 设置 CPU Performance 模式，效果也是相当显著的。</p><blockquote><p>CPU 优化建议使用 cpupower 设置 CPU Performance 模式</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 01 月 18 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/cpupower/">https://wsgzao.github.io/post/cpupower/</a></p><p><strong> 扩展阅读 </strong></p><p>CPU frequency scaling - <a href="https://wiki.archlinux.org/index.php/CPU_frequency_scaling" target="_blank" rel="noopener">https://wiki.archlinux.org/index.php/CPU_frequency_scaling</a></p><hr><h2 id="cpufreq-的五种模式"><a href="#cpufreq-的五种模式" class="headerlink" title="cpufreq 的五种模式"></a>cpufreq 的五种模式</h2><p>cpufreq 是一个动态调整 cpu 频率的模块，系统启动时生成一个文件夹 / sys/devices/system/cpu/cpu0/cpufreq/，里面有几个文件，其中 scaling_min_freq 代表最低频率，scaling_max_freq 代表最高频率，scalin_governor 代表 cpu 频率调整模式，用它来控制 CPU 频率。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /sys/devices/system/cpu/cpu0/cpufreq/</span><br><span class="line"></span><br><span class="line">affected_cpus</span><br><span class="line">bios_limit</span><br><span class="line">cpuinfo_cur_freq</span><br><span class="line">cpuinfo_max_freq</span><br><span class="line">cpuinfo_min_freq</span><br><span class="line">cpuinfo_transition_latency</span><br><span class="line">freqdomain_cpus</span><br><span class="line">related_cpus</span><br><span class="line">scaling_available_frequencies</span><br><span class="line">scaling_available_governors</span><br><span class="line">scaling_cur_freq</span><br><span class="line">scaling_driver</span><br><span class="line">scaling_governor</span><br><span class="line">scaling_max_freq</span><br><span class="line">scaling_min_freq</span><br><span class="line">scaling_setspeed</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前的调节器</span></span><br><span class="line">cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor</span><br><span class="line">conservative</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看频率信息</span></span><br><span class="line">cpupower frequency-info</span><br><span class="line"></span><br><span class="line">analyzing CPU 0:</span><br><span class="line">  driver: acpi-cpufreq</span><br><span class="line">  CPUs <span class="built_in">which</span> run at the same hardware frequency: 0</span><br><span class="line">  CPUs <span class="built_in">which</span> need to have their frequency coordinated by software: 0</span><br><span class="line">  maximum transition latency: 10.0 us</span><br><span class="line">  hardware limits: 800 MHz - 2.10 GHz</span><br><span class="line">  available frequency steps:  2.10 GHz, 2.10 GHz, 2.00 GHz, 1.90 GHz, 1.80 GHz, 1.70 GHz, 1.60 GHz, 1.50 GHz, 1.40 GHz, 1.30 GHz, 1.20 GHz, 1.10 GHz, 1000 MHz, 900 MHz, 800 MHz</span><br><span class="line">  available cpufreq governors: conservative userspace powersave ondemand performance</span><br><span class="line">  current policy: frequency should be within 800 MHz and 2.10 GHz.</span><br><span class="line">                  The governor <span class="string">"performance"</span> may decide <span class="built_in">which</span> speed to use</span><br><span class="line">                  within this range.</span><br><span class="line">  current CPU frequency: Unable to call hardware</span><br><span class="line">  current CPU frequency: 2.10 GHz (asserted by call to kernel)</span><br><span class="line">  boost state support:</span><br><span class="line">    Supported: yes</span><br><span class="line">    Active: yes</span><br></pre></td></tr></table></figure><ol><li>performance: 顾名思义只注重效率，将 CPU 频率固定工作在其支持的最高运行频率上，而不动态调节。</li><li>Userspace: 最早的 cpufreq 子系统通过 userspace governor 为用户提供了这种灵活性。系统将变频策略的决策权交给了用户态应用程序，并提供了相应的接口供用户态应用程序调节 CPU 运行频率使用。也就是长期以来都在用的那个模式。可以通过手动编辑配置文件进行配置</li><li>powersave: 将 CPU 频率设置为最低的所谓 “省电” 模式，CPU 会固定工作在其支持的最低运行频率上。因此这两种 governors 都属于静态 governor，即在使用它们时 CPU 的运行频率不会根据系统运行时负载的变化动态作出调整。这两种 governors 对应的是两种极端的应用场景，使用 performance governor 是对系统高性能的最大追求，而使用 powersave governor 则是对系统低功耗的最大追求。</li><li>ondemand: 按需快速动态调整 CPU 频率， 一有 cpu 计算量的任务，就会立即达到最大频率运行，等执行完毕就立即回到最低频率；ondemand：userspace 是内核态的检测，用户态调整，效率低。而 ondemand 正是人们长期以来希望看到的一个完全在内核态下工作并且能够以更加细粒度的时间间隔对系统负载情况进行采样分析的 governor。 在 ondemand governor 监测到系统负载超过 up_threshold 所设定的百分比时，说明用户当前需要 CPU 提供更强大的处理能力，因此 ondemand governor 会将 CPU 设置在最高频率上运行。但是当 ondemand governor 监测到系统负载下降，可以降低 CPU 的运行频率时，到底应该降低到哪个频率呢？ ondemand governor 的最初实现是在可选的频率范围内调低至下一个可用频率，例如 CPU 支持三个可选频率，分别为 1.67GHz、1.33GHz 和 1GHz ，如果 CPU 运行在 1.67GHz 时 ondemand governor 发现可以降低运行频率，那么 1.33GHz 将被选作降频的目标频率。</li><li>conservative: 与 ondemand 不同，平滑地调整 CPU 频率，频率的升降是渐变式的, 会自动在频率上下限调整，和 ondemand 的区别在于它会按需分配频率，而不是一味追求最高频率；</li></ol><h2 id="cpupower-设置-performance"><a href="#cpupower-设置-performance" class="headerlink" title="cpupower 设置 performance"></a>cpupower 设置 performance</h2><blockquote><p>从 conservative 或者 powersave 切换到 performance 的效果还是杠杠的</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CentOS 安装 kernel-tools</span></span><br><span class="line">yum install kernel-tools</span><br><span class="line"></span><br><span class="line"><span class="comment"># Ubuntu 安装 CPU 模式无图形化切换器</span></span><br><span class="line">apt install cpufrequtils</span><br><span class="line"></span><br><span class="line"><span class="comment"># cpupower 设置 performance</span></span><br><span class="line">cpupower frequency-set -g performance</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前的调节器</span></span><br><span class="line">cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor</span><br><span class="line">performance</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建自启动服务</span></span><br><span class="line">cat &lt;&lt; EOF | sudo tee /etc/systemd/system/cpupower.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=CPU powersave</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=oneshot</span><br><span class="line">ExecStart=/usr/bin/cpupower -c all frequency-set -g powersave</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl <span class="built_in">enable</span> cpupower.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># systemd.service — Service unit configuration</span></span><br><span class="line">https://www.freedesktop.org/software/systemd/man/systemd.service.html</span><br></pre></td></tr></table></figure><p><img src="https://wx3.sinaimg.cn/large/7207510dgy1fzat998mmvj21dc0ggdqx.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      CPU优化建议使用cpupower设置CPU Performance模式
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>使用 rpmbuild 制作 Nginx 的 RPM 包</title>
    <link href="https://wsgzao.github.io/post/rpmbuild/"/>
    <id>https://wsgzao.github.io/post/rpmbuild/</id>
    <published>2019-01-16T06:59:49.000Z</published>
    <updated>2019-01-18T08:26:01.679Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://wx2.sinaimg.cn/large/7207510dgy1fz8ebc174fj20o40i9dnd.jpg" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>题图为 RPM 包制作原理图，有时候为了方便源码包的安装，和我们自己订制软件包的需求，我们会把一些源码包按照我们的需求来做成 rpm 包，当有了源码包就可以直接编译得到二进制安装包和其他任意包。spec file 是制作 rpm 包最核心的部分，rpm 包的制作就是根据 spec file 来实现的。在制作自定义 rpm 包的时候最好不要使用管理员进行, 因为管理员权限过大，如果一个命令写错了，结果可能是灾难性的，而制件一个 rpm 包普通用户完全可以实现。本文主要介绍使用 rpmbuild 制作 Nginx 的 RPM 包，大部分步骤已经使用 Bash Shell 自动化完成了，大家可以基于此重新定义。</p><blockquote><p>使用 rpmbuild 制作 Nginx 的 RPM 包</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 01 月 16 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/rpmbuild/">https://wsgzao.github.io/post/rpmbuild/</a></p><p><strong> 扩展阅读 </strong></p><p>Creating RPM packages - <a href="https://docs.fedoraproject.org/en-US/quick-docs/creating-rpm-packages/index.html" target="_blank" rel="noopener">https://docs.fedoraproject.org/en-US/quick-docs/creating-rpm-packages/index.html</a><br>How to create a GNU Hello RPM - <a href="https://fedoraproject.org/wiki/How_to_create_a_GNU_Hello_RPM_package/zh-cn" target="_blank" rel="noopener">https://fedoraproject.org/wiki/How_to_create_a_GNU_Hello_RPM_package/zh-cn</a><br>使用 rpm-build 制作 nginx 的 rpm 包 - <a href="http://blog.51cto.com/nmshuishui/1583117" target="_blank" rel="noopener">http://blog.51cto.com/nmshuishui/1583117</a></p><hr><h2 id="什么是-RPM"><a href="#什么是-RPM" class="headerlink" title="什么是 RPM"></a>什么是 RPM</h2><p>An RPM package is simply a file containing other files and information about them needed by the system. Specifically, an RPM package consists of the cpio archive, which contains the files, and the RPM header, which contains metadata about the package. The rpm package manager uses this metadata to determine dependencies, where to install files, and other information.</p><p>There are two types of RPM packages:</p><ul><li>source RPM (SRPM)</li><li>binary RPM</li></ul><p>SRPMs and binary RPMs share the file format and tooling, but have different contents and serve different purposes. An SRPM contains source code, optionally patches to it, and a SPEC file, which describes how to build the source code into a binary RPM. A binary RPM contains the binaries built from the sources and patches.</p><p>RPM 有五种基本的操作功能：安装、卸载、升级、查询和验证。</p><p>Linux 软件包分为两大类：</p><ol><li>二进制类包，包括 rpm 安装包（一般分为 i386 和 x86 等几种）</li><li>源码类包，源码包和开发包应该归位此类（.src.rpm）</li></ol><p>在 Redhat 下，rpm 包的默认制作路径在 /usr/src/redhat 下，这其中包含了 6 个目录（要求全部大写）。但 Centos 并没有该目录，因此我们不得不自定义工作车间，即使在 Redhat 下有该目录，一般也是自定义到普通用户的家目录下的</p><table><thead><tr><th>Directory</th><th>Usage</th></tr></thead><tbody><tr><td>BUILD</td><td>源代码解压以后放的位置，只需提供 BUILD 目录，具体里面放什么，不用我们管，所以真正的制作车间是 BUILD 目录</td></tr><tr><td>RPMS</td><td>制作完成后的 rpm 包存放目录，为特定平台指定子目录（i386,i686,ppc）</td></tr><tr><td>SOURCES</td><td>收集的源文件，源材料，补丁文件等存放位置    </td></tr><tr><td>SPECS</td><td>存放 spec 文件，作为制作 rpm 包的领岗文件，以 rpm 名. spec</td></tr><tr><td>SRPMS</td><td>src 格式的 rpm 包位置 ，既然是 src 格式的包，就没有平台的概念了           </td></tr><tr><td>BuiltRoot</td><td>假根，使用 install 临时安装到这个目录，把这个目录当作根来用的，所以在这个目录下的目录文件，才是真正的目录文件。当打包完成后，在清理阶段，这个目录将被删除</td></tr></tbody></table><p>更详细的介绍可以参考 <code>RPM Packaging Guide</code></p><p><a href="https://rpm-packaging-guide.github.io/" target="_blank" rel="noopener">https://rpm-packaging-guide.github.io/</a></p><h2 id="制作-rpm-包"><a href="#制作-rpm-包" class="headerlink" title="制作 rpm 包"></a>制作 rpm 包</h2><blockquote><p>如果你只关心如何使用可以直接跳过看下文，这里主要展示代码和配置文件</p></blockquote><h3 id="build-shell"><a href="#build-shell" class="headerlink" title="build shell"></a>build shell</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># luajit.sh</span></span><br><span class="line">LUAVER=2.0.5</span><br><span class="line">WKDIR=<span class="string">"/root/rpmbuild/SOURCES"</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$WKDIR</span></span><br><span class="line">wget http://luajit.org/download/LuaJIT-<span class="variable">$LUAVER</span>.tar.gz</span><br><span class="line">tar zxf LuaJIT-<span class="variable">$LUAVER</span>.tar.gz</span><br><span class="line">rm LuaJIT-<span class="variable">$LUAVER</span>.tar.gz</span><br><span class="line"><span class="built_in">cd</span> LuaJIT-<span class="variable">$LUAVER</span></span><br><span class="line">make BUILDMODE=static</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">export</span> LUAJIT_LIB=/usr/<span class="built_in">local</span>/lib</span><br><span class="line"><span class="built_in">export</span> LUAJIT_INC=/usr/<span class="built_in">local</span>/include/luajit-2.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># build.sh</span></span><br><span class="line">NGX_VER=1.14.1</span><br><span class="line">WKDIR=<span class="string">"/root/rpmbuild/SOURCES"</span></span><br><span class="line">CURRENTDIR=`dirname $(readlink -f <span class="string">"<span class="variable">$0</span>"</span>)`</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$CURRENTDIR</span></span><br><span class="line"><span class="built_in">export</span> LUAJIT_LIB=/usr/<span class="built_in">local</span>/lib</span><br><span class="line"><span class="built_in">export</span> LUAJIT_INC=/usr/<span class="built_in">local</span>/include/luajit-2.0</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$WKDIR</span></span><br><span class="line">wget http://nginx.org/download/nginx-<span class="variable">$NGX_VER</span>.tar.gz</span><br><span class="line">tar xzf nginx-<span class="variable">$NGX_VER</span>.tar.gz</span><br><span class="line">rm nginx-<span class="variable">$NGX_VER</span>.tar.gz</span><br><span class="line">mv nginx-<span class="variable">$NGX_VER</span> nginx-garena-<span class="variable">$NGX_VER</span></span><br><span class="line"><span class="built_in">cd</span> nginx-garena-<span class="variable">$NGX_VER</span>/</span><br><span class="line"></span><br><span class="line">mkdir -p contrib</span><br><span class="line"><span class="built_in">cd</span> contrib/</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/bigplum/Nginx-limit-traffic-rate-module.git</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/agentzh/headers-more-nginx-module.git</span><br><span class="line"><span class="comment">#git clone git://github.com/gnosek/nginx-upstream-fair.git</span></span><br><span class="line">git <span class="built_in">clone</span> git://github.com/agentzh/<span class="built_in">echo</span>-nginx-module.git</span><br><span class="line"><span class="comment">#git clone git://github.com/arut/nginx-dav-ext-module.git</span></span><br><span class="line">git <span class="built_in">clone</span> git://github.com/r10r/ngx_http_auth_pam_module.git</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/FRiCKLE/ngx_cache_purge.git</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/simpl/ngx_devel_kit.git</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/openresty/lua-nginx-module.git</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/nbs-system/naxsi.git</span><br><span class="line">rm -rf */.git</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line">cp -r <span class="variable">$CURRENTDIR</span>/nginx-template/* <span class="variable">$WKDIR</span>/nginx-garena-<span class="variable">$NGX_VER</span>/</span><br><span class="line">cp <span class="variable">$CURRENTDIR</span>/nginx-spec /root/rpmbuild/SPECS/</span><br><span class="line"><span class="comment">#cp /root/rules $WKDIR/nginx-garena-$NGX_VER/debian/</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$WKDIR</span></span><br><span class="line">tar zcf nginx-garena-<span class="variable">$NGX_VER</span>.tar.gz nginx-garena-<span class="variable">$NGX_VER</span>/</span><br><span class="line"><span class="built_in">cd</span> /root/rpmbuild/SPECS/</span><br><span class="line">rpmbuild -ba nginx-spec</span><br><span class="line"><span class="built_in">cd</span> /root/rpmbuild/RPMS/noarch</span><br></pre></td></tr></table></figure><h3 id="nginx-spec"><a href="#nginx-spec" class="headerlink" title="nginx-spec"></a>nginx-spec</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.The introduction section </span></span><br><span class="line">Name: nginx-garena                                      <span class="comment"># 软件包名称 </span></span><br><span class="line">Version: 1.14.1                                         <span class="comment"># 版本号 </span></span><br><span class="line">Release: 0                                              <span class="comment"># release 号 </span></span><br><span class="line">Summary: nginx garena rpm                               <span class="comment"># 简要描述信息 </span></span><br><span class="line">Source0: nginx-garena-1.14.1.tar.gz                     <span class="comment"># source 主要是引用一下自己定义好的脚本，配置文件之类的内容 </span></span><br><span class="line">License: GPL                                            <span class="comment"># 一定带上（最好是对方源码包的 License）BSD，GPL，GPLv2</span></span><br><span class="line">Group: Rahul                                            <span class="comment"># 要全用这里面的一个组：less /usr/share/doc/rpm-version/GROUPS</span></span><br><span class="line">BuildArch: noarch               </span><br><span class="line">BuildRoot: %&#123;_tmppath&#125;/%&#123;name&#125;-buildroot                </span><br><span class="line">%description                                            <span class="comment"># 软件包详述 </span></span><br><span class="line">Garena self-build Nginx.</span><br><span class="line">%define _binaries_in_noarch_packages_terminate_build   0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.The Prep section 准备阶段, 主要就是把源码包解压到 build 目录下，设置一下环境变量，并 cd 进去 </span></span><br><span class="line">%prep</span><br><span class="line">%setup -q %&#123;name&#125;-%&#123;version&#125;                            <span class="comment"># 这个宏的作用静默模式解压并 cd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.The Build Section 编译制作阶段，这一节主要用于编译源码 </span></span><br><span class="line">%build</span><br><span class="line">CFLAGS=<span class="string">"<span class="variable">$RPM_OPT_FLAGS</span>"</span> ./configure --prefix=/usr/share/nginx/ \</span><br><span class="line">                    --sbin-path=/usr/sbin/nginx \</span><br><span class="line">                    --conf-path=/etc/nginx/nginx.conf \</span><br><span class="line">                    --error-log-path=/var/<span class="built_in">log</span>/nginx/error.log \</span><br><span class="line">                    --http-log-path=/var/<span class="built_in">log</span>/nginx/access.log \</span><br><span class="line">                    --pid-path=/var/run/nginx.pid \</span><br><span class="line">                    --lock-path=/var/lock/nginx.lock \</span><br><span class="line">                    --http-client-body-temp-path=/var/lib/nginx/body \</span><br><span class="line">                    --http-fastcgi-temp-path=/var/lib/nginx/fastcgi \</span><br><span class="line">                    --http-proxy-temp-path=/var/lib/nginx/proxy \</span><br><span class="line">                    --http-scgi-temp-path=/var/lib/nginx/scgi \</span><br><span class="line">                    --http-uwsgi-temp-path=/var/lib/nginx/uwsgi \</span><br><span class="line">                    --with-pcre-jit \</span><br><span class="line">                    --with-http_flv_module \</span><br><span class="line">                    --with-http_mp4_module \</span><br><span class="line">                    --with-file-aio \</span><br><span class="line">    --with-http_v2_module \</span><br><span class="line">    --with-stream \</span><br><span class="line">    --with-stream_ssl_module \</span><br><span class="line">                    --with-http_auth_request_module \</span><br><span class="line">    --with-http_slice_module \</span><br><span class="line">    --with-threads \</span><br><span class="line">                    --with-http_gunzip_module \</span><br><span class="line">    --with-http_random_index_module \</span><br><span class="line">    --with-http_secure_link_module \</span><br><span class="line">                    --with-http_geoip_module \</span><br><span class="line">                    --with-http_ssl_module \</span><br><span class="line">                    --with-openssl=/usr/<span class="built_in">local</span>/src/openssl-1.0.2p \</span><br><span class="line">                    --with-http_addition_module \</span><br><span class="line">                    --with-http_geoip_module \</span><br><span class="line">                    --with-http_gzip_static_module \</span><br><span class="line">                    --with-http_realip_module \</span><br><span class="line">                    --with-ipv6 \</span><br><span class="line">                    --without-mail_pop3_module \</span><br><span class="line">                    --without-mail_imap_module \</span><br><span class="line">                    --without-mail_smtp_module \</span><br><span class="line">                    --add-module=contrib/Nginx-limit-traffic-rate-module \</span><br><span class="line">                    --add-module=contrib/headers-more-nginx-module \</span><br><span class="line">                    --add-module=contrib/<span class="built_in">echo</span>-nginx-module \</span><br><span class="line">                    --add-module=contrib/ngx_http_auth_pam_module \</span><br><span class="line">                    --add-module=contrib/ngx_cache_purge \</span><br><span class="line">                    --add-module=contrib/ngx_devel_kit \</span><br><span class="line">                    --add-module=contrib/lua-nginx-module \</span><br><span class="line">                    --add-module=contrib/naxsi/naxsi_src</span><br><span class="line">make -j8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.Install section  这一节主要用于完成实际安装软件必须执行的命令，可包含 4 种类型脚本 </span></span><br><span class="line">%install</span><br><span class="line">[ <span class="string">"<span class="variable">$RPM_BUILD_ROOT</span>"</span> != <span class="string">"/"</span> ] &amp;&amp; rm -rf <span class="variable">$RPM_BUILD_ROOT</span></span><br><span class="line">make DESTDIR=<span class="variable">$RPM_BUILD_ROOT</span> install</span><br><span class="line">install -m 0755 -d <span class="variable">$RPM_BUILD_ROOT</span>/etc/nginx/sites-enabled</span><br><span class="line">install -m 0755 -d <span class="variable">$RPM_BUILD_ROOT</span>/etc/nginx/sites-available</span><br><span class="line">install -m 0755 -d <span class="variable">$RPM_BUILD_ROOT</span>/var/<span class="built_in">log</span>/nginx</span><br><span class="line">install -m 0755 -d <span class="variable">$RPM_BUILD_ROOT</span>/var/lib/nginx</span><br><span class="line">install -D -m 644 conf/sites-available/000_stub_status <span class="variable">$RPM_BUILD_ROOT</span>/etc/nginx/sites-available/000_stub_status</span><br><span class="line">install -D -m 644 conf/django_fastcgi_params <span class="variable">$RPM_BUILD_ROOT</span>/etc/nginx/django_fastcgi_params</span><br><span class="line">install -D -m 644 conf/naxsi_core.rules <span class="variable">$RPM_BUILD_ROOT</span>/etc/nginx/naxsi_core.rules</span><br><span class="line">install -D -m 644 conf/sites-available/000_stub_status <span class="variable">$RPM_BUILD_ROOT</span>/etc/nginx/sites-enabled/000_stub_status</span><br><span class="line">install -D -m 644 logrotate.d/nginx <span class="variable">$RPM_BUILD_ROOT</span>/etc/logrotate.d/nginx</span><br><span class="line">install -D -m 644 nginx.service <span class="variable">$RPM_BUILD_ROOT</span>/usr/lib/systemd/system/nginx.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.clean section 清理段，clean 的主要作用就是删除 BUILD</span></span><br><span class="line">%clean</span><br><span class="line">[ <span class="string">"<span class="variable">$RPM_BUILD_ROOT</span>"</span> != <span class="string">"/"</span> ] &amp;&amp; rm -rf <span class="variable">$RPM_BUILD_ROOT</span></span><br><span class="line">%post</span><br><span class="line">useradd -s /sbin/nologin -d /var/www www-data</span><br><span class="line">chown -R www-data.www-data /var/<span class="built_in">log</span>/nginx /var/lib/nginx</span><br><span class="line">systemctl <span class="built_in">enable</span> nginx</span><br><span class="line"><span class="built_in">echo</span> %&#123;name&#125;-%&#123;version&#125; is successfully installed.</span><br><span class="line">systemctl start nginx</span><br><span class="line"><span class="comment"># 6.file section 文件列表段，这个阶段是把前面已经编译好的内容要打包了 </span></span><br><span class="line">%files</span><br><span class="line">%defattr(-,root,root)</span><br><span class="line">%dir /etc/nginx</span><br><span class="line">/etc/nginx/*</span><br><span class="line">%dir /usr/src/debug/nginx-garena-1.14.1</span><br><span class="line">/usr/src/debug/nginx-garena-1.14.1/*</span><br><span class="line">/usr/sbin/nginx</span><br><span class="line">%dir /usr/share/nginx</span><br><span class="line">/usr/share/nginx/*</span><br><span class="line">/etc/logrotate.d/nginx</span><br><span class="line">/usr/lib/systemd/system/nginx.service</span><br><span class="line">/usr/lib/debug/*</span><br><span class="line">/usr/lib/debug/.build-id/*</span><br><span class="line">%dir /var/<span class="built_in">log</span>/nginx</span><br><span class="line">%dir /var/lib/nginx</span><br><span class="line">%config(noreplace) /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><h3 id="nginx-template"><a href="#nginx-template" class="headerlink" title="nginx-template"></a>nginx-template</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><span class="line">nginx-template</span><br><span class="line">    ├── conf</span><br><span class="line">    │   ├── django_fastcgi_params</span><br><span class="line">    │   ├── naxsi_core.rules</span><br><span class="line">    │   └── sites-available</span><br><span class="line">    │       └── 000_stub_status</span><br><span class="line">    ├── logrotate.d</span><br><span class="line">    │   └── nginx</span><br><span class="line">    ├── nginx.conf</span><br><span class="line">    └── nginx.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx-rpmbuild-centos7/nginx-template/conf/django_fastcgi_params</span></span><br><span class="line">fastcgi_param  QUERY_STRING       <span class="variable">$query_string</span>;</span><br><span class="line">fastcgi_param  REQUEST_METHOD     <span class="variable">$request_method</span>;</span><br><span class="line">fastcgi_param  CONTENT_TYPE       <span class="variable">$content_type</span>;</span><br><span class="line">fastcgi_param  CONTENT_LENGTH     <span class="variable">$content_length</span>;</span><br><span class="line"></span><br><span class="line">fastcgi_param  PATH_INFO          <span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">fastcgi_param  REQUEST_URI        <span class="variable">$request_uri</span>;</span><br><span class="line">fastcgi_param  DOCUMENT_URI       <span class="variable">$document_uri</span>;</span><br><span class="line">fastcgi_param  DOCUMENT_ROOT      <span class="variable">$document_root</span>;</span><br><span class="line">fastcgi_param  SERVER_PROTOCOL    <span class="variable">$server_protocol</span>;</span><br><span class="line"></span><br><span class="line">fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;</span><br><span class="line">fastcgi_param  SERVER_SOFTWARE    nginx/<span class="variable">$nginx_version</span>;</span><br><span class="line"></span><br><span class="line">fastcgi_param  REMOTE_ADDR        <span class="variable">$remote_addr</span>;</span><br><span class="line">fastcgi_param  REMOTE_PORT        <span class="variable">$remote_port</span>;</span><br><span class="line">fastcgi_param  SERVER_ADDR        <span class="variable">$server_addr</span>;</span><br><span class="line">fastcgi_param  SERVER_PORT        <span class="variable">$server_port</span>;</span><br><span class="line">fastcgi_param  SERVER_NAME        <span class="variable">$server_name</span>;</span><br><span class="line"></span><br><span class="line">fastcgi_param  HTTP_X_FORWARDED_PROTOCOL        <span class="variable">$scheme</span>;</span><br><span class="line"></span><br><span class="line">fastcgi_pass_header Authorization;</span><br><span class="line">fastcgi_intercept_errors off;</span><br><span class="line">fastcgi_keep_conn on;</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx-rpmbuild-centos7/nginx-template/conf/naxsi_core.rules</span></span><br><span class="line"><span class="comment">##################################</span></span><br><span class="line"><span class="comment">## INTERNAL RULES IDS:1-999     ##</span></span><br><span class="line"><span class="comment">##################################</span></span><br><span class="line"><span class="comment">#@MainRule "msg:weird request, unable to parse" id:1;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:request too big, stored on disk and not parsed" id:2;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:invalid hex encoding, null bytes" id:10;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:unknown content-type" id:11;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:invalid formatted url" id:12;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:invalid POST format" id:13;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:invalid POST boundary" id:14;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:invalid JSON" id:15;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:empty POST" id:16;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:libinjection_sql" id:17;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:libinjection_xss" id:18;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##################################</span></span><br><span class="line"><span class="comment">## SQL Injections IDs:1000-1099 ##</span></span><br><span class="line"><span class="comment">##################################</span></span><br><span class="line">MainRule <span class="string">"rx:select|union|update|delete|insert|table|from|ascii|hex|unhex|drop"</span> <span class="string">"msg:sql keywords"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:4"</span> id:1000;</span><br><span class="line">MainRule <span class="string">"str:\""</span> <span class="string">"msg:double quote"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:8,<span class="variable">$XSS</span>:8"</span> id:1001;</span><br><span class="line">MainRule <span class="string">"str:0x"</span> <span class="string">"msg:0x, possible hex encoding"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:2"</span> id:1002;</span><br><span class="line"><span class="comment">## Hardcore rules</span></span><br><span class="line">MainRule <span class="string">"str:/*"</span> <span class="string">"msg:mysql comment (/*)"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:8"</span> id:1003;</span><br><span class="line">MainRule <span class="string">"str:*/"</span> <span class="string">"msg:mysql comment (*/)"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:8"</span> id:1004;</span><br><span class="line">MainRule <span class="string">"str:|"</span> <span class="string">"msg:mysql keyword (|)"</span>  <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:8"</span> id:1005;</span><br><span class="line">MainRule <span class="string">"str:&amp;&amp;"</span> <span class="string">"msg:mysql keyword (&amp;&amp;)"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:8"</span> id:1006;</span><br><span class="line"><span class="comment">## end of hardcore rules</span></span><br><span class="line">MainRule <span class="string">"str:--"</span> <span class="string">"msg:mysql comment (--)"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:4"</span> id:1007;</span><br><span class="line">MainRule <span class="string">"str:;"</span> <span class="string">"msg:semicolon"</span> <span class="string">"mz:BODY|URL|ARGS"</span> <span class="string">"s:<span class="variable">$SQL</span>:4,<span class="variable">$XSS</span>:8"</span> id:1008;</span><br><span class="line">MainRule <span class="string">"str:="</span> <span class="string">"msg:equal sign in var, probable sql/xss"</span> <span class="string">"mz:ARGS|BODY"</span> <span class="string">"s:<span class="variable">$SQL</span>:2"</span> id:1009;</span><br><span class="line">MainRule <span class="string">"str:("</span> <span class="string">"msg:open parenthesis, probable sql/xss"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:4,<span class="variable">$XSS</span>:8"</span> id:1010;</span><br><span class="line">MainRule <span class="string">"str:)"</span> <span class="string">"msg:close parenthesis, probable sql/xss"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:4,<span class="variable">$XSS</span>:8"</span> id:1011;</span><br><span class="line">MainRule <span class="string">"str:'"</span> <span class="string">"msg:simple quote"</span> <span class="string">"mz:ARGS|BODY|URL|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:4,<span class="variable">$XSS</span>:8"</span> id:1013;</span><br><span class="line">MainRule <span class="string">"str:,"</span> <span class="string">"msg:comma"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:4"</span> id:1015;</span><br><span class="line">MainRule <span class="string">"str:#"</span> <span class="string">"msg:mysql comment (#)"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:4"</span> id:1016;</span><br><span class="line">MainRule <span class="string">"str:@@"</span> <span class="string">"msg:double arobase (@@)"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:4"</span> id:1017;</span><br><span class="line"></span><br><span class="line"><span class="comment">###############################</span></span><br><span class="line"><span class="comment">## OBVIOUS RFI IDs:1100-1199 ##</span></span><br><span class="line"><span class="comment">###############################</span></span><br><span class="line">MainRule <span class="string">"str:http://"</span> <span class="string">"msg:http:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1100;</span><br><span class="line">MainRule <span class="string">"str:https://"</span> <span class="string">"msg:https:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1101;</span><br><span class="line">MainRule <span class="string">"str:ftp://"</span> <span class="string">"msg:ftp:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1102;</span><br><span class="line">MainRule <span class="string">"str:php://"</span> <span class="string">"msg:php:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1103;</span><br><span class="line">MainRule <span class="string">"str:sftp://"</span> <span class="string">"msg:sftp:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1104;</span><br><span class="line">MainRule <span class="string">"str:zlib://"</span> <span class="string">"msg:zlib:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1105;</span><br><span class="line">MainRule <span class="string">"str:data://"</span> <span class="string">"msg:data:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1106;</span><br><span class="line">MainRule <span class="string">"str:glob://"</span> <span class="string">"msg:glob:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1107;</span><br><span class="line">MainRule <span class="string">"str:phar://"</span> <span class="string">"msg:phar:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1108;</span><br><span class="line">MainRule <span class="string">"str:file://"</span> <span class="string">"msg:file:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1109;</span><br><span class="line">MainRule <span class="string">"str:gopher://"</span> <span class="string">"msg:gopher:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1110;</span><br><span class="line"></span><br><span class="line"><span class="comment">#######################################</span></span><br><span class="line"><span class="comment">## Directory traversal IDs:1200-1299 ##</span></span><br><span class="line"><span class="comment">#######################################</span></span><br><span class="line">MainRule <span class="string">"str:.."</span> <span class="string">"msg:double dot"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$TRAVERSAL</span>:4"</span> id:1200;</span><br><span class="line">MainRule <span class="string">"str:/etc/passwd"</span> <span class="string">"msg:obvious probe"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$TRAVERSAL</span>:4"</span> id:1202;</span><br><span class="line">MainRule <span class="string">"str:c:\\"</span> <span class="string">"msg:obvious windows path"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$TRAVERSAL</span>:4"</span> id:1203;</span><br><span class="line">MainRule <span class="string">"str:cmd.exe"</span> <span class="string">"msg:obvious probe"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$TRAVERSAL</span>:4"</span> id:1204;</span><br><span class="line">MainRule <span class="string">"str:\\"</span> <span class="string">"msg:backslash"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$TRAVERSAL</span>:4"</span> id:1205;</span><br><span class="line"><span class="comment">#MainRule "str:/" "msg:slash in args" "mz:ARGS|BODY|$HEADERS_VAR:Cookie" "s:$TRAVERSAL:2" id:1206;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">########################################</span></span><br><span class="line"><span class="comment">## Cross Site Scripting IDs:1300-1399 ##</span></span><br><span class="line"><span class="comment">########################################</span></span><br><span class="line">MainRule <span class="string">"str:&lt;"</span> <span class="string">"msg:html open tag"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$XSS</span>:8"</span> id:1302;</span><br><span class="line">MainRule <span class="string">"str:&gt;"</span> <span class="string">"msg:html close tag"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$XSS</span>:8"</span> id:1303;</span><br><span class="line">MainRule <span class="string">"str:["</span> <span class="string">"msg:open square backet ([), possible js"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$XSS</span>:4"</span> id:1310;</span><br><span class="line">MainRule <span class="string">"str:]"</span> <span class="string">"msg:close square bracket (]), possible js"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$XSS</span>:4"</span> id:1311;</span><br><span class="line">MainRule <span class="string">"str:~"</span> <span class="string">"msg:tilde (~) character"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$XSS</span>:4"</span> id:1312;</span><br><span class="line">MainRule <span class="string">"str:`"</span>  <span class="string">"msg:grave accent (`)"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$XSS</span>:8"</span> id:1314;</span><br><span class="line">MainRule <span class="string">"rx:%[2|3]."</span>  <span class="string">"msg:double encoding"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$XSS</span>:8"</span> id:1315;</span><br><span class="line"></span><br><span class="line"><span class="comment">####################################</span></span><br><span class="line"><span class="comment">## Evading tricks IDs: 1400-1500 ##</span></span><br><span class="line"><span class="comment">####################################</span></span><br><span class="line">MainRule <span class="string">"str:&amp;#"</span> <span class="string">"msg:utf7/8 encoding"</span> <span class="string">"mz:ARGS|BODY|URL|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$EVADE</span>:4"</span> id:1400;</span><br><span class="line">MainRule <span class="string">"str:%U"</span> <span class="string">"msg:M$ encoding"</span> <span class="string">"mz:ARGS|BODY|URL|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$EVADE</span>:4"</span> id:1401;</span><br><span class="line"></span><br><span class="line"><span class="comment">#############################</span></span><br><span class="line"><span class="comment">## File uploads: 1500-1600 ##</span></span><br><span class="line"><span class="comment">#############################</span></span><br><span class="line">MainRule <span class="string">"rx:\.ph|\.asp|\.ht"</span> <span class="string">"msg:asp/php file upload"</span> <span class="string">"mz:FILE_EXT"</span> <span class="string">"s:<span class="variable">$UPLOAD</span>:8"</span> id:1500;</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx-rpmbuild-centos7/nginx-template/logrotate.d/nginx</span></span><br><span class="line">/var/<span class="built_in">log</span>/nginx/*.<span class="built_in">log</span> /var/<span class="built_in">log</span>/nginx/*/*.<span class="built_in">log</span>&#123;</span><br><span class="line">daily</span><br><span class="line">missingok</span><br><span class="line">rotate 14</span><br><span class="line">compress</span><br><span class="line">delaycompress</span><br><span class="line">notifempty</span><br><span class="line">create 640 root adm</span><br><span class="line">sharedscripts</span><br><span class="line">postrotate</span><br><span class="line">[ ! -f /var/run/nginx.pid ] || <span class="built_in">kill</span> -USR1 `cat /var/run/nginx.pid`</span><br><span class="line">endscript</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx-rpmbuild-centos7/nginx-template/nginx.conf</span></span><br><span class="line">user www-data;</span><br><span class="line">worker_processes auto;</span><br><span class="line"></span><br><span class="line"><span class="comment">#worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000 10000000;</span></span><br><span class="line">worker_rlimit_nofile 655650;</span><br><span class="line"></span><br><span class="line">error_log  /var/<span class="built_in">log</span>/nginx/error.log;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">        worker_connections  10240;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line"><span class="comment">#       include       /etc/nginx/naxsi_core.rules;</span></span><br><span class="line">        include       mime.types;</span><br><span class="line">        default_type  application/octet-stream;</span><br><span class="line">log_format garena <span class="string">'$remote_addr - $remote_user [$time_iso8601]"$request"$status $body_bytes_sent'</span></span><br><span class="line">                <span class="string">'"$http_referer" "$http_user_agent" $request_time $upstream_response_time "$http_x_forwarded_for" "$geoip_country_code" "$host"'</span>;</span><br><span class="line">        log_format garena_post <span class="string">'$remote_addr - $remote_user [$time_iso8601]"$request"$status $body_bytes_sent'</span></span><br><span class="line">                <span class="string">'"$http_referer" "$http_user_agent" $request_time $upstream_response_time "$http_x_forwarded_for" "$geoip_country_code" "$host" "$request_body"'</span>;</span><br><span class="line">log_format compact <span class="string">'$time_iso8601|$remote_addr|$geoip_country_code|$http_x_forwarded_for|$status|$request_time|$upstream_response_time|$request_length|$body_bytes_sent|$host|$request|$http_referer|$http_user_agent'</span>;</span><br><span class="line">log_format compact_post <span class="string">'$time_iso8601|$remote_addr|$geoip_country_code|$http_x_forwarded_for|$status|$request_time|$upstream_response_time|$request_length|$body_bytes_sent|$host|$request|$http_referer|$http_user_agent|$request_body'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#       access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">        sendfile        on;</span><br><span class="line"><span class="comment">#       tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">        keepalive_timeout  30;</span><br><span class="line">        fastcgi_keep_conn on;</span><br><span class="line">        tcp_nodelay        on;</span><br><span class="line"></span><br><span class="line">        gzip  on;</span><br><span class="line">        gzip_disable <span class="string">"MSIE [1-6]\.(?!.*SV1)"</span>;</span><br><span class="line">        gzip_proxied any;</span><br><span class="line">        gzip_buffers 16 8k;</span><br><span class="line">        gzip_types    text/plain application/javascript application/x-javascript text/javascript text/xml text/css application/json;</span><br><span class="line">        gzip_vary on;</span><br><span class="line">        include /etc/nginx/sites-enabled/*;</span><br><span class="line"></span><br><span class="line">set_real_ip_from 10.0.0.0/8;</span><br><span class="line">real_ip_header    X-Forwarded-For;</span><br><span class="line"><span class="comment">#real_ip_recursive on;</span></span><br><span class="line"><span class="comment">#geoip_country /usr/share/GeoIP/GeoIP.dat;</span></span><br><span class="line"></span><br><span class="line">        server_tokens off;         <span class="comment"># returns "Server: nginx"</span></span><br><span class="line">more_clear_headers Server; <span class="comment"># doesn't return"Server: "header at all</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx-rpmbuild-centos7/nginx-template/nginx.service</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=The nginx HTTP and reverse proxy server</span><br><span class="line">After=network.target remote-fs.target nss-lookup.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/run/nginx.pid</span><br><span class="line">ExecStartPre=/usr/sbin/nginx -t</span><br><span class="line">ExecStart=/usr/sbin/nginx</span><br><span class="line">ExecReload=/bin/<span class="built_in">kill</span> -s HUP <span class="variable">$MAINPID</span></span><br><span class="line">KillMode=process</span><br><span class="line">KillSignal=SIGQUIT</span><br><span class="line">TimeoutStopSec=5</span><br><span class="line">PrivateTmp=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h2 id="Initialize-rpmbuild-env"><a href="#Initialize-rpmbuild-env" class="headerlink" title="Initialize rpmbuild env"></a>Initialize rpmbuild env</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check current os version and kernel</span></span><br><span class="line">cat /etc/redhat-release</span><br><span class="line">CentOS Linux release 7.5.1804 (Core)</span><br><span class="line">uname -r</span><br><span class="line">3.10.0-862.el7.x86_64</span><br><span class="line"></span><br><span class="line"><span class="comment"># install lua</span></span><br><span class="line">sh luajit.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># yum install dependencies</span></span><br><span class="line">yum install -y gcc pam-devel git rpm-build pcre-devel openssl openssl-devel geoip-devel</span><br><span class="line"></span><br><span class="line"><span class="comment"># mkdir</span></span><br><span class="line">mkdir -p /root/rpmbuild/SOURCES/</span><br><span class="line">mkdir -p /root/rpmbuild/SPECS/</span><br><span class="line">mkdir -p /root/rpmbuild/RPMS/noarch</span><br><span class="line"></span><br><span class="line"><span class="comment"># download openssl</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src</span><br><span class="line">wget https://github.com/openssl/openssl/archive/OpenSSL_1_0_2p.tar.gz</span><br><span class="line">tar xf OpenSSL_1_0_2p.tar.gz</span><br><span class="line">mv openssl-OpenSSL_1_0_2p/ openssl-1.0.2p</span><br><span class="line"></span><br><span class="line"><span class="comment"># confirm these files are correct</span></span><br><span class="line">[root@localhost ~]<span class="comment"># tree nginx-rpmbuild-centos7/</span></span><br><span class="line">nginx-rpmbuild-centos7/</span><br><span class="line">├── build.sh</span><br><span class="line">├── conf_buid</span><br><span class="line">│   ├── conf</span><br><span class="line">│   │   ├── django_fastcgi_params</span><br><span class="line">│   │   ├── fastcgi.conf</span><br><span class="line">│   │   ├── fastcgi_params</span><br><span class="line">│   │   ├── koi-utf</span><br><span class="line">│   │   ├── koi-win</span><br><span class="line">│   │   ├── mime.types</span><br><span class="line">│   │   ├── naxsi_core.rules</span><br><span class="line">│   │   ├── nginx.conf</span><br><span class="line">│   │   ├── scgi_params</span><br><span class="line">│   │   ├── sites-available</span><br><span class="line">│   │   │   └── 000_stub_status</span><br><span class="line">│   │   ├── uwsgi_params</span><br><span class="line">│   │   └── win-utf</span><br><span class="line">│   ├── logrotate.d</span><br><span class="line">│   │   └── nginx</span><br><span class="line">│   ├── nginx.conf</span><br><span class="line">│   └── nginx.service</span><br><span class="line">├── luajit.sh</span><br><span class="line">├── nginx-spec</span><br><span class="line">└── nginx-template</span><br><span class="line">    ├── conf</span><br><span class="line">    │   ├── django_fastcgi_params</span><br><span class="line">    │   ├── naxsi_core.rules</span><br><span class="line">    │   └── sites-available</span><br><span class="line">    │       └── 000_stub_status</span><br><span class="line">    ├── logrotate.d</span><br><span class="line">    │   └── nginx</span><br><span class="line">    ├── nginx.conf</span><br><span class="line">    └── nginx.service</span><br><span class="line"></span><br><span class="line">8 directories, 24 files</span><br></pre></td></tr></table></figure><h2 id="How-to-build-Nginx-RPM"><a href="#How-to-build-Nginx-RPM" class="headerlink" title="How to build Nginx RPM"></a>How to build Nginx RPM</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check nginx stable version from official website</span></span><br><span class="line">http://nginx.org/en/download.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># check configuration</span></span><br><span class="line">vim build.sh</span><br><span class="line"></span><br><span class="line">NGX_VER=1.14.1</span><br><span class="line">WKDIR=<span class="string">"/root/rpmbuild/SOURCES"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># check nginx version</span></span><br><span class="line">vim nginx-spec</span><br><span class="line"></span><br><span class="line">replace 1.14.1 to 1.14.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># run build.sh</span></span><br><span class="line">./build.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># RPM package</span></span><br><span class="line">Processing files: nginx-garena-1.14.2-0.noarch</span><br><span class="line">warning: File listed twice: /etc/nginx/nginx.conf</span><br><span class="line">Provides: config(nginx-garena) = 1.14.2-0 nginx-garena = 1.14.2-0</span><br><span class="line">Requires(interp): /bin/sh</span><br><span class="line">Requires(rpmlib): rpmlib(CompressedFileNames) &lt;= 3.0.4-1 rpmlib(FileDigests) &lt;= 4.6.0-1 rpmlib(PayloadFilesHavePrefix) &lt;= 4.0-1</span><br><span class="line">Requires(post): /bin/sh</span><br><span class="line">Requires: libGeoIP.so.1()(64bit) libc.so.6()(64bit) libc.so.6(GLIBC_2.10)(64bit) libc.so.6(GLIBC_2.11)(64bit) libc.so.6(GLIBC_2.14)(64bit) libc.so.6(GLIBC_2.17)(64bit) libc.so.6(GLIBC_2.2.5)(64bit) libc.so.6(GLIBC_2.3)(64bit) libc.so.6(GLIBC_2.3.2)(64bit) libc.so.6(GLIBC_2.3.4)(64bit) libc.so.6(GLIBC_2.4)(64bit) libc.so.6(GLIBC_2.7)(64bit) libcrypt.so.1()(64bit) libcrypt.so.1(GLIBC_2.2.5)(64bit) libdl.so.2()(64bit) libdl.so.2(GLIBC_2.2.5)(64bit) libgcc_s.so.1()(64bit) libgcc_s.so.1(GCC_3.0)(64bit) libgcc_s.so.1(GCC_3.3)(64bit) libm.so.6()(64bit) libm.so.6(GLIBC_2.2.5)(64bit) libpam.so.0()(64bit) libpam.so.0(LIBPAM_1.0)(64bit) libpcre.so.1()(64bit) libpthread.so.0()(64bit) libpthread.so.0(GLIBC_2.2.5)(64bit) libpthread.so.0(GLIBC_2.3.2)(64bit) libz.so.1()(64bit) rtld(GNU_HASH)</span><br><span class="line">warning: Arch dependent binaries <span class="keyword">in</span> noarch package</span><br><span class="line">Checking <span class="keyword">for</span> unpackaged file(s): /usr/lib/rpm/check-files /root/rpmbuild/BUILDROOT/nginx-garena-1.14.2-0.x86_64</span><br><span class="line">Wrote: /root/rpmbuild/SRPMS/nginx-garena-1.14.2-0.src.rpm</span><br><span class="line">Wrote: /root/rpmbuild/RPMS/noarch/nginx-garena-1.14.2-0.noarch.rpm</span><br><span class="line">Executing(%clean): /bin/sh -e /var/tmp/rpm-tmp.iR5dLd</span><br><span class="line">+ <span class="built_in">umask</span> 022</span><br><span class="line">+ <span class="built_in">cd</span> /root/rpmbuild/BUILD</span><br><span class="line">+ <span class="built_in">cd</span> nginx-garena-1.14.2</span><br><span class="line">+ <span class="string">'['</span> /root/rpmbuild/BUILDROOT/nginx-garena-1.14.2-0.x86_64 <span class="string">'!='</span> / <span class="string">']'</span></span><br><span class="line">+ rm -rf /root/rpmbuild/BUILDROOT/nginx-garena-1.14.2-0.x86_64</span><br><span class="line">+ <span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      使用rpmbuild制作Nginx的RPM包
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>使用 Exhibitor 监控管理 ZooKeeper</title>
    <link href="https://wsgzao.github.io/post/exhibitor/"/>
    <id>https://wsgzao.github.io/post/exhibitor/</id>
    <published>2019-01-07T06:59:49.000Z</published>
    <updated>2019-01-08T03:54:40.055Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Exhibitor 是 Netflix 开源的一个用于 ZooKeeper 配置监控和管理的系统。现在 Netflix Exhibitor 已经成为社区开源公共维护项目 Soabase Exhibitor。Exhibitor 是 ZooKeeper 实例监控，备份，恢复，清理和可视化工具，是 ZooKeeper 的监控管理系统。</p><blockquote><p>使用 Exhibitor 监控管理 ZooKeeper</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 01 月 07 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/exhibitor/">https://wsgzao.github.io/post/exhibitor/</a></p><p><strong> 扩展阅读 </strong></p><p>exhibitor - <a href="https://github.com/soabase/exhibitor" target="_blank" rel="noopener">https://github.com/soabase/exhibitor</a></p><hr><h2 id="exhibitor-简介"><a href="#exhibitor-简介" class="headerlink" title="exhibitor 简介"></a>exhibitor 简介</h2><p>ZooKeeper co-process for instance monitoring, backup/recovery, cleanup and visualization.</p><p>Exhibitor is a Java supervisor system for ZooKeeper. It provides a number of features:</p><ul><li>Watches a ZK instance and makes sure it is running</li><li>Performs periodic backups</li><li>Perform periodic cleaning of ZK log directory</li><li>A GUI explorer for viewing ZK nodes</li><li>A rich REST API</li></ul><p><a href="https://github.com/soabase/exhibitor/wiki" target="_blank" rel="noopener">https://github.com/soabase/exhibitor/wiki</a></p><h2 id="exhibitor-特性"><a href="#exhibitor-特性" class="headerlink" title="exhibitor 特性"></a>exhibitor 特性</h2><blockquote><p>Exhibitor 主要包括以下特性 / 功能：</p></blockquote><p>实例监控</p><p>Exhibitor 实例监控在同一服务器上运行的 ZooKeeper 服务器。如果 ZK 没有运行，Exhibitor 会写入 zoo.cfg 文件（请参阅下面的 ZK 集群配置）并启动它。如果 ZooKeeper 由于某种原因崩溃，Exhibitor 也会重新启动它。</p><p>日志清理</p><p>在 ZooKeeper 3.4.x 之前的版本中，日志文件需要维护，Exhibitor 会负责定期维护。</p><p>备份 / 还原</p><p>ZooKeeper 集群中的备份比传统数据存储（例如 RDBMS）更复杂。一般来说，ZooKeeper 中的大部分数据是短暂的。盲目恢复整个 ZooKeeper 数据集可能会造成更大危害，因此，需要选择性的恢复以防止对数据集的子集造成意外损坏。Exhibitor 提供了这一功能。</p><p>Exhibitor 会定期备份 ZooKeeper 的事务文件，备份后，就可以对这些事务文件建立索引。</p><p>集群配置</p><p>Exhibitor 为整个 Zookeeper 集群提供了一个独立的控制台，通过它所做的配置更改会对整个集群有效。以下是一些共享配置值：</p><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>ZooKeeper Install DirPath</td><td>to the ZooKeeper server installation</td></tr><tr><td>ZooKeeper Data Dir</td><td>Path where ZooKeeper should store its data</td></tr><tr><td>Log Index Dir</td><td>Path where indexed transaction logs should be kept</td></tr><tr><td>Servers</td><td>List of servers/server-ids in the ensemble</td></tr><tr><td>Additional Config</td><td>Additional fields/values to store in zoo.cfg</td></tr></tbody></table><p>集群滚动升级</p><p>Exhibitor 可以以滚动方式更新集群中的服务器，以便在进行更改时让 ZooKeeper 集群确保 Quorum 设定的最低服务能力。</p><p>自动实例管理</p><p>Exhibitor 可以配置为自动向集群中添加新实例，并删除陈旧的实例。这使得 ZooKeeper 集群可以实现 “无接触交钥匙管理”。</p><p>可视化</p><p>Exhibitor 为 ZooKeeper 提供了 ZNode 层次结构的图形树视图。</p><p>ZK 数据维护</p><p>启用后，维护人员可以在 ZooKeeper 的存储层次结构中创建 / 更新 / 删除节点。</p><p>死锁检测</p><p>当使用 Curator 的锁方案（或类似）时，Exhibitor 可以分析一组表示锁的 ZNode，并确定是否存在潜在的死锁。</p><p>Curator 集成</p><p>Exhibitor 和 Curator 可以集成工作，当集群中的信息变更时，Curator 实例可以同步更新。</p><p>REST API</p><p>Exhibitor 提供了一组用于程序集成的 REST API。</p><blockquote><p>重要事项</p></blockquote><ol><li>使用 Exhibitor 时，不要手动编辑 Zookeeper 的 zoo.cfg 和 myid 文件，因为 Exhibitor 会覆盖它们。</li><li>除了标准的 ZooKeeper 端口，防火墙必须打开 Exhibitor 使用的 HTTP 端口，因为每个 Exhibitor 实例需要与其他参与者通信传递状态。</li></ol><blockquote><p>使用</p></blockquote><p>Exhibitor 的部署构件可以从 Maven 仓库获取。构件分为两种：</p><table><thead><tr><th>GroupID/Org</th><th>ArtifactID/Name</th><th>Description</th></tr></thead><tbody><tr><td>com.netflix.exhibitor</td><td>exhibitor-standalone</td><td>自包含的，可执行的 Exhibitor 版本（可以是独立应用，也可以是 War）</td></tr><tr><td>com.netflix.exhibitor</td><td>exhibitor-core</td><td>类库的形式，可以嵌入到应用中</td></tr></tbody></table><h2 id="exhibitor-编译安装"><a href="#exhibitor-编译安装" class="headerlink" title="exhibitor 编译安装"></a>exhibitor 编译安装</h2><blockquote><p>官方分享了 Maven 和 Gradle 两种 build 方法，这里以 Maven 为例</p></blockquote><p><a href="https://github.com/soabase/exhibitor/wiki/Building-Exhibitor" target="_blank" rel="noopener">https://github.com/soabase/exhibitor/wiki/Building-Exhibitor</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install maven</span></span><br><span class="line">yum install -y maven</span><br><span class="line"></span><br><span class="line"><span class="comment"># build exhibitor</span></span><br><span class="line">mkdir exhibitor</span><br><span class="line"><span class="built_in">cd</span> exhibitor/</span><br><span class="line">wget https://github.com/soabase/exhibitor/archive/exhibitor-1.7.1.zip</span><br><span class="line">unzip exhibitor-1.7.1.zip</span><br><span class="line"><span class="built_in">cd</span> exhibitor-exhibitor-1.7.1/exhibitor-standalone/src/main/resources/buildscripts/standalone/maven</span><br><span class="line">mvn clean package</span><br><span class="line"></span><br><span class="line">[INFO] Replacing original artifact with shaded artifact.</span><br><span class="line">[INFO] Replacing /root/exhibitor/exhibitor-exhibitor-1.7.1/exhibitor-standalone/src/main/resources/buildscripts/standalone/maven/target/exhibitor-1.6.0.jar with /root/exhibitor/exhibitor-exhibitor-1.7.1/exhibitor-standalone/src/main/resources/buildscripts/standalone/maven/target/exhibitor-1.6.0-shaded.jar</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 44.624s</span><br><span class="line">[INFO] Finished at: Tue Jan 08 11:28:59 SGT 2019</span><br><span class="line">[INFO] Final Memory: 15M/94M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">cp target/exhibitor-1.6.0.jar /tmp</span><br><span class="line"></span><br><span class="line"><span class="comment"># Once built, Exhibitor is completely self-contained and can be run from the command line:</span></span><br><span class="line">java -jar &lt;path&gt;/exhibitor-xxx.jar -c file</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># java -jar exhibitor-1.6.0.jar -c file</span></span><br><span class="line">v1.6.0</span><br><span class="line">INFO  com.netflix.exhibitor.core.activity.ActivityLog  Exhibitor started [main]</span><br><span class="line">Jan 08, 2019 11:32:38 AM java.util.prefs.FileSystemPreferences<span class="variable">$1</span> run</span><br><span class="line">INFO: Created user preferences directory.</span><br><span class="line">INFO  org.mortbay.log  Logging to org.slf4j.impl.Log4jLoggerAdapter(org.mortbay.log) via org.mortbay.log.Slf4jLog [main]</span><br><span class="line">INFO  org.mortbay.log  jetty-1.6.0 [main]</span><br><span class="line">Jan 08, 2019 11:32:38 AM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate</span><br><span class="line">INFO: Initiating Jersey application, version <span class="string">'Jersey: 1.18.3 12/01/2014 08:23 AM'</span></span><br><span class="line">INFO  org.mortbay.log  Started SocketConnector@0.0.0.0:8080 [main]</span><br><span class="line">Jan 08, 2019 11:33:00 AM java.util.prefs.FileSystemPreferences<span class="variable">$6</span> run</span><br><span class="line">WARNING: Prefs file removed <span class="keyword">in</span> background /root/.java/.userPrefs/prefs.xml</span><br><span class="line">INFO  com.netflix.exhibitor.core.activity.ActivityLog  State: latent [ActivityQueue-0]</span><br><span class="line"></span><br><span class="line"><span class="comment"># You can test that it’s running correctly by going to this URL in a browser: </span></span><br><span class="line">http://localhost:8080/exhibitor/v1/ui/index.html</span><br><span class="line">http://192.168.56.103:8080/exhibitor/v1/ui/index.html</span><br></pre></td></tr></table></figure><h2 id="管理-zookeeper-集群"><a href="#管理-zookeeper-集群" class="headerlink" title="管理 zookeeper 集群"></a>管理 zookeeper 集群</h2><blockquote><p>如果需要通过 Exhibitor 管理 zookeeper 集群需要在集群的每个机器上安装 Exhibitor</p></blockquote><p><a href="https://github.com/soabase/exhibitor/wiki/Configuration-UI" target="_blank" rel="noopener">https://github.com/soabase/exhibitor/wiki/Configuration-UI</a></p><p>重点提一下 Ensemble 中的 Servers 配置:</p><ul><li>服务器 IP 之间用逗号分隔，有两种类型：S 表示标准类型，O 表示 Observer 观察者</li><li>S:1:192.168.56.101,S:2:192.168.56.102,S:3:192.168.56.103</li></ul>]]></content>
    
    <summary type="html">
    
      使用 Exhibitor 监控管理 ZooKeeper
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>PyCharm 使用 autopep8 按 PEP8 风格自动排版 Python 代码</title>
    <link href="https://wsgzao.github.io/post/autopep8/"/>
    <id>https://wsgzao.github.io/post/autopep8/</id>
    <published>2018-12-27T08:40:53.000Z</published>
    <updated>2018-12-27T08:47:45.942Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>autopep8 是一个将 Python 代码自动排版为 PEP8 风格的小工具。它使用 pep8 工具来决定代码中的哪部分需要被排版。autopep8 可以修复大部分 pep8 工具中报告的排版问题。</p><blockquote><p>PyCharm 使用 autopep8 按 PEP8 风格自动排版 Python 代码</p></blockquote><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><p>2018 年 12 月 27 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/autopep8/">https://wsgzao.github.io/post/autopep8/</a></p><p><strong> 扩展阅读 </strong></p><p>autopep8 - <a href="https://pypi.python.org/pypi/autopep8/" target="_blank" rel="noopener">https://pypi.python.org/pypi/autopep8/</a></p><h2 id="autopep8-简介"><a href="#autopep8-简介" class="headerlink" title="autopep8 简介"></a>autopep8 简介</h2><blockquote><p>使用 autopep8 前我们有必要先了解下 PEP 8 – Style Guide for Python Code</p></blockquote><p>autopep8 automatically formats Python code to conform to the PEP 8 style guide. It uses the pycodestyle utility to determine what parts of the code needs to be formatted. autopep8 is capable of fixing most of the formatting issues that can be reported by pycodestyle.</p><p><a href="https://www.python.org/dev/peps/pep-0008/" target="_blank" rel="noopener">https://www.python.org/dev/peps/pep-0008/</a></p><p><a href="https://pypi.python.org/pypi/autopep8/" target="_blank" rel="noopener">https://pypi.python.org/pypi/autopep8/</a></p><h2 id="安装和使用-autopep8"><a href="#安装和使用-autopep8" class="headerlink" title="安装和使用 autopep8"></a>安装和使用 autopep8</h2><p>autopep8 是一个开源的命令行工具，它能够将 Python 代码自动格式化为 PEP8 风格。autopep8 使用 pycodestyle 工具来决定代码中的哪部分需要被格式化，这能够修复大部分 pycodestyle 工具中报告的排版问题。autopep8 本身也是一个 Python 语言编写的工具，因此，我们可以直接使用 pip 进行安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">pip install autopep8</span><br><span class="line">autopep8 --<span class="keyword">in</span>-place optparse.py </span><br><span class="line"></span><br><span class="line"><span class="comment"># To modify a file in place (with aggressive level 2):</span></span><br><span class="line">autopep8 --<span class="keyword">in</span>-place --aggressive --aggressive &lt;filename&gt;</span><br><span class="line"></span><br><span class="line">usage: autopep8 [-h] [--version] [-v] [-d] [-i] [--global-config filename]</span><br><span class="line">                [--ignore-local-config] [-r] [-j n] [-p n] [-a]</span><br><span class="line">                [--experimental] [--exclude globs] [--list-fixes]</span><br><span class="line">                [--ignore errors] [--select errors] [--max-line-length n]</span><br><span class="line">                [--line-range line line] [--hang-closing] [--<span class="built_in">exit</span>-code]</span><br><span class="line">                [files [files ...]]</span><br><span class="line"></span><br><span class="line">Automatically formats Python code to conform to the PEP 8 style guide.</span><br><span class="line"></span><br><span class="line">positional arguments:</span><br><span class="line">  files                 files to format or <span class="string">'-'</span> <span class="keyword">for</span> standard <span class="keyword">in</span></span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">  -h, --<span class="built_in">help</span>            show this <span class="built_in">help</span> message and <span class="built_in">exit</span></span><br><span class="line">  --version             show program<span class="string">'s version number and exit</span></span><br><span class="line"><span class="string">  -v, --verbose         print verbose messages; multiple -v result in more</span></span><br><span class="line"><span class="string">                        verbose messages</span></span><br><span class="line"><span class="string">  -d, --diff            print the diff for the fixed source</span></span><br><span class="line"><span class="string">  -i, --in-place        make changes to files in place</span></span><br><span class="line"><span class="string">  --global-config filename</span></span><br><span class="line"><span class="string">                        path to a global pep8 config file; if this file does</span></span><br><span class="line"><span class="string">                        not exist then this is ignored (default:</span></span><br><span class="line"><span class="string">                        ~/.config/pep8)</span></span><br><span class="line"><span class="string">  --ignore-local-config</span></span><br><span class="line"><span class="string">                        don'</span>t look <span class="keyword">for</span> and apply <span class="built_in">local</span> config files; <span class="keyword">if</span> not</span><br><span class="line">                        passed, defaults are updated with any config files <span class="keyword">in</span></span><br><span class="line">                        the project<span class="string">'s root directory</span></span><br><span class="line"><span class="string">  -r, --recursive       run recursively over directories; must be used with</span></span><br><span class="line"><span class="string">                        --in-place or --diff</span></span><br><span class="line"><span class="string">  -j n, --jobs n        number of parallel jobs; match CPU count if value is</span></span><br><span class="line"><span class="string">                        less than 1</span></span><br><span class="line"><span class="string">  -p n, --pep8-passes n</span></span><br><span class="line"><span class="string">                        maximum number of additional pep8 passes (default:</span></span><br><span class="line"><span class="string">                        infinite)</span></span><br><span class="line"><span class="string">  -a, --aggressive      enable non-whitespace changes; multiple -a result in</span></span><br><span class="line"><span class="string">                        more aggressive changes</span></span><br><span class="line"><span class="string">  --experimental        enable experimental fixes</span></span><br><span class="line"><span class="string">  --exclude globs       exclude file/directory names that match these comma-</span></span><br><span class="line"><span class="string">                        separated globs</span></span><br><span class="line"><span class="string">  --list-fixes          list codes for fixes; used by --ignore and --select</span></span><br><span class="line"><span class="string">  --ignore errors       do not fix these errors/warnings (default:</span></span><br><span class="line"><span class="string">                        E226,E24,W50,W690)</span></span><br><span class="line"><span class="string">  --select errors       fix only these errors/warnings (e.g. E4,W)</span></span><br><span class="line"><span class="string">  --max-line-length n   set maximum allowed line length (default: 79)</span></span><br><span class="line"><span class="string">  --line-range line line, --range line line</span></span><br><span class="line"><span class="string">                        only fix errors found within this inclusive range of</span></span><br><span class="line"><span class="string">                        line numbers (e.g. 1 99); line numbers are indexed at</span></span><br><span class="line"><span class="string">                        1</span></span><br><span class="line"><span class="string">  --hang-closing        hang-closing option passed to pycodestyle</span></span><br><span class="line"><span class="string">  --exit-code           change to behavior of exit code. default behavior of</span></span><br><span class="line"><span class="string">                        return value, 0 is no differences, 1 is error exit.</span></span><br><span class="line"><span class="string">                        return 2 when add this option. 2 is exists</span></span><br><span class="line"><span class="string">                        differences.</span></span><br></pre></td></tr></table></figure><p>–in-place 类似于 sed 命令的 - i 选项，如果不包含 –in-place 选项，则会将 autopep8 格式化以后的代码直接输出到控制台。我们可以使用这种方式检查 autopep8 的修改，使用 –in-place 则会直接将结果保存到源文件中。</p><p>我们来看一个完整的例子，本例中使用的代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os, sys  </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span>  </span><br><span class="line">    <span class="keyword">print</span> [item <span class="keyword">for</span> item <span class="keyword">in</span> os.listdir(<span class="string">'.'</span>) <span class="keyword">if</span> item.endswith(<span class="string">'.py'</span>)];  </span><br><span class="line">    <span class="keyword">print</span> sys.version  </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:  </span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>这段代码存在三个问题：</p><ol><li>导入的时候，应该每一行只导入一个包；</li><li>包导入和函数定义之间应该空两行；</li><li>Python 代码末尾不需要分号。</li></ol><p>接下来，我们将使用 pycodestyple 检查这段代码，然后使用 autopep8 将代码格式化成符合 PEP 8 风格的代码。</p><p>使用 pycodestyle 检查代码可检测到代码中有三个地方不符合 PEP 8 规范，如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pycodestyle hello.py  </span><br><span class="line">hello.py:1:10: E401 multiple imports on one line  </span><br><span class="line">hello.py:3:1: E302 expected 2 blank lines, found 1  </span><br><span class="line">hello.py:4:69: E703 statement ends with a semicolon</span><br></pre></td></tr></table></figure><p>使用 autopep8 格式能够转换 Python 代码。在这个例子中，autopep8 顺利地帮我们修复了所有问题，如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ autopep8 hello.py  </span><br><span class="line"><span class="keyword">import</span> os  </span><br><span class="line"><span class="keyword">import</span> sys  </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span>  </span><br><span class="line">    <span class="keyword">print</span> [item <span class="keyword">for</span> item <span class="keyword">in</span> os.listdir(<span class="string">'.'</span>) <span class="keyword">if</span> item.endswith(<span class="string">'.py'</span>)]  </span><br><span class="line">    <span class="keyword">print</span> sys.version  </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:  </span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>这个时候如果查看源文件的话，会发现还是和原来一样，并没有修正为符合 PEP 8 规范的代码。前面说过，不指定 –in-place 选项，只会将结果输出到命令行。如果我们使用 –in-place 选项，将不会有任何输出，autopep8 会直接修改源文件。</p><pre><code>$ autopep8 --in-place hello.py </code></pre><p>autopep8 还存在 –aggressive 选项，使用该选项会执行更多实质性的更改，可以多次使用以达到更佳的效果。</p><p>以官网为例我们编写一个 test_autopep8.py</p><blockquote><p>Before running autopep8.</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math, sys;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">example1</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">####This is a long comment. This should be wrapped to fit within 72 characters.</span></span><br><span class="line">    some_tuple=(   <span class="number">1</span>,<span class="number">2</span>, <span class="number">3</span>,<span class="string">'a'</span>  );</span><br><span class="line">    some_variable=&#123;<span class="string">'long'</span>:<span class="string">'Long code lines should be wrapped within 79 characters.'</span>,</span><br><span class="line">    <span class="string">'other'</span>:[math.pi, <span class="number">100</span>,<span class="number">200</span>,<span class="number">300</span>,<span class="number">9876543210</span>,<span class="string">'This is a long string that goes on'</span>],</span><br><span class="line">    <span class="string">'more'</span>:&#123;<span class="string">'inner'</span>:<span class="string">'This whole logical line should be wrapped.'</span>,some_tuple:[<span class="number">1</span>,</span><br><span class="line">    <span class="number">20</span>,<span class="number">300</span>,<span class="number">40000</span>,<span class="number">500000000</span>,<span class="number">60000000000000000</span>]&#125;&#125;</span><br><span class="line">    <span class="keyword">return</span> (some_tuple, some_variable)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">example2</span><span class="params">()</span>:</span> <span class="keyword">return</span> &#123;<span class="string">'has_key() is deprecated'</span>:<span class="keyword">True</span>&#125;.has_key(&#123;<span class="string">'f'</span>:<span class="number">2</span>&#125;.has_key(<span class="string">''</span>));</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example3</span><span class="params">(   object )</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>    <span class="params">( self, bar )</span>:</span></span><br><span class="line">     <span class="comment">#Comments should have a space after the hash.</span></span><br><span class="line">     <span class="keyword">if</span> bar : bar+=<span class="number">1</span>;  bar=bar* bar   ; <span class="keyword">return</span> bar</span><br><span class="line">     <span class="keyword">else</span>:</span><br><span class="line">                    some_string = <span class="string">"""</span></span><br><span class="line"><span class="string">                       Indentation in multiline strings should not be touched.</span></span><br><span class="line"><span class="string">Only actual code should be reindented.</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">                    <span class="keyword">return</span> (sys.path, some_string)</span><br></pre></td></tr></table></figure><blockquote><p>After running autopep8.</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">example1</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># This is a long comment. This should be wrapped to fit within 72</span></span><br><span class="line">    <span class="comment"># characters.</span></span><br><span class="line">    some_tuple = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">'a'</span>)</span><br><span class="line">    some_variable = &#123;</span><br><span class="line">        <span class="string">'long'</span>: <span class="string">'Long code lines should be wrapped within 79 characters.'</span>,</span><br><span class="line">        <span class="string">'other'</span>: [</span><br><span class="line">            math.pi,</span><br><span class="line">            <span class="number">100</span>,</span><br><span class="line">            <span class="number">200</span>,</span><br><span class="line">            <span class="number">300</span>,</span><br><span class="line">            <span class="number">9876543210</span>,</span><br><span class="line">            <span class="string">'This is a long string that goes on'</span>],</span><br><span class="line">        <span class="string">'more'</span>: &#123;</span><br><span class="line">            <span class="string">'inner'</span>: <span class="string">'This whole logical line should be wrapped.'</span>,</span><br><span class="line">            some_tuple: [</span><br><span class="line">                <span class="number">1</span>,</span><br><span class="line">                <span class="number">20</span>,</span><br><span class="line">                <span class="number">300</span>,</span><br><span class="line">                <span class="number">40000</span>,</span><br><span class="line">                <span class="number">500000000</span>,</span><br><span class="line">                <span class="number">60000000000000000</span>]&#125;&#125;</span><br><span class="line">    <span class="keyword">return</span> (some_tuple, some_variable)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">example2</span><span class="params">()</span>:</span> <span class="keyword">return</span> (<span class="string">''</span> <span class="keyword">in</span> &#123;<span class="string">'f'</span>: <span class="number">2</span>&#125;) <span class="keyword">in</span> &#123;<span class="string">'has_key() is deprecated'</span>: <span class="keyword">True</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example3</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, bar)</span>:</span></span><br><span class="line">        <span class="comment"># Comments should have a space after the hash.</span></span><br><span class="line">        <span class="keyword">if</span> bar:</span><br><span class="line">            bar += <span class="number">1</span></span><br><span class="line">            bar = bar * bar</span><br><span class="line">            <span class="keyword">return</span> bar</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            some_string = <span class="string">"""</span></span><br><span class="line"><span class="string">                       Indentation in multiline strings should not be touched.</span></span><br><span class="line"><span class="string">Only actual code should be reindented.</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">            <span class="keyword">return</span> (sys.path, some_string)</span><br></pre></td></tr></table></figure><h2 id="autopep8-可以修复的问题"><a href="#autopep8-可以修复的问题" class="headerlink" title="autopep8 可以修复的问题"></a>autopep8 可以修复的问题</h2><blockquote><p>autopep8 fixes the following issues reported by pycodestyle:</p></blockquote><p><a href="https://github.com/PyCQA/pycodestyle" target="_blank" rel="noopener">https://github.com/PyCQA/pycodestyle</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">E101 - Reindent all lines.</span><br><span class="line">E11  - Fix indentation.</span><br><span class="line">E121 - Fix indentation to be a multiple of four.</span><br><span class="line">E122 - Add absent indentation <span class="keyword">for</span> hanging indentation.</span><br><span class="line">E123 - Align closing bracket to match opening bracket.</span><br><span class="line">E124 - Align closing bracket to match visual indentation.</span><br><span class="line">E125 - Indent to distinguish line from next logical line.</span><br><span class="line">E126 - Fix over-indented hanging indentation.</span><br><span class="line">E127 - Fix visual indentation.</span><br><span class="line">E128 - Fix visual indentation.</span><br><span class="line">E129 - Fix visual indentation.</span><br><span class="line">E131 - Fix hanging indent <span class="keyword">for</span> unaligned continuation line.</span><br><span class="line">E133 - Fix missing indentation <span class="keyword">for</span> closing bracket.</span><br><span class="line">E20  - Remove extraneous whitespace.</span><br><span class="line">E211 - Remove extraneous whitespace.</span><br><span class="line">E22  - Fix extraneous whitespace around keywords.</span><br><span class="line">E224 - Remove extraneous whitespace around operator.</span><br><span class="line">E225 - Fix missing whitespace around operator.</span><br><span class="line">E226 - Fix missing whitespace around arithmetic operator.</span><br><span class="line">E227 - Fix missing whitespace around bitwise/<span class="built_in">shift</span> operator.</span><br><span class="line">E228 - Fix missing whitespace around modulo operator.</span><br><span class="line">E231 - Add missing whitespace.</span><br><span class="line">E241 - Fix extraneous whitespace around keywords.</span><br><span class="line">E242 - Remove extraneous whitespace around operator.</span><br><span class="line">E251 - Remove whitespace around parameter <span class="string">'='</span> sign.</span><br><span class="line">E252 - Missing whitespace around parameter equals.</span><br><span class="line">E26  - Fix spacing after comment <span class="built_in">hash</span> <span class="keyword">for</span> inline comments.</span><br><span class="line">E265 - Fix spacing after comment <span class="built_in">hash</span> <span class="keyword">for</span> block comments.</span><br><span class="line">E266 - Fix too many leading <span class="string">'#'</span> <span class="keyword">for</span> block comments.</span><br><span class="line">E27  - Fix extraneous whitespace around keywords.</span><br><span class="line">E301 - Add missing blank line.</span><br><span class="line">E302 - Add missing 2 blank lines.</span><br><span class="line">E303 - Remove extra blank lines.</span><br><span class="line">E304 - Remove blank line following <span class="keyword">function</span> decorator.</span><br><span class="line">E305 - Expected 2 blank lines after end of <span class="keyword">function</span> or class.</span><br><span class="line">E306 - Expected 1 blank line before a nested definition.</span><br><span class="line">E401 - Put imports on separate lines.</span><br><span class="line">E402 - Fix module level import not at top of file</span><br><span class="line">E501 - Try to make lines fit within --max-line-length characters.</span><br><span class="line">E502 - Remove extraneous escape of newline.</span><br><span class="line">E701 - Put colon-separated compound statement on separate lines.</span><br><span class="line">E70  - Put semicolon-separated compound statement on separate lines.</span><br><span class="line">E711 - Fix comparison with None.</span><br><span class="line">E712 - Fix comparison with boolean.</span><br><span class="line">E713 - Use <span class="string">'not in'</span> <span class="keyword">for</span> <span class="built_in">test</span> <span class="keyword">for</span> membership.</span><br><span class="line">E714 - Use <span class="string">'is not'</span> <span class="built_in">test</span> <span class="keyword">for</span> object identity.</span><br><span class="line">E721 - Use <span class="string">"isinstance()"</span> instead of comparing types directly.</span><br><span class="line">E722 - Fix bare except.</span><br><span class="line">E731 - Use a def when use <span class="keyword">do</span> not assign a lambda expression.</span><br><span class="line">W291 - Remove trailing whitespace.</span><br><span class="line">W292 - Add a single newline at the end of the file.</span><br><span class="line">W293 - Remove trailing whitespace on blank line.</span><br><span class="line">W391 - Remove trailing blank lines.</span><br><span class="line">W503 - Fix line <span class="built_in">break</span> before binary operator.</span><br><span class="line">W504 - Fix line <span class="built_in">break</span> after binary operator.</span><br><span class="line">W601 - Use <span class="string">"in"</span> rather than <span class="string">"has_key()"</span>.</span><br><span class="line">W602 - Fix deprecated form of raising exception.</span><br><span class="line">W603 - Use <span class="string">"!="</span> instead of <span class="string">"&lt;&gt;"</span></span><br><span class="line">W604 - Use <span class="string">"repr()"</span> instead of backticks.</span><br><span class="line">W605 - Fix invalid escape sequence <span class="string">'x'</span>.</span><br><span class="line">W690 - Fix various deprecated code (via lib2to3).</span><br></pre></td></tr></table></figure><h2 id="Pycharm-安装-autopep8"><a href="#Pycharm-安装-autopep8" class="headerlink" title="Pycharm 安装 autopep8"></a>Pycharm 安装 autopep8</h2><p>pip 安装 autopep8: pip install autopep8</p><p>PyCharm -&gt; Preferences -&gt; Tools -&gt; Extends Tools -&gt; 点击 + 加号</p><p>Name: autopep8<br>Tools settings:</p><ul><li>Programs: <code>autopep8</code></li><li>Parameters: <code>--in-place --aggressive --aggressive $FilePath$</code></li><li>Working directory: <code>$ProjectFileDir$</code></li><li>Advanced Options -&gt; Output Filters: <code>$FILE_PATH$\:$LINE$\:$COLUMN$\:.*</code></li></ul><h2 id="Python-之禅"><a href="#Python-之禅" class="headerlink" title="Python 之禅"></a>Python 之禅</h2><blockquote><p>最后以 Python 之禅作为结束语</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"> wangao@wangao-MAC  ~  python3</span><br><span class="line">Python <span class="number">3.7</span><span class="number">.1</span> (default, Nov  <span class="number">6</span> <span class="number">2018</span>, <span class="number">18</span>:<span class="number">46</span>:<span class="number">03</span>)</span><br><span class="line">[Clang <span class="number">10.0</span><span class="number">.0</span> (clang<span class="number">-1000.11</span><span class="number">.45</span><span class="number">.5</span>)] on darwin</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> <span class="keyword">or</span> <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> this</span><br><span class="line">The Zen of Python, by Tim Peters</span><br><span class="line"></span><br><span class="line">Beautiful <span class="keyword">is</span> better than ugly.</span><br><span class="line">Explicit <span class="keyword">is</span> better than implicit.</span><br><span class="line">Simple <span class="keyword">is</span> better than complex.</span><br><span class="line">Complex <span class="keyword">is</span> better than complicated.</span><br><span class="line">Flat <span class="keyword">is</span> better than nested.</span><br><span class="line">Sparse <span class="keyword">is</span> better than dense.</span><br><span class="line">Readability counts.</span><br><span class="line">Special cases aren<span class="string">'t special enough to break the rules.</span></span><br><span class="line"><span class="string">Although practicality beats purity.</span></span><br><span class="line"><span class="string">Errors should never pass silently.</span></span><br><span class="line"><span class="string">Unless explicitly silenced.</span></span><br><span class="line"><span class="string">In the face of ambiguity, refuse the temptation to guess.</span></span><br><span class="line"><span class="string">There should be one-- and preferably only one --obvious way to do it.</span></span><br><span class="line"><span class="string">Although that way may not be obvious at first unless you'</span>re Dutch.</span><br><span class="line">Now <span class="keyword">is</span> better than never.</span><br><span class="line">Although never <span class="keyword">is</span> often better than *right* now.</span><br><span class="line">If the implementation <span class="keyword">is</span> hard to explain, it<span class="string">'s a bad idea.</span></span><br><span class="line"><span class="string">If the implementation is easy to explain, it may be a good idea.</span></span><br><span class="line"><span class="string">Namespaces are one honking great idea -- let'</span>s do more of those!</span><br></pre></td></tr></table></figure><blockquote><p>翻译</p></blockquote><p>美 优于 丑</p><p>明确 优于 隐晦 （1）</p><p>简单 优于 复杂</p><p>复杂 也好过 繁复 （2）</p><p>扁平 优于 嵌套</p><p>稀疏 优于 拥挤</p><p>可读性很重要（3）</p><p>固然代码实用与否 比洁癖更重要，</p><p>我们以为的特例也往往没有特殊到必须打破上述规则的程度</p><p>除非刻意地静默，</p><p>否则不要无故忽视异常（4）</p><p>如果遇到模棱两可的逻辑，请不要自作聪明地瞎猜。</p><p>应该提供一种，且最好只提供一种，一目了然的解决方案</p><p>当然这是没法一蹴而就的，除非你是荷兰人（5）</p><p>固然，立刻着手 好过 永远不做。</p><p>然而，永远不做 也好过 不审慎思考一撸袖子就莽着干</p><p>如果你的实现很难解释，它就一定不是个好主意</p><p>即使你的实现简单到爆，它也有可能是个好办法</p><p>命名空间大法好，不搞不是地球人！</p><blockquote><p>注释</p></blockquote><ol><li>该引入的包一个一个列出来不要合并；不要用星号；不要在方法里藏意想不到的的副作用，等等等等。还一个例子，另外一种著名的软件设计原则 Convention over Configuration（约定优于配置）如果做得不谨慎就会违背这条</li><li>SO: 必要的复杂逻辑是难免的，而繁复啰嗦的代码是不可接受的</li><li>Readability counts 不能翻译成可读性计数啊喂</li><li>实操中很多人不注意 catch 完就 log 一下 就不管了，这样不好。软件界一般都讲 Let it fail，学名为 Fail-fast 法则。简而言之就是整个项目周期中越早暴露的问题，其修复成本越低</li><li>本文作者 Tim peters 解释说这里的荷兰人指的是 Python 的作者 Guido van Rossum</li></ol>]]></content>
    
    <summary type="html">
    
      PyCharm使用Autopep8按PEP8风格自动排版Python代码
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>macOS Mojave 降级安装 MySQL 5.7</title>
    <link href="https://wsgzao.github.io/post/macos-mysql/"/>
    <id>https://wsgzao.github.io/post/macos-mysql/</id>
    <published>2018-12-17T06:59:49.000Z</published>
    <updated>2018-12-18T09:06:02.622Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>自从 macOS 升级至 Mojave 后小问题不断，现在使用 Homebrew 安装 MySQL 默认也是 8.0 版本，和 Python 类似我们依赖的组件可能还不支持高版本，新版本的某些更新和调整导致比如 Sequel Pro 和 mysqldb 不可用。当然我们也可以使用官方的 MySQLWorkbench，之前介绍了如何在 macOS 下安装多版本 Python，现在继续分享 macOS 如何降级 MySQL。</p><blockquote><p>macOS Mojave 降级安装 MySQL 5.7</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2018 年 12 月 17 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/macos-mysql/">https://wsgzao.github.io/post/macos-mysql/</a></p><p><strong> 扩展阅读 </strong></p><p>Install MySQL 5.7 on macOS Mojave - <a href="https://medium.com/@at0dd/install-mysql-5-7-on-mac-os-mojave-cd07ec936034" target="_blank" rel="noopener">https://medium.com/@at0dd/install-mysql-5-7-on-mac-os-mojave-cd07ec936034</a></p><hr><h2 id="正常安装"><a href="#正常安装" class="headerlink" title="正常安装"></a>正常安装</h2><blockquote><p>默认新版本是 MySQL 8.0</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">brew update</span><br><span class="line">brew install mysql</span><br><span class="line"></span><br><span class="line">We<span class="string">'ve installed your MySQL database without a root password. To secure it run:</span></span><br><span class="line"><span class="string">    mysql_secure_installation</span></span><br><span class="line"><span class="string">MySQL is configured to only allow connections from localhost by default</span></span><br><span class="line"><span class="string">To connect run:</span></span><br><span class="line"><span class="string">    mysql -uroot</span></span><br><span class="line"><span class="string">To have launchd start mysql now and restart at login:</span></span><br><span class="line"><span class="string">  brew services start mysql</span></span><br><span class="line"><span class="string">Or, if you don'</span>t want/need a background service you can just run:</span><br><span class="line">  mysql.server start</span><br></pre></td></tr></table></figure><h2 id="卸载现有版本"><a href="#卸载现有版本" class="headerlink" title="卸载现有版本"></a>卸载现有版本</h2><blockquote><p>无论是官方 dmg 还是 brew 都记得先备份重要数据后再清理</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 正常关闭并删除 MySQL</span></span><br><span class="line">mysql.server stop</span><br><span class="line">brew services stop mysql</span><br><span class="line">brew remove mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 无法正常删除 MySQL</span></span><br><span class="line">ps -ax | grep mysql</span><br><span class="line">stop and <span class="built_in">kill</span> any MySQL processes</span><br><span class="line">brew remove mysql</span><br><span class="line">brew cleanup</span><br><span class="line">sudo rm /usr/<span class="built_in">local</span>/mysql</span><br><span class="line">sudo rm -rf /usr/<span class="built_in">local</span>/var/mysql</span><br><span class="line">sudo rm -rf /usr/<span class="built_in">local</span>/mysql*</span><br></pre></td></tr></table></figure><h2 id="安装-MySQL-指定版本"><a href="#安装-MySQL-指定版本" class="headerlink" title="安装 MySQL 指定版本"></a>安装 MySQL 指定版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 MySQL 5.7</span></span><br><span class="line">brew install mysql@5.7</span><br><span class="line">brew link --force mysql@5.7</span><br><span class="line"></span><br><span class="line">We<span class="string">'ve installed your MySQL database without a root password. To secure it run:</span></span><br><span class="line"><span class="string">    mysql_secure_installation</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">MySQL is configured to only allow connections from localhost by default</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">To connect run:</span></span><br><span class="line"><span class="string">    mysql -uroot</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">mysql@5.7 is keg-only, which means it was not symlinked into /usr/local,</span></span><br><span class="line"><span class="string">because this is an alternate version of another formula.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">If you need to have mysql@5.7 first in your PATH run:</span></span><br><span class="line"><span class="string">  echo'</span><span class="built_in">export</span> PATH=<span class="string">"/usr/local/opt/mysql@5.7/bin:<span class="variable">$PATH</span>"</span><span class="string">'&gt;&gt; ~/.zshrc</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">For compilers to find mysql@5.7 you may need to set:</span></span><br><span class="line"><span class="string">  export LDFLAGS="-L/usr/local/opt/mysql@5.7/lib"</span></span><br><span class="line"><span class="string">  export CPPFLAGS="-I/usr/local/opt/mysql@5.7/include"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">For pkg-config to find mysql@5.7 you may need to set:</span></span><br><span class="line"><span class="string">  export PKG_CONFIG_PATH="/usr/local/opt/mysql@5.7/lib/pkgconfig"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">To have launchd start mysql@5.7 now and restart at login:</span></span><br><span class="line"><span class="string">  brew services start mysql@5.7</span></span><br><span class="line"><span class="string">Or, if you don'</span>t want/need a background service you can just run:</span><br><span class="line">  /usr/<span class="built_in">local</span>/opt/mysql@5.7/bin/mysql.server start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开机自启动 </span></span><br><span class="line">brew services restart mysql@5.7</span><br><span class="line"><span class="comment"># 设置环境变量 </span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export PATH="/usr/local/opt/mysql@5.7/bin:$PATH"'</span> &gt;&gt; ~/.zshrc</span><br><span class="line"><span class="comment"># 手动启动和关闭 </span></span><br><span class="line">/usr/<span class="built_in">local</span>/opt/mysql@5.7/bin/mysql.server start</span><br><span class="line">/usr/<span class="built_in">local</span>/opt/mysql@5.7/bin/mysql.server stop</span><br></pre></td></tr></table></figure><h2 id="安装-mysqldb"><a href="#安装-mysqldb" class="headerlink" title="安装 mysqldb"></a>安装 mysqldb</h2><p>Python 中最连接 Mysql 常用的驱动是:</p><ul><li>mysql-python ：mysql 的 C 语言的驱动</li><li>mysql-connector：msql 官方的驱动</li><li>pymysql：python 语言的驱动</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 MySQLdb ，但是提示 importerror no module named mysqldb</span></span><br><span class="line">brew install mysql-connector-c</span><br><span class="line">pip install mysql-python</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可能会出现以下错误，按照提示做即可 </span></span><br><span class="line">Error: Cannot install mysql because conflicting formulae are installed.</span><br><span class="line">  mysql-connector-c: because both install MySQL client libraries</span><br><span class="line"></span><br><span class="line">Please `brew unlink mysql-connector-c` before continuing.</span><br><span class="line"></span><br><span class="line">Unlinking removes a formula<span class="string">'s symlinks from /usr/local. You can</span></span><br><span class="line"><span class="string">link the formula again after the install finishes. You can --force this</span></span><br><span class="line"><span class="string">install, but the build may fail or cause obscure side-effects in the</span></span><br><span class="line"><span class="string">resulting software.</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      macOS Mojave 降级安装 MySQL 5.7
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>macOS 使用 pyenv 安装和管理多个 Python 版本</title>
    <link href="https://wsgzao.github.io/post/macos-pyenv/"/>
    <id>https://wsgzao.github.io/post/macos-pyenv/</id>
    <published>2018-12-16T06:59:49.000Z</published>
    <updated>2018-12-17T08:02:21.390Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>目前 Python 同时更新与维护 Python2 和 Python3，选择 Python2 还是选择 Python3，取决于当前要使用的库、框架支持哪个版本，所以经常会遇到切换版本的情况。那么 macOS 下应该怎样有效的更改呢？很多小伙伴一定会想到修改环境变量，指定 Python 的默认路径，这样当然可以，然而不够优雅。那么怎样的方法才算优雅呢？当然是一条命令了。这里通过 brew 安装 pyenv，再用 pyenv 安装管理 Python。</p><blockquote><p>macOS 使用 pyenv 安装和管理多个 Python 版本</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2018 年 12 月 16 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/macos-pyenv/">https://wsgzao.github.io/post/macos-pyenv/</a></p><p><strong> 扩展阅读 </strong></p><p>pyenv - <a href="https://github.com/pyenv/pyenv" target="_blank" rel="noopener">https://github.com/pyenv/pyenv</a></p><hr><h2 id="pyenv-简介"><a href="#pyenv-简介" class="headerlink" title="pyenv 简介"></a>pyenv 简介</h2><p>pyenv lets you easily switch between multiple versions of Python. It’s simple, unobtrusive, and follows the UNIX tradition of single-purpose tools that do one thing well.</p><p>This project was forked from <a href="https://github.com/rbenv/rbenv" target="_blank" rel="noopener">rbenv</a> and <a href="https://github.com/rbenv/ruby-build" target="_blank" rel="noopener">ruby-build</a>, and modified for Python.</p><p><img src="https://github.com/pyenv/pyenv/raw/master/terminal_output.png" alt="Terminal output example"></p><p>pyenv <em>does…</em></p><ul><li>Let you <strong>change the global Python version</strong> on a per-user basis.</li><li>Provide support for <strong>per-project Python versions</strong>.</li><li>Allow you to <strong>override the Python version</strong> with an environment variable.</li><li>Search commands from <strong>multiple versions of Python at a time</strong>.<br>This may be helpful to test across Python versions with <a href="https://pypi.python.org/pypi/tox" target="_blank" rel="noopener">tox</a>.</li></ul><p>In contrast with pythonbrew and pythonz, pyenv <em>does not…</em></p><ul><li><strong>Depend on Python itself.</strong> pyenv was made from pure shell scripts. There is no bootstrap problem of Python.</li><li><strong>Need to be loaded into your shell.</strong> Instead, pyenv’s shim approach works by adding a directory to your <code>$PATH</code>.</li><li><strong>Manage virtualenv.</strong> Of course, you can create <a href="https://pypi.python.org/pypi/virtualenv" target="_blank" rel="noopener">virtualenv</a> yourself, or <a href="https://github.com/pyenv/pyenv-virtualenv" target="_blank" rel="noopener">pyenv-virtualenv</a> to automate the process.</li></ul><h2 id="安装-pyenv"><a href="#安装-pyenv" class="headerlink" title="安装 pyenv"></a>安装 pyenv</h2><blockquote><p>Homebrew 是 macOS 下非常高效的命令行软件包管理器，mac 必安装工具之一</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 homebrew</span></span><br><span class="line">/usr/bin/ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br><span class="line">brew -v</span><br><span class="line">Homebrew 1.8.5</span><br><span class="line">Homebrew/homebrew-core (git revision 497ca; last commit 2018-12-16)</span><br><span class="line">Homebrew/homebrew-cask (git revision 8be7c; last commit 2018-12-17)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 pyenv</span></span><br><span class="line">brew update</span><br><span class="line">brew install pyenv</span><br><span class="line">pyenv -v</span><br><span class="line">pyenv 1.2.8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装管理多个 Python</span></span><br><span class="line">pyenv install --list</span><br><span class="line">Available versions:</span><br><span class="line">  2.1.3</span><br><span class="line">  2.2.3</span><br><span class="line">  2.3.7</span><br><span class="line">  2.4</span><br><span class="line">  2.4.1</span><br><span class="line">  2.4.2</span><br><span class="line">  2.4.3</span><br><span class="line">  2.4.4</span><br><span class="line">  2.4.5</span><br><span class="line">  2.4.6</span><br><span class="line">  2.5</span><br><span class="line">  2.5.1</span><br><span class="line">  2.5.2</span><br><span class="line">  2.5.3</span><br><span class="line">  2.5.4</span><br><span class="line">  2.5.5</span><br><span class="line">  2.5.6</span><br><span class="line">  2.6.6</span><br><span class="line">  2.6.7</span><br><span class="line">  2.6.8</span><br><span class="line">  2.6.9</span><br><span class="line">  2.7-dev</span><br><span class="line">  2.7</span><br><span class="line">  2.7.1</span><br><span class="line">  2.7.2</span><br><span class="line">  2.7.3</span><br><span class="line">  2.7.4</span><br><span class="line">  2.7.5</span><br><span class="line">  2.7.6</span><br><span class="line">  2.7.7</span><br><span class="line">  2.7.8</span><br><span class="line">  2.7.9</span><br><span class="line">  2.7.10</span><br><span class="line">  2.7.11</span><br><span class="line">  2.7.12</span><br><span class="line">  2.7.13</span><br><span class="line">  2.7.14</span><br><span class="line">  2.7.15</span><br><span class="line">  3.0.1</span><br><span class="line">  3.1</span><br><span class="line">  3.1.1</span><br><span class="line">  3.1.2</span><br><span class="line">  3.1.3</span><br><span class="line">  3.1.4</span><br><span class="line">  3.1.5</span><br><span class="line">  3.2</span><br><span class="line">  3.2.1</span><br><span class="line">  3.2.2</span><br><span class="line">  3.2.3</span><br><span class="line">  3.2.4</span><br><span class="line">  3.2.5</span><br><span class="line">  3.2.6</span><br><span class="line">  3.3.0</span><br><span class="line">  3.3.1</span><br><span class="line">  3.3.2</span><br><span class="line">  3.3.3</span><br><span class="line">  3.3.4</span><br><span class="line">  3.3.5</span><br><span class="line">  3.3.6</span><br><span class="line">  3.3.7</span><br><span class="line">  3.4.0</span><br><span class="line">  3.4-dev</span><br><span class="line">  3.4.1</span><br><span class="line">  3.4.2</span><br><span class="line">  3.4.3</span><br><span class="line">  3.4.4</span><br><span class="line">  3.4.5</span><br><span class="line">  3.4.6</span><br><span class="line">  3.4.7</span><br><span class="line">  3.4.8</span><br><span class="line">  3.4.9</span><br><span class="line">  3.5.0</span><br><span class="line">  3.5-dev</span><br><span class="line">  3.5.1</span><br><span class="line">  3.5.2</span><br><span class="line">  3.5.3</span><br><span class="line">  3.5.4</span><br><span class="line">  3.5.5</span><br><span class="line">  3.5.6</span><br><span class="line">  3.6.0</span><br><span class="line">  3.6-dev</span><br><span class="line">  3.6.1</span><br><span class="line">  3.6.2</span><br><span class="line">  3.6.3</span><br><span class="line">  3.6.4</span><br><span class="line">  3.6.5</span><br><span class="line">  3.6.6</span><br><span class="line">  3.6.7</span><br><span class="line">  3.7.0</span><br><span class="line">  3.7-dev</span><br><span class="line">  3.7.1</span><br><span class="line">  3.8-dev</span><br><span class="line">  activepython-2.7.14</span><br><span class="line">  activepython-3.5.4</span><br><span class="line">  activepython-3.6.0</span><br><span class="line">  anaconda-1.4.0</span><br><span class="line">  anaconda-1.5.0</span><br><span class="line">  anaconda-1.5.1</span><br><span class="line">  anaconda-1.6.0</span><br><span class="line">  anaconda-1.6.1</span><br><span class="line">  anaconda-1.7.0</span><br><span class="line">  anaconda-1.8.0</span><br><span class="line">  anaconda-1.9.0</span><br><span class="line">  anaconda-1.9.1</span><br><span class="line">  anaconda-1.9.2</span><br><span class="line">  anaconda-2.0.0</span><br><span class="line">  anaconda-2.0.1</span><br><span class="line">  anaconda-2.1.0</span><br><span class="line">  anaconda-2.2.0</span><br><span class="line">  anaconda-2.3.0</span><br><span class="line">  anaconda-2.4.0</span><br><span class="line">  anaconda-4.0.0</span><br><span class="line">  anaconda2-2.4.0</span><br><span class="line">  anaconda2-2.4.1</span><br><span class="line">  anaconda2-2.5.0</span><br><span class="line">  anaconda2-4.0.0</span><br><span class="line">  anaconda2-4.1.0</span><br><span class="line">  anaconda2-4.1.1</span><br><span class="line">  anaconda2-4.2.0</span><br><span class="line">  anaconda2-4.3.0</span><br><span class="line">  anaconda2-4.3.1</span><br><span class="line">  anaconda2-4.4.0</span><br><span class="line">  anaconda2-5.0.0</span><br><span class="line">  anaconda2-5.0.1</span><br><span class="line">  anaconda2-5.1.0</span><br><span class="line">  anaconda2-5.2.0</span><br><span class="line">  anaconda2-5.3.0</span><br><span class="line">  anaconda3-2.0.0</span><br><span class="line">  anaconda3-2.0.1</span><br><span class="line">  anaconda3-2.1.0</span><br><span class="line">  anaconda3-2.2.0</span><br><span class="line">  anaconda3-2.3.0</span><br><span class="line">  anaconda3-2.4.0</span><br><span class="line">  anaconda3-2.4.1</span><br><span class="line">  anaconda3-2.5.0</span><br><span class="line">  anaconda3-4.0.0</span><br><span class="line">  anaconda3-4.1.0</span><br><span class="line">  anaconda3-4.1.1</span><br><span class="line">  anaconda3-4.2.0</span><br><span class="line">  anaconda3-4.3.0</span><br><span class="line">  anaconda3-4.3.1</span><br><span class="line">  anaconda3-4.4.0</span><br><span class="line">  anaconda3-5.0.0</span><br><span class="line">  anaconda3-5.0.1</span><br><span class="line">  anaconda3-5.1.0</span><br><span class="line">  anaconda3-5.2.0</span><br><span class="line">  anaconda3-5.3.0</span><br><span class="line">  ironpython-dev</span><br><span class="line">  ironpython-2.7.4</span><br><span class="line">  ironpython-2.7.5</span><br><span class="line">  ironpython-2.7.6.3</span><br><span class="line">  ironpython-2.7.7</span><br><span class="line">  jython-dev</span><br><span class="line">  jython-2.5.0</span><br><span class="line">  jython-2.5-dev</span><br><span class="line">  jython-2.5.1</span><br><span class="line">  jython-2.5.2</span><br><span class="line">  jython-2.5.3</span><br><span class="line">  jython-2.5.4-rc1</span><br><span class="line">  jython-2.7.0</span><br><span class="line">  jython-2.7.1</span><br><span class="line">  micropython-dev</span><br><span class="line">  micropython-1.9.3</span><br><span class="line">  micropython-1.9.4</span><br><span class="line">  miniconda-latest</span><br><span class="line">  miniconda-2.2.2</span><br><span class="line">  miniconda-3.0.0</span><br><span class="line">  miniconda-3.0.4</span><br><span class="line">  miniconda-3.0.5</span><br><span class="line">  miniconda-3.3.0</span><br><span class="line">  miniconda-3.4.2</span><br><span class="line">  miniconda-3.7.0</span><br><span class="line">  miniconda-3.8.3</span><br><span class="line">  miniconda-3.9.1</span><br><span class="line">  miniconda-3.10.1</span><br><span class="line">  miniconda-3.16.0</span><br><span class="line">  miniconda-3.18.3</span><br><span class="line">  miniconda2-latest</span><br><span class="line">  miniconda2-3.18.3</span><br><span class="line">  miniconda2-3.19.0</span><br><span class="line">  miniconda2-4.0.5</span><br><span class="line">  miniconda2-4.1.11</span><br><span class="line">  miniconda2-4.3.14</span><br><span class="line">  miniconda2-4.3.21</span><br><span class="line">  miniconda2-4.3.27</span><br><span class="line">  miniconda2-4.3.30</span><br><span class="line">  miniconda3-latest</span><br><span class="line">  miniconda3-2.2.2</span><br><span class="line">  miniconda3-3.0.0</span><br><span class="line">  miniconda3-3.0.4</span><br><span class="line">  miniconda3-3.0.5</span><br><span class="line">  miniconda3-3.3.0</span><br><span class="line">  miniconda3-3.4.2</span><br><span class="line">  miniconda3-3.7.0</span><br><span class="line">  miniconda3-3.8.3</span><br><span class="line">  miniconda3-3.9.1</span><br><span class="line">  miniconda3-3.10.1</span><br><span class="line">  miniconda3-3.16.0</span><br><span class="line">  miniconda3-3.18.3</span><br><span class="line">  miniconda3-3.19.0</span><br><span class="line">  miniconda3-4.0.5</span><br><span class="line">  miniconda3-4.1.11</span><br><span class="line">  miniconda3-4.2.12</span><br><span class="line">  miniconda3-4.3.11</span><br><span class="line">  miniconda3-4.3.14</span><br><span class="line">  miniconda3-4.3.21</span><br><span class="line">  miniconda3-4.3.27</span><br><span class="line">  miniconda3-4.3.30</span><br><span class="line">  pypy-c-jit-latest</span><br><span class="line">  pypy-c-nojit-latest</span><br><span class="line">  pypy-dev</span><br><span class="line">  pypy-stm-2.3</span><br><span class="line">  pypy-stm-2.5.1</span><br><span class="line">  pypy-1.5-src</span><br><span class="line">  pypy-1.5</span><br><span class="line">  pypy-1.6</span><br><span class="line">  pypy-1.7</span><br><span class="line">  pypy-1.8</span><br><span class="line">  pypy-1.9</span><br><span class="line">  pypy-2.0-src</span><br><span class="line">  pypy-2.0</span><br><span class="line">  pypy-2.0.1-src</span><br><span class="line">  pypy-2.0.1</span><br><span class="line">  pypy-2.0.2-src</span><br><span class="line">  pypy-2.0.2</span><br><span class="line">  pypy-2.1-src</span><br><span class="line">  pypy-2.1</span><br><span class="line">  pypy-2.2-src</span><br><span class="line">  pypy-2.2</span><br><span class="line">  pypy-2.2.1-src</span><br><span class="line">  pypy-2.2.1</span><br><span class="line">  pypy-2.3-src</span><br><span class="line">  pypy-2.3</span><br><span class="line">  pypy-2.3.1-src</span><br><span class="line">  pypy-2.3.1</span><br><span class="line">  pypy-2.4.0-src</span><br><span class="line">  pypy-2.4.0</span><br><span class="line">  pypy-2.5.0-src</span><br><span class="line">  pypy-2.5.0</span><br><span class="line">  pypy-2.5.1-src</span><br><span class="line">  pypy-2.5.1</span><br><span class="line">  pypy-2.6.0-src</span><br><span class="line">  pypy-2.6.0</span><br><span class="line">  pypy-2.6.1-src</span><br><span class="line">  pypy-2.6.1</span><br><span class="line">  pypy-4.0.0-src</span><br><span class="line">  pypy-4.0.0</span><br><span class="line">  pypy-4.0.1-src</span><br><span class="line">  pypy-4.0.1</span><br><span class="line">  pypy-5.0.0-src</span><br><span class="line">  pypy-5.0.0</span><br><span class="line">  pypy-5.0.1-src</span><br><span class="line">  pypy-5.0.1</span><br><span class="line">  pypy-5.1-src</span><br><span class="line">  pypy-5.1</span><br><span class="line">  pypy-5.1.1-src</span><br><span class="line">  pypy-5.1.1</span><br><span class="line">  pypy-5.3-src</span><br><span class="line">  pypy-5.3</span><br><span class="line">  pypy-5.3.1-src</span><br><span class="line">  pypy-5.3.1</span><br><span class="line">  pypy-5.4-src</span><br><span class="line">  pypy-5.4</span><br><span class="line">  pypy-5.4.1-src</span><br><span class="line">  pypy-5.4.1</span><br><span class="line">  pypy-5.6.0-src</span><br><span class="line">  pypy-5.6.0</span><br><span class="line">  pypy-5.7.0-src</span><br><span class="line">  pypy-5.7.0</span><br><span class="line">  pypy-5.7.1-src</span><br><span class="line">  pypy-5.7.1</span><br><span class="line">  pypy2-5.3-src</span><br><span class="line">  pypy2-5.3</span><br><span class="line">  pypy2-5.3.1-src</span><br><span class="line">  pypy2-5.3.1</span><br><span class="line">  pypy2-5.4-src</span><br><span class="line">  pypy2-5.4</span><br><span class="line">  pypy2-5.4.1-src</span><br><span class="line">  pypy2-5.4.1</span><br><span class="line">  pypy2-5.6.0-src</span><br><span class="line">  pypy2-5.6.0</span><br><span class="line">  pypy2-5.7.0-src</span><br><span class="line">  pypy2-5.7.0</span><br><span class="line">  pypy2-5.7.1-src</span><br><span class="line">  pypy2-5.7.1</span><br><span class="line">  pypy2.7-5.8.0-src</span><br><span class="line">  pypy2.7-5.8.0</span><br><span class="line">  pypy2.7-5.9.0-src</span><br><span class="line">  pypy2.7-5.9.0</span><br><span class="line">  pypy2.7-5.10.0-src</span><br><span class="line">  pypy2.7-5.10.0</span><br><span class="line">  pypy2.7-6.0.0-src</span><br><span class="line">  pypy2.7-6.0.0</span><br><span class="line">  pypy3-dev</span><br><span class="line">  pypy3-2.3.1-src</span><br><span class="line">  pypy3-2.3.1</span><br><span class="line">  pypy3-2.4.0-src</span><br><span class="line">  pypy3-2.4.0</span><br><span class="line">  pypy3.3-5.2-alpha1-src</span><br><span class="line">  pypy3.3-5.2-alpha1</span><br><span class="line">  pypy3.3-5.5-alpha-src</span><br><span class="line">  pypy3.3-5.5-alpha</span><br><span class="line">  pypy3.5-c-jit-latest</span><br><span class="line">  pypy3.5-5.7-beta-src</span><br><span class="line">  pypy3.5-5.7-beta</span><br><span class="line">  pypy3.5-5.7.1-beta-src</span><br><span class="line">  pypy3.5-5.7.1-beta</span><br><span class="line">  pypy3.5-5.8.0-src</span><br><span class="line">  pypy3.5-5.8.0</span><br><span class="line">  pypy3.5-5.9.0-src</span><br><span class="line">  pypy3.5-5.9.0</span><br><span class="line">  pypy3.5-5.10.0-src</span><br><span class="line">  pypy3.5-5.10.0</span><br><span class="line">  pypy3.5-5.10.1-src</span><br><span class="line">  pypy3.5-5.10.1</span><br><span class="line">  pypy3.5-6.0.0-src</span><br><span class="line">  pypy3.5-6.0.0</span><br><span class="line">  pyston-0.5.1</span><br><span class="line">  pyston-0.6.0</span><br><span class="line">  pyston-0.6.1</span><br><span class="line">  stackless-dev</span><br><span class="line">  stackless-2.7-dev</span><br><span class="line">  stackless-2.7.2</span><br><span class="line">  stackless-2.7.3</span><br><span class="line">  stackless-2.7.4</span><br><span class="line">  stackless-2.7.5</span><br><span class="line">  stackless-2.7.6</span><br><span class="line">  stackless-2.7.7</span><br><span class="line">  stackless-2.7.8</span><br><span class="line">  stackless-2.7.9</span><br><span class="line">  stackless-2.7.10</span><br><span class="line">  stackless-2.7.11</span><br><span class="line">  stackless-2.7.12</span><br><span class="line">  stackless-2.7.14</span><br><span class="line">  stackless-3.2.2</span><br><span class="line">  stackless-3.2.5</span><br><span class="line">  stackless-3.3.5</span><br><span class="line">  stackless-3.3.7</span><br><span class="line">  stackless-3.4-dev</span><br><span class="line">  stackless-3.4.1</span><br><span class="line">  stackless-3.4.2</span><br><span class="line">  stackless-3.4.7</span><br><span class="line">  stackless-3.5.4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 选择 Python 所需版本 </span></span><br><span class="line">pyenv install 2.7.15</span><br><span class="line">pyenv install 3.6.7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化</span></span><br><span class="line">pyenv init</span><br><span class="line"><span class="comment"># Load pyenv automatically by appending</span></span><br><span class="line"><span class="comment"># the following to ~/.zshrc:</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">eval</span> <span class="string">"<span class="variable">$(pyenv init -)</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启 zsh</span></span><br><span class="line"><span class="built_in">exec</span> <span class="string">"<span class="variable">$SHELL</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换版本</span></span><br><span class="line">pyenv global 2.7.15</span><br><span class="line">pyenv shell 3.6.7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看版本</span></span><br><span class="line">pyenv versions</span><br><span class="line">  system</span><br><span class="line">  2.7.15</span><br><span class="line">* 3.6.7 (<span class="built_in">set</span> by PYENV_VERSION environment variable)</span><br><span class="line"></span><br><span class="line"><span class="comment"># pyenv 常用的命令说明</span></span><br><span class="line"></span><br><span class="line"> 使用方式: pyenv &lt; 命令 & gt; [&lt; 参数 & gt;]</span><br><span class="line"></span><br><span class="line">命令:</span><br><span class="line">   commands    查看所有命令</span><br><span class="line">   <span class="built_in">local</span>       设置或显示本地的 Python 版本</span><br><span class="line">   global      设置或显示全局 Python 版本</span><br><span class="line">   shell       设置或显示 shell 指定的 Python 版本</span><br><span class="line">   install     安装指定 Python 版本</span><br><span class="line">   uninstall   卸载指定 Python 版本)</span><br><span class="line">   version     显示当前的 Python 版本及其本地路径</span><br><span class="line">   versions    查看所有已经安装的版本</span><br><span class="line">   <span class="built_in">which</span>       显示安装路径</span><br><span class="line"></span><br><span class="line">pyenv</span><br><span class="line">pyenv 1.2.8</span><br><span class="line">Usage: pyenv &lt;<span class="built_in">command</span>&gt; [&lt;args&gt;]</span><br><span class="line"></span><br><span class="line">Some useful pyenv commands are:</span><br><span class="line">   commands    List all available pyenv commands</span><br><span class="line">   <span class="built_in">local</span>       Set or show the <span class="built_in">local</span> application-specific Python version</span><br><span class="line">   global      Set or show the global Python version</span><br><span class="line">   shell       Set or show the shell-specific Python version</span><br><span class="line">   install     Install a Python version using python-build</span><br><span class="line">   uninstall   Uninstall a specific Python version</span><br><span class="line">   <span class="built_in">rehash</span>      Rehash pyenv shims (run this after installing executables)</span><br><span class="line">   version     Show the current Python version and its origin</span><br><span class="line">   versions    List all Python versions available to pyenv</span><br><span class="line">   <span class="built_in">which</span>       Display the full path to an executable</span><br><span class="line">   <span class="built_in">whence</span>      List all Python versions that contain the given executable</span><br><span class="line"></span><br><span class="line">See `pyenv <span class="built_in">help</span> &lt;<span class="built_in">command</span>&gt;<span class="string">'for information on a specific command.</span></span><br><span class="line"><span class="string">For full documentation, see: https://github.com/pyenv/pyenv#readme</span></span><br></pre></td></tr></table></figure><h2 id="Mac-中安装-PySpider"><a href="#Mac-中安装-PySpider" class="headerlink" title="Mac 中安装 PySpider"></a>Mac 中安装 PySpider</h2><blockquote><p>在 PySpider 支持 Python3.7 之前只能暂时降级 Python</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 pyenv 切换 python 版本</span></span><br><span class="line">brew install pyenv</span><br><span class="line">pyenv install 3.6.7</span><br><span class="line">pyenv shell 3.6.7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 PySpider 虚拟环境</span></span><br><span class="line">mkdir pyspider</span><br><span class="line"><span class="built_in">cd</span> pyspider</span><br><span class="line">python -m venv venv</span><br><span class="line"><span class="built_in">source</span> venv/bin/active</span><br><span class="line">pip install pyspider</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装期间出现 SSL 或 pycurl 错误</span></span><br><span class="line">__main__.ConfigurationError: Curl is configured to use SSL, but we have not been able to determine <span class="built_in">which</span> SSL backend it is using. Please see PycURL documentation <span class="keyword">for</span> how to specify the SSL backend manually.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决方法</span></span><br><span class="line">pip uninstall pycurl</span><br><span class="line"><span class="built_in">export</span> PYCURL_SSL_LIBRARY=openssl</span><br><span class="line"><span class="built_in">export</span> LDFLAGS=-L/usr/<span class="built_in">local</span>/opt/openssl/lib;<span class="built_in">export</span> CPPFLAGS=-I/usr/<span class="built_in">local</span>/opt/openssl/include;pip install pycurl --compile --no-cache-dir</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新安装并运行 pyspider</span></span><br><span class="line">pip install pyspider</span><br><span class="line"></span><br><span class="line">pyspider</span><br><span class="line">[W 181217 15:23:35 run:413] phantomjs not found, <span class="built_in">continue</span> running without it.</span><br><span class="line">[I 181217 15:23:37 result_worker:49] result_worker starting...</span><br><span class="line">[I 181217 15:23:37 processor:211] processor starting...</span><br><span class="line">[I 181217 15:23:37 tornado_fetcher:638] fetcher starting...</span><br><span class="line">[I 181217 15:23:37 scheduler:647] scheduler starting...</span><br><span class="line">[I 181217 15:23:37 scheduler:782] scheduler.xmlrpc listening on 127.0.0.1:23333</span><br><span class="line">[I 181217 15:23:37 scheduler:586] <span class="keyword">in</span> 5m: new:0,success:0,retry:0,failed:0</span><br><span class="line">[I 181217 15:23:37 app:76] webui running on 0.0.0.0:5000</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      macOS 使用 pyenv 安装和管理多个 Python 版本
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
</feed>
